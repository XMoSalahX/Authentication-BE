var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.628,1,2.387]],["body/controllers/AppController.html",[0,2.543,1,3.727,2,2.002,3,0.208,4,0.263,5,0.182,6,3.932,7,0.441,8,1.465,9,5.773,10,5.148,11,2.409,12,0.019,13,4.579,14,0.874,15,4.579,16,1.395,17,4.579,18,4.579,19,0.549,20,0.899,21,3.548,22,3.932,23,4.994,24,3.507,25,3.189,26,2.244,27,4.05,28,3.507,29,3.507,30,2.935,31,3.932,32,2.724,33,3.507,34,2.935,35,4.579,36,4.579,37,3.507,38,3.507,39,3.507,40,0.263,41,0.141,42,2.543,43,1.546,44,1.328,45,4.579,46,4.579,47,4.579,48,4.994,49,4.579,50,3.932,51,3.932,52,0.014,53,0.014]],["title/modules/AppModule.html",[54,1.463,55,2.593]],["body/modules/AppModule.html",[1,3.509,2,2.07,3,0.153,4,0.193,5,0.134,8,0.848,12,0.019,14,0.506,16,0.808,19,0.562,20,0.661,21,3.603,22,2.892,40,0.193,41,0.104,52,0.012,53,0.012,54,2.151,55,5.111,56,1.65,57,1.557,58,1.87,59,1.87,60,1.65,61,3.04,62,1.87,63,2.892,64,2.892,65,2.892,66,3.86,67,3.86,68,4.159,69,3.86,70,3.86,71,2.629,72,1.754,73,1.754,74,3.367,75,2.816,76,3.367,77,4.733,78,5.937,79,3.367,80,0.89,81,0.808,82,0.524,83,0.732,84,3.367,85,2.158,86,4.733,87,3.367,88,2.158,89,2.003,90,3.367,91,2.158,92,3.367,93,2.345,94,3.367,95,2.892,96,4.701,97,2.158,98,3.034,99,3.367,100,3.367,101,2.892,102,2.892,103,2.892,104,4.065,105,3.367,106,2.345,107,2.345,108,2.579,109,3.509,110,2.345,111,3.367,112,2.892,113,2.579,114,2.892,115,2.579,116,2.579,117,2.892,118,1.195,119,3.367,120,2.892,121,3.367,122,2.892,123,2.345,124,2.892,125,2.345,126,3.367,127,3.367,128,3.367,129,1.323,130,2.579,131,3.367,132,2.579,133,3.367,134,2.892,135,3.367,136,1.87,137,3.367,138,3.367,139,3.367,140,3.367,141,2.579,142,3.367,143,2.892,144,3.296,145,4.065,146,1.395,147,3.367,148,3.367]],["title/injectables/AppService.html",[21,2.068,149,0.809]],["body/injectables/AppService.html",[3,0.244,4,0.307,5,0.213,7,0.517,8,1.614,10,5.438,12,0.019,14,0.805,16,1.285,19,0.488,20,1.052,21,3.558,40,0.307,41,0.165,44,1.223,52,0.016,53,0.016,149,1.392,150,2.343,151,4.601,152,5.357,153,1.195,154,4.601,155,5.357,156,5.357]],["title/controllers/AuthController.html",[0,1.628,157,2.387]],["body/controllers/AuthController.html",[0,1.648,2,1.079,3,0.112,4,0.142,5,0.098,7,0.238,8,0.949,11,2.282,12,0.019,14,0.828,16,1.322,19,0.537,20,0.485,23,3.236,24,1.89,25,1.719,26,1.209,27,3.563,28,1.89,29,1.89,30,1.582,31,2.119,32,1.468,34,1.582,37,1.89,38,1.89,39,1.89,40,0.142,41,0.076,42,1.37,43,0.833,44,1.044,52,0.009,53,0.009,80,1.457,81,1.494,82,0.61,83,1.197,106,1.719,107,1.719,108,1.89,115,1.89,118,1.815,122,4.732,124,5.594,125,4.83,153,0.853,157,2.415,158,2.119,159,3.768,160,2.384,161,3.501,162,3.925,163,3.236,164,3.236,165,2.468,166,3.617,167,3.768,168,2.468,169,2.468,170,3.993,171,3.993,172,3.918,173,3.723,174,2.468,175,2.93,176,2.468,177,2.383,178,1.89,179,4.613,180,3.146,181,3.873,182,3.594,183,4.045,184,2.468,185,2.468,186,2.093,187,2.468,188,1.468,189,2.468,190,3.873,191,2.468,192,2.468,193,2.468,194,1.89,195,3.226,196,3.768,197,2.468,198,2.468,199,1.962,200,2.468,201,3.563,202,2.468,203,1.999,204,2.468,205,3.837,206,1.582,207,2.119,208,2.119,209,1.89,210,2.468,211,4.57,212,2.538,213,2.119,214,4.57,215,3.768,216,2.119,217,1.719,218,5.808,219,2.468,220,2.468,221,3.501,222,2.468,223,1.582,224,2.119,225,1.285,226,1.582,227,2.468,228,1.89,229,2.468,230,2.119,231,2.468,232,2.119,233,2.468,234,1.285,235,1.141,236,2.468,237,2.468,238,3.768,239,2.468,240,2.468,241,2.468,242,1.211,243,2.415,244,2.468,245,2.468,246,2.468,247,3.768,248,3.768,249,3.236,250,1.742,251,2.468,252,2.468,253,2.468,254,3.236,255,2.468,256,2.468,257,2.468,258,2.468,259,2.468,260,2.468,261,2.468,262,2.468,263,2.468,264,1.89]],["title/modules/AuthModule.html",[54,1.463,66,2.215]],["body/modules/AuthModule.html",[2,2.347,3,0.184,4,0.232,5,0.161,12,0.019,19,0.558,20,0.795,40,0.232,41,0.125,52,0.013,53,0.013,54,2.367,56,1.984,57,1.872,58,2.248,59,2.248,60,1.984,61,3.345,62,2.248,66,4.384,67,4.08,69,4.08,70,4.08,71,2.981,72,2.108,73,2.108,75,3.583,88,3.441,89,2.408,95,3.477,96,5.172,97,2.595,102,3.477,103,3.477,144,3.739,145,4.61,157,3.861,160,1.436,212,3.809,213,3.477,265,3.477,266,4.048,267,3.477,268,4.048,269,4.048,270,4.048,271,2.819,272,4.467,273,3.441,274,4.048,275,3.441,276,4.048,277,4.048,278,2.819,279,2.819,280,4.048,281,2.408]],["title/injectables/AuthService.html",[149,0.809,212,2.068]],["body/injectables/AuthService.html",[3,0.092,4,0.117,5,0.081,7,0.196,8,0.816,12,0.019,14,0.806,16,1.207,19,0.522,20,0.4,40,0.117,41,0.063,43,1.555,44,1.149,52,0.008,53,0.008,80,1.417,81,1.286,82,0.594,83,1.165,118,1.635,123,1.417,125,1.417,129,0.799,149,0.704,150,0.889,153,1.122,160,2.366,161,3.093,162,3.469,163,2.783,164,2.783,166,3.242,170,1.304,171,2.589,173,1.304,177,2.558,178,1.558,179,3.733,180,3.04,181,3.225,182,3.345,183,3.208,188,1.21,194,2.482,195,2.794,199,2.103,203,2.552,206,2.589,212,1.8,216,1.747,217,1.417,223,1.304,225,1.059,230,1.747,242,1.722,243,4.225,249,2.783,250,2.911,264,2.482,271,1.417,279,1.417,282,1.747,283,3.24,284,1.417,285,1.747,286,2.627,287,2.6,288,2.928,289,4.306,290,2.034,291,3.24,292,2.627,293,2.034,294,0.941,295,0.799,296,3.469,297,2.482,298,2.399,299,2.034,300,1.747,301,2.034,302,2.034,303,2.783,304,2.034,305,2.257,306,2.257,307,1.8,308,1.558,309,1.747,310,2.034,311,2.034,312,1.558,313,2.034,314,2.482,315,2.034,316,1.558,317,2.034,318,2.034,319,1.21,320,1.417,321,1.304,322,1.13,323,1.417,324,1.21,325,1.417,326,2.482,327,3.093,328,2.034,329,1.21,330,1.417,331,0.997,332,1.417,333,2.257,334,3.24,335,2.034,336,2.034,337,2.034,338,4.039,339,3.208,340,2.257,341,3.469,342,2.783,343,3.24,344,1.13,345,2.034,346,5.03,347,3.24,348,2.034,349,2.034,350,1.747,351,1.928,352,1.747,353,2.034,354,2.034,355,2.257,356,2.034,357,1.747,358,2.783,359,2.034,360,2.034,361,2.482,362,2.257,363,2.783,364,1.558,365,1.558,366,1.558,367,2.034,368,2.034,369,1.747,370,1.747,371,2.034,372,2.034,373,2.034,374,2.034,375,1.21,376,2.034,377,2.034,378,1.558,379,4.039,380,2.034,381,2.034,382,2.034,383,2.034,384,2.034,385,2.034,386,1.558,387,1.417,388,1.558,389,2.034,390,1.747,391,1.747,392,3.24,393,3.24,394,3.24,395,3.24,396,2.034,397,3.24,398,2.482,399,2.257,400,2.783,401,2.783,402,2.482,403,2.783,404,2.482,405,2.034,406,3.24,407,1.747,408,2.034,409,3.24,410,2.034,411,1.747,412,2.034,413,1.21,414,1.558,415,1.747,416,2.034,417,2.034,418,2.034,419,2.034,420,1.558,421,1.747,422,1.558,423,2.034,424,2.034,425,1.747]],["title/classes/BaseAbstractRepository.html",[41,0.115,426,2.593]],["body/classes/BaseAbstractRepository.html",[3,0.088,4,0.111,5,0.077,7,0.187,8,0.784,12,0.019,14,0.966,16,1.489,19,0.237,40,0.179,41,0.06,44,1.259,52,0.008,53,0.008,80,1.672,81,1.517,82,0.722,83,1.374,118,1.589,129,1.929,143,4.503,153,0.729,160,2.582,188,3.119,199,2.332,235,1.44,242,1.439,250,2.87,284,0.846,294,2.071,295,1.76,298,3.536,426,2.169,427,0.564,428,1.482,429,0.865,430,3.759,431,4.754,432,4.973,433,1.853,434,2.675,435,3.356,436,3.356,437,3.356,438,3.356,439,2.993,440,3.356,441,3.356,442,3.356,443,3.356,444,3.114,445,3.114,446,2.675,447,4.734,448,4.734,449,1.936,450,1.996,451,2.675,452,3.429,453,1.936,454,1.662,455,6.368,456,5.025,457,1.936,458,1.662,459,1.936,460,2.675,461,5.331,462,2.505,463,5.216,464,1.936,465,1.662,466,3.846,467,4.734,468,1.853,469,1.936,470,3.356,471,2.675,472,1.936,473,2.675,474,6.177,475,1.936,476,1.662,477,1.936,478,1.662,479,1.936,480,1.662,481,1.936,482,1.662,483,1.936,484,2.675,485,1.241,486,4.215,487,1.936,488,4.907,489,3.907,490,3.114,491,1.936,492,4.907,493,1.936,494,3.114,495,1.936,496,1.936,497,1.482,498,1.348,499,3.114,500,3.114,501,1.936,502,1.936,503,1.936,504,1.936,505,1.936,506,1.936,507,1.936,508,1.936,509,1.348,510,1.936,511,1.936,512,1.936,513,3.114,514,1.936,515,1.936,516,1.936,517,1.936,518,1.936,519,1.936,520,1.936,521,1.936,522,1.936,523,3.114,524,2.675,525,1.936,526,1.936,527,1.936,528,1.936,529,3.114,530,1.936]],["title/classes/BaseResponse.html",[30,2.387,41,0.115]],["body/classes/BaseResponse.html",[3,0.218,4,0.274,5,0.19,7,0.461,8,1.506,12,0.019,14,0.719,16,1.148,30,3.832,40,0.274,41,0.148,44,1.092,52,0.015,53,0.015,80,1.265,81,1.148,82,0.53,83,1.04,113,4.993,153,1.216,180,3.395,205,4.163,292,3.445,294,2.212,295,1.88,427,1.394,531,4.109,532,5.599,533,4.784,534,4.896,535,6.158,536,4.039,537,4.784,538,5.134,539,5.134,540,4.109]],["title/classes/Cache.html",[41,0.115,351,2.215]],["body/classes/Cache.html",[3,0.265,4,0.334,5,0.232,12,0.018,40,0.334,41,0.18,52,0.017,53,0.017,351,4.004,427,1.699,541,5.006]],["title/controllers/CacheController.html",[0,1.628,542,2.593]],["body/controllers/CacheController.html",[0,2.343,2,2.343,3,0.244,4,0.307,5,0.213,12,0.019,19,0.522,20,1.052,24,4.103,25,3.731,26,2.626,37,4.103,38,4.103,39,4.103,40,0.307,41,0.165,42,2.975,43,1.808,52,0.016,53,0.016,287,3.169,351,3.187,542,4.461,543,4.601,544,5.357,545,4.601,546,5.357,547,5.357]],["title/modules/CacheModule.html",[54,1.463,67,2.215]],["body/modules/CacheModule.html",[2,2.436,3,0.195,4,0.246,5,0.17,12,0.019,19,0.518,20,0.841,40,0.246,41,0.132,44,0.978,52,0.014,53,0.014,54,2.433,56,2.099,57,1.98,58,2.378,59,2.378,60,2.099,61,3.438,62,3.438,67,4.278,71,3.093,72,2.23,73,2.23,75,2.548,88,2.745,89,2.548,109,4.66,110,2.983,116,3.28,129,1.683,130,3.28,132,3.28,134,3.678,136,2.378,144,2.983,272,4.566,278,2.983,281,2.548,287,3.437,450,2.745,542,4.311,545,3.678,548,3.678,549,3.678,550,3.678,551,4.283,552,4.283,553,4.283,554,4.283,555,4.283,556,4.283,557,4.283,558,3.678,559,4.283,560,4.283,561,4.283,562,4.283,563,4.283,564,4.283,565,3.678,566,4.283,567,4.283,568,4.283,569,3.678]],["title/injectables/CacheService.html",[149,0.809,287,1.722]],["body/injectables/CacheService.html",[3,0.163,4,0.206,5,0.142,7,0.346,8,1.246,12,0.019,14,0.962,16,1.464,19,0.377,20,0.705,40,0.206,41,0.111,43,1.211,44,1.13,52,0.012,53,0.012,80,1.693,81,1.536,82,0.709,83,1.391,109,2.299,110,2.498,149,1.075,150,1.569,153,1.349,160,2.565,199,1.868,242,1.589,250,2.96,281,2.134,284,1.569,287,2.287,292,3.243,295,2.665,298,2.576,333,1.758,357,4.862,462,3.629,570,3.081,571,4.946,572,4.946,573,4.946,574,4.946,575,3.587,576,5.661,577,3.587,578,4.946,579,4.946,580,3.587,581,4.723,582,4.946,583,3.587,584,4.946,585,6.91,586,3.587,587,4.946,588,3.587,589,3.587,590,3.587,591,3.587,592,3.587,593,3.587,594,3.587,595,4.946,596,3.587,597,3.587,598,2.498,599,3.943,600,3.081,601,3.587,602,3.587,603,4.248,604,2.747,605,5.661,606,3.587,607,3.587,608,3.587,609,3.587,610,3.587,611,3.587,612,3.587,613,3.587]],["title/injectables/CorsMiddleware.html",[93,2.593,149,0.809]],["body/injectables/CorsMiddleware.html",[3,0.219,4,0.276,5,0.191,7,0.465,8,1.513,12,0.019,14,0.724,16,1.156,19,0.458,20,0.947,40,0.276,41,0.149,52,0.015,53,0.015,80,1.275,81,1.156,82,0.534,83,1.047,85,3.09,93,4.183,146,1.997,149,1.305,150,2.108,179,4.556,180,3.566,225,2.51,242,1.549,294,2.229,509,4.769,598,4.183,614,4.14,615,5.158,616,3.166,617,5.244,618,4.82,619,4.14,620,4.6,621,4.769,622,4.82,623,4.14,624,4.82,625,4.14,626,4.14]],["title/classes/CreateCacheDto.html",[41,0.115,627,2.593]],["body/classes/CreateCacheDto.html",[3,0.237,4,0.299,5,0.207,7,0.503,11,2.61,12,0.019,14,0.947,19,0.397,40,0.299,41,0.194,52,0.016,53,0.016,82,0.698,153,1.313,295,2.661,427,1.519,429,1.749,581,4.717,627,4.388,628,5.816,629,3.992,630,5.017,631,5.212,632,5.212,633,2.048]],["title/classes/CreateUserDto.html",[41,0.115,195,2.068]],["body/classes/CreateUserDto.html",[3,0.192,4,0.242,5,0.168,7,0.407,11,2.702,12,0.019,14,0.98,19,0.421,33,3.237,40,0.242,41,0.17,52,0.014,53,0.014,81,1.564,82,0.722,136,3.416,153,1.295,195,3.067,203,2.69,235,3.316,344,3.416,427,1.232,429,1.533,534,4.542,633,1.661,634,5.812,635,3.237,636,4.711,637,4.711,638,4.226,639,5.522,640,5.522,641,6.522,642,5.522,643,5.522,644,4.226,645,4.743,646,4.743,647,4.226,648,3.63,649,4.229,650,4.743,651,4.743,652,4.743,653,4.743,654,4.226,655,4.711,656,4.743,657,4.226,658,2.709,659,4.743,660,4.226,661,4.743,662,4.226,663,4.226]],["title/modules/DatabaseModule.html",[54,1.463,68,2.387]],["body/modules/DatabaseModule.html",[3,0.203,4,0.256,5,0.177,12,0.019,19,0.507,20,0.877,40,0.256,41,0.138,44,1.019,52,0.014,53,0.014,54,2.481,56,2.187,57,2.063,58,2.478,59,2.478,60,2.187,61,3.506,62,2.478,68,4.515,71,3.176,72,2.324,73,2.324,75,3.402,88,3.666,89,2.654,116,3.417,117,3.832,118,1.583,272,4.637,278,3.108,281,2.654,331,2.187,355,3.108,664,3.832,665,3.832,666,4.515,667,4.462,668,3.832,669,2.654,670,4.462,671,4.462,672,4.462,673,4.462,674,4.462,675,4.462,676,3.832,677,4.462,678,5.719,679,4.462,680,4.462,681,4.912,682,5.719,683,3.832,684,3.832,685,3.832,686,4.462,687,4.38,688,4.462,689,4.462,690,4.462,691,4.462]],["title/injectables/DatabaseService.html",[149,0.809,666,2.387]],["body/injectables/DatabaseService.html",[3,0.2,4,0.252,5,0.175,7,0.424,8,1.428,12,0.019,14,0.995,16,1.504,19,0.478,20,0.864,40,0.252,41,0.136,43,1.485,44,1.005,52,0.014,53,0.014,80,1.499,81,1.36,82,0.628,83,1.232,146,1.823,149,1.232,150,1.924,153,1.17,160,2.49,188,2.618,250,2.621,284,1.924,333,2.157,485,2.821,666,3.634,669,2.618,681,6.328,692,3.779,693,6.623,694,6.623,695,7.017,696,4.4,697,4.4,698,4.4,699,5.668,700,4.4,701,5.668,702,4.4,703,4.4,704,4.4,705,4.4,706,4.4,707,4.869,708,5.668,709,4.4,710,4.4,711,4.4,712,4.4]],["title/guards/HeaderValidationGuard.html",[98,2.387,713,2.215]],["body/guards/HeaderValidationGuard.html",[3,0.206,4,0.26,5,0.18,7,0.436,8,1.454,12,0.019,14,0.68,16,1.085,19,0.51,20,0.889,40,0.26,41,0.196,44,1.033,52,0.014,53,0.014,80,1.197,81,1.085,82,0.501,83,0.983,98,3.699,118,2.048,129,1.778,146,1.874,149,1.254,160,2.255,242,2.042,250,2.092,298,3.005,305,4.019,375,2.692,413,2.692,616,2.092,633,1.778,714,2.692,715,4.956,716,3.886,717,4.29,718,4.019,719,4.29,720,4.525,721,3.151,722,3.151,723,5.771,724,3.466,725,3.205,726,4.525,727,4.525,728,3.151,729,4.525,730,4.525,731,4.525,732,3.466,733,4.525,734,3.886,735,4.525,736,4.525]],["title/interfaces/IDecodedCsrf.html",[737,2.387,738,2.593]],["body/interfaces/IDecodedCsrf.html",[3,0.234,4,0.295,5,0.204,7,0.496,12,0.018,40,0.295,52,0.015,53,0.015,82,0.776,83,1.522,153,1.361,203,3.063,292,3.576,344,3.889,429,1.735,737,3.297,738,4.353,739,3.939,740,4.417,741,6.015,742,6.015]],["title/interfaces/IRequestWithUser.html",[737,2.387,743,2.593]],["body/interfaces/IRequestWithUser.html",[3,0.244,4,0.307,5,0.213,7,0.517,12,0.019,19,0.488,40,0.307,52,0.016,53,0.016,82,0.593,177,2.802,223,3.434,225,2.79,294,2.477,429,1.778,616,3.169,737,3.434,739,4.103,743,4.773,744,4.601,745,4.461]],["title/guards/JWTAuthGuard.html",[226,2.387,713,2.215]],["body/guards/JWTAuthGuard.html",[3,0.137,4,0.173,5,0.12,7,0.291,8,1.103,12,0.019,14,0.658,16,0.724,19,0.521,20,0.593,40,0.173,41,0.093,43,1.478,44,0.689,52,0.011,53,0.011,80,1.158,81,1.05,82,0.485,83,0.951,118,1.553,146,1.25,149,0.951,153,1.167,160,1.828,166,2.431,190,2.806,203,1.914,206,1.935,223,1.935,224,2.592,226,2.806,235,1.396,242,2.124,250,2.382,284,1.914,285,2.592,286,3.066,287,2.984,298,2.28,306,3.049,307,1.676,308,2.312,309,2.592,312,2.312,322,1.676,323,2.102,324,1.795,325,2.102,329,1.795,330,2.102,331,1.479,332,2.102,333,2.145,342,2.592,344,2.431,364,2.312,365,2.312,366,2.312,375,1.795,391,2.592,422,2.312,536,1.676,616,1.396,714,1.795,717,3.622,718,3.049,719,3.622,721,2.102,728,2.102,746,2.592,747,3.018,748,3.018,749,2.592,750,3.018,751,3.018,752,3.018,753,6.255,754,3.018,755,3.018,756,5.15,757,2.592,758,2.592,759,3.018,760,3.018,761,5.15,762,1.676,763,3.018,764,3.018,765,3.018,766,4.377,767,3.018,768,2.592,769,4.423,770,2.592,771,4.377,772,4.377,773,4.377,774,4.377,775,3.018,776,3.018,777,2.592,778,5.649,779,3.018,780,3.018,781,3.018,782,3.018,783,2.592,784,2.592,785,4.377,786,3.353,787,2.592,788,4.377,789,3.018,790,2.592,791,3.018,792,3.018,793,3.018,794,4.377,795,4.377,796,2.102,797,3.018,798,3.018,799,3.018,800,2.102,801,3.018,802,2.312]],["title/guards/JWTDecodedAuthGuard.html",[275,2.387,713,2.215]],["body/guards/JWTDecodedAuthGuard.html",[3,0.099,4,0.124,5,0.086,7,0.209,8,0.859,12,0.019,14,0.78,16,1.145,19,0.51,20,0.426,28,1.662,29,1.662,40,0.124,41,0.067,43,1.422,44,1.316,52,0.008,53,0.008,80,1.373,81,1.245,82,0.575,83,1.128,85,2.186,97,1.391,118,2.119,146,0.899,149,0.741,153,0.969,160,1.955,166,2.883,170,1.391,171,3.328,177,0.81,180,2.87,183,4.378,186,1.205,223,1.391,225,1.13,242,2.211,250,2.4,271,1.511,275,2.186,279,3.615,284,1.491,287,2.666,289,4.221,298,2.487,307,1.205,308,1.662,312,1.662,319,2.029,320,1.511,321,1.391,322,1.205,323,1.511,324,1.291,325,1.511,329,1.291,330,1.511,331,2.926,332,1.511,333,3.192,362,2.934,364,1.662,365,1.662,366,1.662,398,1.662,399,1.511,400,1.863,401,1.863,402,1.662,403,1.863,404,1.662,411,1.863,420,3.657,421,1.863,422,1.662,536,1.205,616,2.963,714,1.291,717,3.061,718,2.375,719,3.061,721,1.511,728,1.511,738,3.615,741,1.863,742,1.863,743,1.511,757,1.863,758,1.863,768,2.929,769,1.863,770,1.863,777,1.863,802,1.662,803,1.863,804,3.41,805,4.213,806,3.41,807,2.169,808,4.951,809,2.169,810,2.169,811,3.41,812,2.169,813,2.169,814,5.764,815,2.169,816,3.41,817,2.169,818,6.141,819,1.662,820,2.169,821,1.662,822,2.169,823,2.169,824,4.213,825,1.863,826,3.618,827,2.169,828,3.41,829,2.169,830,2.169,831,2.929,832,2.169,833,2.169,834,2.169,835,2.169,836,2.929,837,2.934,838,2.169,839,3.227,840,2.169,841,4.213,842,2.169,843,1.662,844,2.169,845,2.169,846,3.41,847,2.169,848,2.169,849,3.41,850,2.169,851,3.41,852,2.169,853,3.41,854,2.169,855,3.41,856,2.169,857,2.169,858,2.169,859,2.186,860,2.169,861,2.169,862,2.169,863,2.169,864,2.169,865,2.169,866,2.169,867,2.169,868,1.662,869,2.169,870,1.863,871,2.169,872,2.169,873,2.169,874,2.169,875,2.169,876,2.929,877,3.41,878,2.169,879,2.169,880,3.41,881,2.169,882,3.41,883,3.41,884,3.41,885,2.169,886,2.169,887,3.41,888,2.169,889,4.213,890,2.169]],["title/classes/JwtHeaders.html",[41,0.115,891,2.852]],["body/classes/JwtHeaders.html",[3,0.246,4,0.311,5,0.215,7,0.522,11,2.244,12,0.019,14,0.814,19,0.413,40,0.311,41,0.199,52,0.016,53,0.016,82,0.6,153,1.203,427,1.579,429,1.79,633,2.129,831,5.914,891,4.939,892,5.539,893,4.15,894,6.885,895,5.418]],["title/injectables/LoggerMiddleware.html",[91,2.387,149,0.809]],["body/injectables/LoggerMiddleware.html",[3,0.19,4,0.24,5,0.166,7,0.403,8,1.381,12,0.019,14,0.824,16,1.003,19,0.418,20,0.821,40,0.24,41,0.129,43,2.065,52,0.014,53,0.014,80,1.105,81,1.003,82,0.463,83,0.908,85,3.515,91,3.515,129,2.155,146,1.732,149,1.191,150,1.828,180,3.726,181,3.515,205,4.261,225,2.177,242,2.087,294,1.933,295,1.643,296,3.59,333,2.998,429,1.522,509,4.523,539,4.709,598,3.819,616,3.2,617,4.974,620,4.199,896,3.59,897,4.974,898,5.482,899,4.18,900,5.482,901,4.18,902,4.709,903,5.482,904,5.482,905,5.482,906,4.18,907,4.18,908,4.18,909,5.482,910,4.18,911,4.18,912,4.18,913,4.18,914,4.18,915,4.18]],["title/controllers/MailerController.html",[0,1.628,916,2.593]],["body/controllers/MailerController.html",[0,2.858,2,2.424,3,0.252,4,0.318,5,0.22,12,0.019,19,0.498,20,1.089,40,0.318,41,0.171,42,3.078,43,1.871,52,0.016,53,0.016,288,3.621,916,4.553,917,4.761,918,4.761]],["title/modules/MailerModule.html",[54,1.463,69,2.215]],["body/modules/MailerModule.html",[2,2.508,3,0.204,4,0.257,5,0.178,12,0.019,19,0.525,20,0.881,40,0.257,41,0.138,44,1.024,52,0.014,53,0.014,54,2.486,56,2.197,57,2.073,58,2.489,59,2.489,60,2.197,61,3.513,62,3.513,69,4.265,71,3.186,72,2.334,73,2.334,75,2.667,88,3.677,89,2.667,118,1.591,130,3.433,132,3.433,144,3.122,175,2.874,177,1.673,272,4.645,278,3.122,281,2.667,288,3.895,399,3.122,916,4.406,918,3.85,919,3.85,920,3.85,921,3.85,922,4.482,923,4.482,924,4.394,925,4.482,926,4.482,927,4.482,928,4.482,929,4.482,930,4.482,931,4.482]],["title/injectables/MailerService.html",[149,0.809,288,1.939]],["body/injectables/MailerService.html",[3,0.281,4,0.245,5,0.17,7,0.412,8,1.401,12,0.019,14,0.929,16,1.025,19,0.424,20,0.839,40,0.245,41,0.132,43,2.211,44,0.976,52,0.014,53,0.014,80,1.471,81,1.334,82,0.616,83,1.209,129,2.186,149,1.209,150,1.869,153,1.356,160,2.194,199,2.225,203,1.869,242,1.373,250,1.976,281,2.542,284,2.432,288,2.897,294,1.976,295,1.679,333,3.21,358,3.67,413,2.542,429,1.544,687,4.26,837,2.976,839,3.273,897,5.016,924,3.273,932,3.67,933,5.562,934,4.273,935,6.962,936,5.562,937,5.562,938,5.625,939,6.55,940,4.273,941,5.562,942,4.273,943,4.273,944,3.67,945,4.273,946,3.273,947,4.273,948,4.273,949,4.273]],["title/classes/PaginationParams.html",[41,0.115,950,2.852]],["body/classes/PaginationParams.html",[3,0.204,4,0.258,5,0.178,7,0.433,11,2.624,12,0.019,14,0.952,19,0.438,40,0.258,41,0.195,44,1.026,52,0.014,53,0.014,82,0.782,83,1.533,118,1.594,235,2.078,292,3.458,427,1.309,429,1.595,497,4.851,498,4.411,633,1.766,724,3.441,762,3.191,950,4.4,951,3.859,952,5.439,953,4.493,954,4.493,955,6.675,956,5.745,957,4.493,958,4.493,959,5.439,960,4.493,961,4.4,962,4.493,963,5.745,964,4.4,965,5.745,966,5.745,967,3.859,968,4.493]],["title/classes/RejectEmptyValuesPipe.html",[41,0.115,969,2.852]],["body/classes/RejectEmptyValuesPipe.html",[3,0.159,4,0.201,5,0.139,7,0.469,8,1.225,12,0.019,14,0.731,16,0.84,19,0.267,20,0.688,40,0.201,41,0.108,43,1.642,44,1.111,52,0.012,53,0.012,80,1.287,81,1.167,82,0.388,83,1.057,129,1.376,146,2.015,153,0.908,186,3.105,205,2.439,209,2.682,242,1.941,284,2.127,292,1.716,295,2.494,305,2.439,333,2.384,375,2.894,413,2.083,427,1.021,468,3.325,536,3.525,581,2.439,732,2.682,734,3.008,762,1.945,859,3.119,964,3.726,967,3.008,969,3.726,970,3.008,971,5.59,972,3.502,973,5.59,974,3.502,975,4.865,976,4.865,977,4.801,978,6.04,979,3.502,980,5.59,981,3.502,982,5.451,983,3.502,984,4.865,985,3.502,986,5.59,987,3.502,988,7.064,989,3.502,990,3.502,991,3.502,992,3.502,993,4.865,994,4.865,995,3.502,996,3.502,997,3.502,998,4.42,999,4.865,1000,3.502,1001,3.502,1002,3.502]],["title/classes/RequireTogetherConstraint.html",[41,0.115,1003,2.852]],["body/classes/RequireTogetherConstraint.html",[3,0.205,4,0.259,5,0.179,7,0.435,8,1.451,12,0.019,14,0.866,16,1.382,19,0.344,40,0.259,41,0.178,44,1.316,52,0.014,53,0.014,80,1.524,81,1.523,82,0.638,83,1.252,146,2.387,153,1.075,160,1.602,186,2.507,242,2.039,375,2.685,427,1.315,468,2.685,482,3.877,633,1.774,722,4.013,762,2.507,859,2.894,946,3.457,1003,4.413,1004,3.877,1005,5.451,1006,4.949,1007,5.762,1008,6.167,1009,4.514,1010,5.743,1011,5.762,1012,4.514,1013,4.949,1014,4.514,1015,4.514,1016,5.762,1017,3.877,1018,4.514,1019,4.514,1020,4.514,1021,5.762,1022,4.514,1023,4.514,1024,4.514]],["title/guards/RolesGuard.html",[273,2.387,713,2.215]],["body/guards/RolesGuard.html",[3,0.19,4,0.239,5,0.166,7,0.402,8,1.379,12,0.019,14,0.823,16,1.001,19,0.513,20,0.819,34,3.51,40,0.239,41,0.129,42,2.317,43,1.408,44,1.25,52,0.014,53,0.014,80,1.448,81,1.313,82,0.606,83,1.19,97,2.674,118,1.943,129,1.639,146,1.728,149,1.19,177,1.557,242,1.964,273,3.51,284,1.824,298,2.851,322,2.317,323,2.905,324,2.481,325,2.905,329,2.481,330,2.905,331,2.044,332,2.905,413,2.481,425,3.582,616,1.929,687,3.195,713,2.481,714,2.481,717,4.32,718,2.905,719,4.16,721,3.813,728,2.905,762,3.041,802,3.195,808,5.94,825,3.582,837,2.905,839,3.195,998,2.905,1025,3.582,1026,4.171,1027,4.171,1028,4.171,1029,6.111,1030,4.171,1031,3.582,1032,4.171,1033,4.171,1034,4.171,1035,4.171,1036,4.171,1037,4.171,1038,4.171]],["title/classes/SignInDto.html",[41,0.115,190,2.387]],["body/classes/SignInDto.html",[3,0.215,4,0.272,5,0.188,7,0.457,11,2.689,12,0.019,14,0.975,19,0.453,40,0.272,41,0.183,52,0.015,53,0.015,82,0.719,136,3.604,153,1.27,190,3.808,203,2.838,232,4.068,235,3.394,344,3.604,427,1.38,429,1.649,633,1.862,637,4.971,648,4.068,649,4.55,650,5.102,651,5.102,652,5.102,653,5.102,655,4.971,656,5.102,658,3.036,659,5.102,661,4.068,1039,4.068,1040,4.737,1041,4.737,1042,4.737]],["title/injectables/SwaggerAuthMiddleware.html",[149,0.809,1043,2.593]],["body/injectables/SwaggerAuthMiddleware.html",[3,0.206,4,0.26,5,0.18,7,0.437,8,1.456,12,0.019,14,0.682,16,1.088,19,0.485,20,0.891,40,0.26,41,0.14,44,1.036,52,0.014,53,0.014,80,1.199,81,1.088,82,0.502,83,0.986,85,2.907,146,1.879,149,1.256,150,1.983,175,2.907,179,4.43,180,3.488,225,2.362,242,1.457,509,4.665,598,4.025,615,4.964,616,3.097,617,5.13,619,3.895,620,4.427,623,3.895,626,3.895,1043,4.025,1044,3.895,1045,4.535,1046,4.535,1047,4.427,1048,5.753,1049,4.535,1050,3.895,1051,4.535,1052,4.535,1053,4.535,1054,4.535,1055,4.535,1056,3.895,1057,4.535,1058,5.779,1059,4.535,1060,4.025,1061,3.474,1062,3.474]],["title/classes/SystemControlValidationDto.html",[41,0.115,725,2.068]],["body/classes/SystemControlValidationDto.html",[3,0.205,4,0.258,5,0.179,7,0.434,11,2.768,12,0.019,14,1.004,19,0.483,26,2.207,40,0.33,41,0.196,52,0.014,53,0.014,82,0.74,153,1.389,182,2.679,234,3.479,319,3.423,320,3.137,321,2.887,427,1.312,429,1.597,621,3.137,630,5.213,633,1.77,658,2.887,725,3.195,961,4.407,1063,3.449,1064,3.974,1065,4.856,1066,4.283,1067,4.503,1068,4.503,1069,4.503,1070,4.503,1071,4.503,1072,4.941,1073,4.941,1074,3.449]],["title/classes/SystemControlValidationDto-1.html",[41,0.096,235,1.439,725,1.729]],["body/classes/SystemControlValidationDto-1.html",[3,0.224,4,0.282,5,0.195,7,0.474,11,2.735,12,0.019,14,0.992,19,0.463,40,0.282,41,0.188,52,0.015,53,0.015,82,0.731,153,1.287,234,3.438,319,3.927,321,3.153,427,1.433,429,1.688,630,5.028,633,1.933,658,3.153,725,3.377,893,3.767,1064,3.927,1066,4.232,1074,3.767,1075,5.923,1076,4.918,1077,4.224,1078,4.918,1079,4.918,1080,4.918]],["title/classes/SystemControlValidationSignInDto.html",[41,0.115,182,2.215]],["body/classes/SystemControlValidationSignInDto.html",[3,0.204,4,0.257,5,0.178,7,0.432,11,2.763,12,0.019,14,1.002,19,0.482,26,2.197,40,0.329,41,0.195,52,0.014,53,0.014,82,0.739,83,1.247,153,1.379,182,3.413,234,3.473,319,3.763,320,3.122,321,2.874,427,1.306,429,1.592,621,4.406,630,5.181,633,1.762,658,2.874,725,2.489,961,4.394,1063,3.433,1064,3.967,1065,3.433,1066,4.275,1072,4.927,1073,4.927,1074,3.433,1077,3.85,1081,4.482,1082,4.482,1083,4.482,1084,4.482,1085,4.482]],["title/classes/UniqueKeysConstraint.html",[41,0.115,1086,2.852]],["body/classes/UniqueKeysConstraint.html",[3,0.168,4,0.212,5,0.147,7,0.357,8,1.274,12,0.019,14,0.865,16,1.213,19,0.282,40,0.212,41,0.156,44,1.413,52,0.013,53,0.013,72,1.929,80,0.98,81,0.889,82,0.56,83,0.805,118,1.794,129,1.456,146,2.095,153,1.276,160,2.195,186,2.057,199,1.929,242,2.147,294,1.713,295,2.627,339,3.522,340,2.58,427,1.08,429,1.404,456,2.58,468,3.008,536,3.436,581,2.58,599,2.58,603,3.182,633,1.987,722,3.522,998,2.58,1005,4.945,1006,5.313,1008,5.313,1010,4.945,1013,4.343,1017,3.182,1086,4.41,1087,2.837,1088,6.186,1089,3.705,1090,3.705,1091,5.057,1092,3.705,1093,5.057,1094,5.313,1095,5.057,1096,3.705,1097,4.343,1098,3.705,1099,3.705,1100,4.959,1101,3.182,1102,3.182,1103,3.705,1104,3.705,1105,3.705,1106,3.705,1107,3.705,1108,3.705,1109,3.182,1110,3.705,1111,5.057,1112,5.057,1113,3.705,1114,5.057,1115,3.705,1116,3.705,1117,3.705,1118,5.057,1119,3.705,1120,2.837,1121,3.705,1122,4.343,1123,5.757,1124,3.182,1125,3.705,1126,3.705]],["title/classes/UpdateCacheDto.html",[41,0.115,1127,2.852]],["body/classes/UpdateCacheDto.html",[3,0.253,4,0.319,5,0.221,12,0.019,19,0.499,26,2.724,40,0.319,41,0.171,52,0.016,53,0.016,427,1.62,433,3.307,627,3.872,629,4.258,745,4.56,1127,5.015,1128,4.774,1129,6.547,1130,4.774,1131,5.559]],["title/classes/UpdateUserDto.html",[41,0.115,1132,2.852]],["body/classes/UpdateUserDto.html",[3,0.253,4,0.319,5,0.221,12,0.019,19,0.499,26,2.724,40,0.319,41,0.171,52,0.016,53,0.016,195,3.087,217,3.872,427,1.62,433,3.307,635,4.258,745,4.56,1130,4.774,1132,5.015,1133,4.774,1134,6.547]],["title/classes/User.html",[41,0.115,177,1.39]],["body/classes/User.html",[3,0.156,4,0.197,5,0.136,7,0.608,11,2.61,12,0.019,14,0.981,19,0.456,32,3.29,33,2.63,40,0.317,41,0.106,44,1.263,52,0.012,53,0.012,82,0.811,83,1.043,118,2.597,136,3.072,153,1.394,166,1.907,173,4.382,177,2.064,186,2.665,203,2.619,206,3.076,235,2.219,242,1.103,307,3.626,344,3.326,427,1.001,429,1.332,484,4.121,485,2.201,599,3.342,636,5.132,669,2.042,859,3.076,964,2.63,1135,2.391,1136,4.75,1137,3.433,1138,4.798,1139,3.433,1140,3.433,1141,3.433,1142,3.433,1143,4.798,1144,5.143,1145,3.433,1146,3.433,1147,6.528,1148,3.342,1149,3.433,1150,2.949,1151,3.433,1152,3.433,1153,3.433,1154,3.433,1155,4.798,1156,3.433,1157,4.798,1158,3.433,1159,3.433,1160,3.433,1161,3.433,1162,3.433,1163,3.342,1164,2.949,1165,3.433,1166,2.949]],["title/controllers/UsersController.html",[0,1.628,1167,2.593]],["body/controllers/UsersController.html",[0,2.806,2,2.349,3,0.244,4,0.308,5,0.213,12,0.019,19,0.523,20,1.055,25,3.742,26,2.633,40,0.308,41,0.166,42,2.984,43,1.814,52,0.016,53,0.016,115,4.115,234,2.798,235,2.484,286,3.362,1167,4.469,1168,4.614,1169,4.614,1170,5.372,1171,4.614]],["title/modules/UsersModule.html",[54,1.463,70,2.215]],["body/modules/UsersModule.html",[2,2.516,3,0.205,4,0.258,5,0.179,12,0.019,19,0.547,20,0.885,40,0.258,41,0.139,52,0.014,53,0.014,54,2.492,56,2.207,57,2.083,58,2.501,59,2.501,60,2.207,61,3.521,62,3.521,66,2.679,70,4.365,71,3.195,72,2.345,73,2.345,75,2.679,81,1.08,101,3.868,177,1.681,286,3.668,668,3.868,669,2.679,1148,3.137,1163,4.007,1167,4.416,1169,3.868,1172,3.868,1173,3.868,1174,3.868,1175,4.2,1176,4.503,1177,4.503,1178,3.868,1179,3.868,1180,4.503,1181,4.503]],["title/injectables/UsersRepository.html",[149,0.809,1175,2.215]],["body/injectables/UsersRepository.html",[3,0.122,4,0.154,5,0.107,7,0.259,8,1.013,12,0.019,14,1.04,16,1.621,19,0.436,20,0.528,40,0.154,41,0.083,43,0.908,52,0.01,53,0.01,80,1.81,81,1.642,82,0.767,83,1.487,149,0.874,150,1.176,153,0.75,160,2.595,166,1.493,177,1.004,188,3.57,199,2.094,284,1.758,294,2.471,295,2.1,298,3.405,333,1.318,426,4.905,429,1.116,430,3.079,431,4.764,432,5.002,433,2.392,434,3.453,435,3.453,436,3.453,437,3.453,438,3.453,439,3.079,440,3.453,441,3.453,442,3.453,443,3.453,446,2.309,447,4.589,448,4.589,450,2.577,451,2.309,452,3.079,454,2.309,455,6.323,456,4.865,458,2.309,460,2.309,461,5.154,462,2.577,463,5.154,465,2.309,466,3.453,467,3.453,468,2.392,470,2.309,471,2.309,473,2.309,474,6.093,476,2.309,478,2.309,480,2.309,485,1.724,669,1.599,745,2.8,1175,2.392,1178,2.309,1182,2.309,1183,2.688,1184,2.688,1185,4.02,1186,6.845,1187,2.688,1188,2.688,1189,2.688,1190,2.688,1191,2.688,1192,2.688,1193,2.688,1194,2.688,1195,2.688,1196,2.688,1197,2.688,1198,2.688,1199,2.688,1200,2.688,1201,2.688,1202,2.688]],["title/injectables/UsersService.html",[149,0.809,286,1.825]],["body/injectables/UsersService.html",[3,0.188,4,0.237,5,0.164,7,0.399,8,1.371,12,0.019,14,0.972,16,1.46,19,0.493,20,0.812,40,0.237,41,0.128,42,2.297,43,1.396,44,1.39,52,0.013,53,0.013,80,1.71,81,1.551,82,0.716,83,1.405,149,1.183,150,1.808,153,1.136,160,2.562,195,3.732,199,3.169,217,2.88,250,2.814,284,1.808,286,2.668,307,3.732,387,4.504,433,3.239,439,4.169,462,3.901,1150,3.552,1175,4.104,1179,3.552,1203,3.552,1204,5.444,1205,4.135,1206,4.135,1207,5.444,1208,4.135,1209,5.444,1210,4.135,1211,4.135,1212,5.444,1213,4.135,1214,4.675,1215,4.135,1216,4.135,1217,4.135,1218,4.135]],["title/classes/VerifyEmailDto.html",[41,0.115,201,2.593]],["body/classes/VerifyEmailDto.html",[3,0.236,4,0.298,5,0.206,7,0.501,11,2.606,12,0.019,14,0.945,19,0.396,40,0.298,41,0.194,52,0.016,53,0.016,82,0.697,153,1.174,201,4.381,203,2.958,243,4.336,292,3.083,427,1.515,429,1.746,633,2.043,637,5.181,959,5.809,1219,5.809,1220,4.464,1221,5.198,1222,5.198]],["title/coverage.html",[1223,3.886]],["body/coverage.html",[0,2.21,1,1.316,5,0.082,6,1.764,12,0.019,21,1.14,27,1.43,30,1.316,34,1.316,41,0.212,52,0.008,53,0.008,60,1.006,82,0.227,91,1.316,93,1.43,98,1.316,129,0.807,141,1.573,149,1.344,151,1.764,157,1.316,158,1.764,177,0.766,182,1.222,190,1.316,195,1.14,201,1.43,212,1.14,221,1.573,226,1.316,228,1.573,273,1.316,275,1.316,282,1.764,286,1.006,287,0.95,288,1.069,314,1.573,326,1.573,327,1.573,329,1.222,331,1.006,351,1.222,375,4.603,426,1.43,428,1.573,432,1.43,531,1.764,541,1.764,542,1.43,543,1.764,570,1.764,614,1.764,627,1.43,628,1.764,629,2.501,634,1.764,635,2.501,666,1.316,692,1.764,713,2.755,715,1.764,716,1.764,725,1.813,737,2.093,738,1.43,740,1.764,743,1.43,744,1.764,746,1.764,803,1.764,819,1.573,821,1.573,891,1.573,892,1.764,893,2.501,896,1.764,916,1.43,917,1.764,932,1.764,950,1.573,951,1.764,969,1.573,970,1.764,1003,1.573,1004,1.764,1025,1.764,1039,1.764,1043,1.43,1044,1.764,1063,2.501,1075,1.764,1086,1.573,1087,2.501,1100,1.573,1122,4.341,1127,1.573,1128,1.764,1132,1.573,1133,1.764,1135,2.274,1163,1.43,1167,1.43,1168,1.764,1175,1.222,1182,1.764,1203,1.764,1219,1.764,1220,1.764,1223,1.573,1224,1.764,1225,2.053,1226,5.857,1227,5.643,1228,4.064,1229,3.265,1230,1.764,1231,7.561,1232,7.626,1233,1.764,1234,1.764,1235,5.054,1236,5.382,1237,1.764,1238,3.265,1239,1.764,1240,1.764,1241,1.764,1242,1.764,1243,1.764,1244,1.764,1245,1.764,1246,1.764,1247,2.804,1248,2.804,1249,2.501,1250,2.804,1251,1.764,1252,1.764,1253,2.804,1254,2.804,1255,1.764,1256,1.764,1257,2.804,1258,2.804,1259,2.804,1260,1.764,1261,1.764,1262,6.334,1263,1.764,1264,1.764,1265,1.764,1266,1.764,1267,1.764,1268,1.764,1269,1.764,1270,1.764,1271,1.764,1272,1.764,1273,1.764,1274,1.764,1275,1.764,1276,1.764,1277,1.764,1278,1.764,1279,1.764,1280,1.764,1281,1.764,1282,1.764,1283,1.764,1284,1.764,1285,1.764,1286,1.764,1287,1.764,1288,1.764,1289,1.764,1290,1.764,1291,1.764,1292,1.764,1293,1.764,1294,1.764,1295,1.764,1296,1.764,1297,1.764,1298,1.764,1299,1.764,1300,1.764,1301,1.764,1302,1.764,1303,2.053,1304,1.764]],["title/dependencies.html",[57,2.07,1305,2.673]],["body/dependencies.html",[12,0.019,20,0.891,26,2.223,41,0.178,52,0.014,53,0.014,57,2.097,89,2.698,97,2.907,106,3.159,107,3.159,108,3.474,110,3.159,112,3.895,113,3.474,175,3.705,225,2.362,271,3.159,306,3.159,485,4.078,633,1.782,669,2.698,683,3.895,684,3.895,685,3.895,724,3.474,924,3.474,977,3.895,1031,3.895,1047,3.474,1306,6.361,1307,4.535,1308,4.535,1309,4.535,1310,3.895,1311,4.535,1312,4.535,1313,4.535,1314,4.535,1315,4.535,1316,4.535,1317,4.535,1318,4.535,1319,4.535,1320,5.779,1321,4.535,1322,4.535,1323,4.535,1324,4.535,1325,4.535,1326,4.535,1327,4.535,1328,4.535,1329,4.535,1330,3.895,1331,4.535,1332,4.535,1333,4.535,1334,4.535,1335,4.535,1336,4.535,1337,4.535,1338,3.895,1339,3.895,1340,4.535,1341,4.535,1342,4.535,1343,4.535,1344,4.535,1345,4.535]],["title/miscellaneous/enumerations.html",[1346,1.621,1347,3.844]],["body/miscellaneous/enumerations.html",[7,0.291,12,0.019,32,2.604,52,0.011,53,0.011,154,3.759,177,2.109,234,2.28,295,3.053,307,2.431,316,3.353,319,2.604,322,2.431,324,3.361,388,4.327,655,3.353,796,3.049,800,3.049,1060,3.049,1061,3.353,1064,2.604,1066,2.806,1346,1.572,1347,2.592,1348,4.377,1349,3.018,1350,4.377,1351,3.018,1352,4.377,1353,3.018,1354,2.592,1355,4.377,1356,3.018,1357,4.377,1358,4.377,1359,3.018,1360,4.377,1361,4.377,1362,5.15,1363,4.377,1364,4.377,1365,3.018,1366,3.018,1367,4.377,1368,3.018,1369,3.018,1370,2.592,1371,3.018,1372,3.018,1373,4.377,1374,3.759,1375,3.759,1376,3.759,1377,3.759,1378,3.759,1379,3.759,1380,3.759,1381,3.759,1382,3.759,1383,3.759,1384,3.759,1385,3.759,1386,3.759,1387,4.377,1388,4.377,1389,3.759,1390,4.377,1391,3.759,1392,4.377,1393,3.759,1394,5.372,1395,4.377,1396,4.377,1397,4.377,1398,4.377,1399,4.377,1400,3.759,1401,3.759,1402,4.377,1403,3.759,1404,3.759,1405,4.377,1406,3.759,1407,3.018,1408,3.759,1409,4.377,1410,3.018,1411,4.377,1412,3.759,1413,4.377,1414,4.377,1415,4.377,1416,3.018,1417,4.327,1418,3.353,1419,3.353,1420,3.018,1421,3.759,1422,3.759,1423,4.852]],["title/miscellaneous/functions.html",[1346,1.621,1424,3.844]],["body/miscellaneous/functions.html",[7,0.454,12,0.018,16,1.131,52,0.015,53,0.015,60,3.173,80,1.796,81,1.629,82,0.791,83,1.476,153,1.267,188,2.804,292,3.329,314,4.536,316,4.536,322,3.289,329,3.523,331,2.902,497,3.61,498,4.125,762,3.289,952,5.086,1087,3.61,1094,5.834,1100,4.96,1237,4.048,1241,4.048,1242,5.086,1246,4.048,1299,4.048,1300,5.086,1346,2.455,1424,4.048,1425,4.713,1426,4.713,1427,4.713,1428,4.713,1429,4.713,1430,4.713,1431,5.922,1432,5.086,1433,4.713,1434,4.713,1435,4.713,1436,4.713,1437,4.713,1438,4.713]],["title/index.html",[7,0.3,1439,3.113,1440,3.113]],["body/index.html",[1,2.324,3,0.039,5,0.083,7,0.082,9,2.557,10,0.651,12,0.019,21,2.161,32,0.505,48,0.73,50,0.73,51,0.73,52,0.004,53,0.004,57,0.393,73,0.442,82,0.233,91,0.545,98,0.545,104,0.73,106,2.074,107,2.315,109,3.862,114,0.73,118,1.381,120,2.557,123,0.592,125,0.592,129,0.825,136,2.407,141,3.16,153,0.392,157,4.142,161,1.609,170,3.351,171,4.203,172,0.651,173,0.984,175,2.494,177,2.506,178,0.651,180,2.026,181,2.778,183,0.592,186,0.472,194,0.651,203,2.49,206,1.65,207,1.804,208,2.855,209,1.609,212,3.702,226,3.351,234,2.148,235,1.908,243,3.194,254,1.804,264,1.609,273,1.65,275,3.65,279,0.592,286,2.709,287,2.596,288,1.094,289,3.32,295,0.334,297,0.651,300,0.73,303,0.73,305,0.592,306,1.069,307,1.43,322,0.472,324,0.505,331,2.751,339,2.71,340,0.592,341,1.804,344,2.838,350,0.73,351,1.531,352,2.211,355,1.069,361,0.651,362,2.315,363,0.73,369,1.804,370,0.73,378,1.176,386,1.176,387,3.149,388,1.972,390,0.73,398,1.176,399,1.463,402,1.176,404,0.651,407,0.73,413,2.578,414,3.593,415,2.211,420,1.609,430,0.651,433,0.913,450,3.105,452,0.651,498,0.592,524,0.73,532,4.28,534,3.019,536,1.654,538,2.855,540,0.73,558,0.73,565,0.73,569,0.73,599,2.525,600,0.73,604,0.651,616,2.363,621,0.592,625,1.319,636,1.609,645,1.319,646,0.73,649,0.651,676,2.855,707,4.89,714,1.25,717,0.984,722,1.069,732,2.546,749,3.342,783,1.319,784,0.73,786,2.98,796,0.592,800,0.592,836,0.73,843,0.651,868,1.609,870,2.211,876,1.319,902,1.319,938,0.73,946,0.651,1043,0.592,1047,0.651,1048,1.319,1050,0.73,1056,0.73,1060,2.525,1061,2.28,1062,2.28,1064,2.315,1065,2.546,1066,2.131,1101,0.73,1109,1.804,1120,1.176,1136,0.73,1144,0.73,1148,1.463,1166,1.804,1171,0.73,1214,0.73,1223,0.651,1224,1.319,1249,0.651,1304,0.73,1310,0.73,1330,2.855,1339,0.73,1370,3.114,1374,1.319,1375,1.319,1376,1.804,1377,1.319,1378,1.319,1379,1.319,1380,1.319,1381,1.804,1382,1.319,1383,1.319,1385,1.804,1386,1.804,1389,1.804,1391,1.804,1394,0.73,1400,1.319,1401,1.804,1403,1.319,1404,1.319,1406,1.319,1408,1.804,1412,0.73,1417,0.651,1418,0.651,1419,0.651,1421,2.557,1422,2.557,1423,1.319,1441,5.111,1442,2.574,1443,4.125,1444,2.574,1445,4.521,1446,2.1,1447,3.626,1448,4.983,1449,0.85,1450,1.176,1451,1.535,1452,2.1,1453,2.574,1454,3.891,1455,1.972,1456,2.1,1457,2.1,1458,2.1,1459,2.1,1460,0.85,1461,0.85,1462,0.85,1463,0.85,1464,0.85,1465,1.535,1466,0.85,1467,3.324,1468,1.535,1469,3.626,1470,2.777,1471,1.535,1472,2.1,1473,0.85,1474,0.85,1475,3.626,1476,6.585,1477,5.768,1478,0.85,1479,0.85,1480,0.85,1481,0.85,1482,0.85,1483,0.85,1484,1.535,1485,2.1,1486,0.85,1487,0.85,1488,0.85,1489,2.574,1490,2.977,1491,2.574,1492,0.85,1493,0.85,1494,0.85,1495,2.1,1496,0.85,1497,0.85,1498,4.125,1499,0.85,1500,1.535,1501,1.535,1502,2.574,1503,0.85,1504,1.535,1505,0.85,1506,0.85,1507,4.125,1508,0.73,1509,1.535,1510,0.85,1511,4.125,1512,0.85,1513,2.574,1514,0.85,1515,0.85,1516,0.85,1517,0.85,1518,0.85,1519,0.85,1520,0.85,1521,0.85,1522,0.85,1523,0.85,1524,0.85,1525,0.85,1526,0.85,1527,0.85,1528,0.85,1529,0.85,1530,0.85,1531,0.85,1532,0.85,1533,0.85,1534,0.85,1535,0.85,1536,0.85,1537,0.85,1538,0.85,1539,0.85,1540,0.85,1541,0.85,1542,0.85,1543,0.85,1544,0.85,1545,0.85,1546,0.85,1547,0.85,1548,0.73,1549,0.85,1550,2.1,1551,0.85,1552,0.85,1553,2.1,1554,0.85,1555,0.85,1556,1.535,1557,1.535,1558,0.85,1559,0.85,1560,0.85,1561,0.85,1562,3.626,1563,3.626,1564,3.626,1565,6.64,1566,2.977,1567,2.1,1568,0.85,1569,3.324,1570,2.1,1571,2.1,1572,1.535,1573,1.535,1574,2.574,1575,1.535,1576,0.85,1577,2.1,1578,0.85,1579,4.69,1580,1.535,1581,0.73,1582,0.85,1583,0.85,1584,0.85,1585,0.85,1586,1.535,1587,0.85,1588,0.85,1589,0.85,1590,0.85,1591,4.983,1592,2.1,1593,0.85,1594,0.85,1595,0.85,1596,0.85,1597,1.319,1598,1.319,1599,0.85,1600,0.85,1601,1.319,1602,2.574,1603,2.1,1604,0.85,1605,3.324,1606,2.574,1607,2.574,1608,0.85,1609,0.85,1610,1.535,1611,1.535,1612,1.535,1613,0.85,1614,0.85,1615,0.85,1616,0.85,1617,0.85,1618,2.1,1619,0.85,1620,2.1,1621,0.85,1622,1.535,1623,1.535,1624,2.977,1625,0.85,1626,2.1,1627,2.1,1628,1.535,1629,0.85,1630,0.85,1631,1.535,1632,0.85,1633,0.85,1634,0.85,1635,2.1,1636,0.85,1637,0.85,1638,0.85,1639,0.85,1640,2.1,1641,0.85,1642,0.85,1643,2.1,1644,1.535,1645,0.85,1646,0.85,1647,0.85,1648,0.85,1649,0.85,1650,1.535,1651,0.85,1652,0.85,1653,0.85,1654,0.85,1655,0.85,1656,0.85,1657,0.85,1658,0.85,1659,0.85,1660,0.85,1661,0.85,1662,0.85,1663,0.85,1664,0.85,1665,0.85,1666,0.85,1667,0.85,1668,2.1,1669,1.535,1670,1.319,1671,1.535,1672,1.535,1673,0.85,1674,0.85,1675,0.85,1676,3.324,1677,0.85,1678,0.85,1679,2.1,1680,0.85,1681,0.85,1682,0.85,1683,0.85,1684,0.85,1685,1.319,1686,2.1,1687,0.85,1688,0.73,1689,0.85,1690,0.85,1691,0.85,1692,0.85,1693,0.85,1694,0.85,1695,0.85,1696,0.85,1697,0.85,1698,0.85,1699,0.85,1700,1.535,1701,0.85,1702,1.535,1703,0.85,1704,3.626,1705,0.85,1706,0.85,1707,3.324,1708,0.85,1709,1.535,1710,0.85,1711,0.85,1712,0.85,1713,1.535,1714,0.85,1715,0.85,1716,0.85,1717,0.85,1718,0.73,1719,0.85,1720,1.535,1721,0.85,1722,2.1,1723,2.1,1724,1.535,1725,2.977,1726,0.85,1727,0.85,1728,0.85,1729,0.85,1730,0.85,1731,0.85,1732,0.85,1733,0.85,1734,0.85,1735,0.85,1736,0.85,1737,2.1,1738,0.85,1739,0.85,1740,1.535,1741,0.85,1742,0.85,1743,0.85,1744,0.85,1745,0.85,1746,0.85,1747,0.85,1748,0.85,1749,0.85,1750,0.85,1751,0.85,1752,0.85,1753,0.85,1754,0.85,1755,0.85,1756,2.574,1757,0.85,1758,0.85,1759,0.85,1760,0.85,1761,0.85,1762,0.85,1763,1.535,1764,0.85,1765,0.85,1766,0.85,1767,0.85,1768,0.85,1769,0.85,1770,0.85,1771,0.85,1772,0.85,1773,0.85,1774,0.85,1775,0.85,1776,0.85,1777,0.85,1778,0.85,1779,0.85,1780,0.85,1781,0.85,1782,2.1,1783,0.85,1784,0.85,1785,0.85,1786,0.85,1787,2.574,1788,1.535,1789,0.85,1790,0.85,1791,1.535,1792,1.535,1793,0.85,1794,0.85,1795,0.85,1796,1.535,1797,0.85,1798,0.85,1799,1.804,1800,0.85,1801,0.85,1802,0.73,1803,0.85,1804,0.85,1805,0.85,1806,0.85,1807,0.85,1808,0.85]],["title/modules.html",[56,2.487]],["body/modules.html",[12,0.016,52,0.016,53,0.016,55,3.817,56,2.685,66,3.26,67,3.26,68,3.513,69,3.26,70,3.26,1470,5.671,1809,7.404,1810,7.404,1811,7.404]],["title/overview.html",[1450,3.886]],["body/overview.html",[2,1.789,12,0.019,21,3.362,52,0.013,53,0.013,54,1.608,55,5.196,56,2.005,57,1.892,58,2.272,59,2.272,60,2.005,61,2.272,62,2.272,63,3.514,64,3.514,65,3.514,66,4.362,67,4.237,68,4.293,69,4.173,70,4.287,71,3.002,72,2.131,73,2.131,109,4.128,123,2.849,150,1.789,212,3.362,265,3.514,267,3.514,286,3.438,287,3.244,288,3.654,297,3.133,355,2.849,427,1.192,548,3.514,549,3.514,550,3.514,664,3.514,665,3.514,666,3.881,714,2.434,739,3.133,868,3.133,919,3.514,920,3.514,921,3.514,1172,3.514,1173,3.514,1174,3.514,1175,3.601,1450,3.133,1601,3.514,1812,4.091]],["title/properties.html",[429,1.243,1305,2.673]],["body/properties.html",[12,0.019,52,0.017,53,0.017,172,4.451,234,3.026,429,1.613,1799,4.991,1813,5.811,1814,5.811,1815,5.811]],["title/miscellaneous/typealiases.html",[1346,1.621,1816,4.476]],["body/miscellaneous/typealiases.html",[7,0.545,12,0.016,52,0.016,53,0.016,82,0.733,166,3.674,428,4.333,486,5.682,1135,3.94,1346,2.946,1354,4.859,1817,5.657,1818,6.615,1819,6.615,1820,5.657,1821,4.859,1822,5.657,1823,5.657]],["title/miscellaneous/variables.html",[1346,1.621,1455,3.428]],["body/miscellaneous/variables.html",[3,0.096,5,0.048,7,0.118,12,0.019,27,1.474,32,0.726,34,2.144,44,1.127,52,0.005,53,0.005,82,0.796,118,1.671,129,1.629,136,0.678,153,1.335,160,0.433,170,2.144,171,3.019,173,3.019,177,1.915,181,1.357,203,1.225,221,1.621,228,1.621,242,1.074,243,1.796,292,1.037,294,3.341,295,2.839,326,1.621,327,1.621,331,1.373,339,0.85,340,0.85,361,4.28,362,0.85,378,0.935,386,2.897,387,4.79,414,0.935,429,0.587,431,0.935,432,1.474,450,2.425,456,0.85,462,0.782,468,2.25,534,4.79,535,5.907,536,1.175,604,0.935,616,1.296,719,1.357,762,0.678,786,1.621,787,1.048,790,1.048,796,0.85,800,0.85,819,1.621,821,2.146,826,1.048,837,1.952,843,2.146,859,1.357,897,0.935,944,1.048,982,2.872,998,1.474,1060,1.474,1062,0.935,1064,1.259,1097,1.048,1102,2.872,1120,3.175,1124,1.817,1135,0.85,1148,1.474,1163,1.474,1164,1.048,1230,1.048,1233,1.048,1234,1.048,1239,1.048,1240,1.817,1243,1.048,1244,1.048,1245,1.817,1247,1.048,1248,1.048,1249,2.146,1250,2.406,1251,1.817,1252,2.406,1253,1.048,1254,2.406,1255,1.817,1256,1.817,1257,1.048,1258,1.048,1259,2.406,1260,1.048,1261,1.817,1262,1.048,1263,2.406,1264,2.406,1265,2.406,1266,2.406,1267,2.406,1268,2.406,1269,2.406,1270,2.406,1271,2.406,1272,2.406,1273,2.406,1274,2.406,1275,2.406,1276,2.406,1277,2.406,1278,2.406,1279,2.406,1280,2.406,1281,2.406,1282,2.406,1283,2.406,1284,2.406,1285,2.406,1286,2.406,1287,2.406,1288,2.406,1289,2.406,1290,2.406,1291,2.406,1292,2.406,1293,1.817,1294,2.406,1295,2.406,1296,2.406,1297,2.406,1298,2.406,1301,1.048,1302,1.817,1338,1.048,1346,0.635,1384,1.048,1393,1.048,1417,0.935,1418,0.935,1419,0.935,1432,1.048,1455,0.935,1470,2.561,1508,1.048,1548,1.817,1581,1.817,1597,2.872,1598,1.048,1670,1.048,1685,1.048,1688,1.048,1718,2.872,1802,1.048,1821,1.048,1824,6.904,1825,2.116,1826,2.116,1827,1.22,1828,1.22,1829,2.116,1830,1.22,1831,1.22,1832,1.22,1833,2.116,1834,1.22,1835,1.22,1836,2.116,1837,2.802,1838,3.344,1839,2.116,1840,2.116,1841,4.145,1842,2.116,1843,1.22,1844,2.116,1845,1.22,1846,1.22,1847,1.22,1848,1.22,1849,1.22,1850,2.802,1851,1.22,1852,1.22,1853,1.22,1854,1.22,1855,1.22,1856,1.22,1857,1.22,1858,1.22,1859,1.22,1860,1.22,1861,1.22,1862,1.22,1863,2.802,1864,2.116,1865,2.116,1866,2.116,1867,1.22,1868,3.783,1869,1.22,1870,2.116,1871,2.116,1872,1.22,1873,1.22,1874,1.22,1875,1.22,1876,1.22,1877,2.802,1878,1.22,1879,2.116,1880,2.116,1881,2.116,1882,1.22,1883,1.22,1884,1.22,1885,1.22,1886,1.22,1887,1.22,1888,1.22,1889,1.22,1890,1.22,1891,1.22,1892,1.22,1893,4.145,1894,1.22,1895,1.22,1896,1.22,1897,1.22,1898,1.22,1899,1.22,1900,1.22,1901,1.22,1902,1.22,1903,1.22,1904,2.116,1905,1.22,1906,1.22,1907,1.22,1908,1.22,1909,1.22,1910,1.22,1911,1.22,1912,5.129,1913,1.22,1914,1.22,1915,1.22,1916,1.22,1917,1.22,1918,1.22,1919,1.22,1920,1.22,1921,1.22,1922,1.22,1923,1.22,1924,1.22,1925,1.22,1926,1.22,1927,1.22,1928,1.22,1929,2.116,1930,1.22,1931,1.22,1932,1.22,1933,1.22,1934,2.116,1935,1.22,1936,1.22,1937,1.22,1938,1.22,1939,4.71,1940,1.22,1941,1.22,1942,2.802,1943,1.22,1944,1.22,1945,1.22,1946,1.22,1947,1.22,1948,1.22,1949,1.22,1950,1.22,1951,1.22,1952,1.22,1953,3.344,1954,1.22,1955,1.22,1956,1.22,1957,1.22,1958,1.22,1959,1.22,1960,1.22,1961,1.22,1962,1.22,1963,1.22,1964,1.22,1965,1.22,1966,1.22,1967,1.22,1968,2.116,1969,1.22,1970,1.22,1971,1.22,1972,1.22,1973,1.22,1974,1.22,1975,1.22,1976,1.22,1977,2.116,1978,1.22,1979,1.22,1980,1.22,1981,1.22,1982,1.22,1983,1.22,1984,1.22,1985,1.22,1986,1.22,1987,1.22,1988,1.22,1989,1.22,1990,1.22,1991,1.22,1992,1.22,1993,1.22,1994,1.22,1995,1.22,1996,1.22,1997,1.22,1998,1.22,1999,1.22,2000,1.22,2001,1.22,2002,1.22,2003,1.22,2004,1.22,2005,1.22,2006,1.22,2007,1.22,2008,1.22,2009,1.22,2010,1.22,2011,1.22,2012,2.116,2013,1.22,2014,1.22,2015,1.22,2016,1.22]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1813,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":1329,"title":{},"body":{"dependencies.html":{}}}],["0.2.2",{"_index":1344,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1328,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1232,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1238,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1227,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1226,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1235,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1236,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1228,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1229,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":1560,"title":{},"body":{"index.html":{}}}],["0=stopped",{"_index":1542,"title":{},"body":{"index.html":{}}}],["1",{"_index":235,"title":{"classes/SystemControlValidationDto-1.html":{}},"body":{"controllers/AuthController.html":{},"classes/BaseAbstractRepository.html":{},"classes/CreateUserDto.html":{},"guards/JWTAuthGuard.html":{},"classes/PaginationParams.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["1.0.0",{"_index":1607,"title":{},"body":{"index.html":{}}}],["1.1.0",{"_index":1336,"title":{},"body":{"dependencies.html":{}}}],["1.1.8",{"_index":1316,"title":{},"body":{"dependencies.html":{}}}],["1.10.2",{"_index":1340,"title":{},"body":{"dependencies.html":{}}}],["1.4.7",{"_index":1331,"title":{},"body":{"dependencies.html":{}}}],["1.4.9",{"_index":1321,"title":{},"body":{"dependencies.html":{}}}],["1.9.1",{"_index":1337,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["100",{"_index":1926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["101",{"_index":1924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["102",{"_index":1928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["103",{"_index":1931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["104",{"_index":1933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["105",{"_index":1936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["106",{"_index":1938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["107",{"_index":1941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["108",{"_index":1944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["109",{"_index":1947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["11.0.0",{"_index":1308,"title":{},"body":{"dependencies.html":{}}}],["11.0.1",{"_index":1306,"title":{},"body":{"dependencies.html":{}}}],["11.0.3",{"_index":1311,"title":{},"body":{"dependencies.html":{}}}],["11.2.0",{"_index":1314,"title":{},"body":{"dependencies.html":{}}}],["110",{"_index":1950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["111",{"_index":1952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["112",{"_index":1955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["113",{"_index":1957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["114",{"_index":1959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["115",{"_index":1961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["116",{"_index":1963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["117",{"_index":1965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["118",{"_index":1967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["119",{"_index":1970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["120",{"_index":1972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["121",{"_index":1974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["122",{"_index":1976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["123",{"_index":1979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1234",{"_index":1593,"title":{},"body":{"index.html":{}}}],["124",{"_index":1981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["125",{"_index":1983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["126",{"_index":1985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["127",{"_index":1987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["128",{"_index":1989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["129",{"_index":1922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["130",{"_index":1920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["131",{"_index":1918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["132",{"_index":1916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["133",{"_index":1914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134",{"_index":1911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18",{"_index":1812,"title":{},"body":{"overview.html":{}}}],["1=maintenance",{"_index":1543,"title":{},"body":{"index.html":{}}}],["1d",{"_index":1619,"title":{},"body":{"index.html":{}}}],["2",{"_index":868,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"index.html":{},"overview.html":{}}}],["2.0.1",{"_index":1326,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":676,"title":{},"body":{"modules/DatabaseModule.html":{},"index.html":{}}}],["201",{"_index":540,"title":{},"body":{"classes/BaseResponse.html":{},"index.html":{}}}],["2025",{"_index":1559,"title":{},"body":{"index.html":{}}}],["2=active",{"_index":1544,"title":{},"body":{"index.html":{}}}],["3",{"_index":645,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["3.1.0",{"_index":1341,"title":{},"body":{"dependencies.html":{}}}],["3.8",{"_index":1743,"title":{},"body":{"index.html":{}}}],["300s",{"_index":1585,"title":{},"body":{"index.html":{}}}],["30t10:00:00z",{"_index":1561,"title":{},"body":{"index.html":{}}}],["4",{"_index":1601,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4.0.2",{"_index":1307,"title":{},"body":{"dependencies.html":{}}}],["4.28.10",{"_index":1323,"title":{},"body":{"dependencies.html":{}}}],["426",{"_index":1929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["45000",{"_index":678,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["5",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"index.html":{},"overview.html":{}}}],["5.0.2",{"_index":1318,"title":{},"body":{"dependencies.html":{}}}],["5.0.3",{"_index":1313,"title":{},"body":{"dependencies.html":{}}}],["5.11.96",{"_index":1325,"title":{},"body":{"dependencies.html":{}}}],["5.6.1",{"_index":1334,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":297,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"overview.html":{}}}],["6.0.0",{"_index":1327,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["604800",{"_index":782,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["60d5ecb54b24a5001c8e4f8a",{"_index":1609,"title":{},"body":{"index.html":{}}}],["60})@apiheader({name",{"_index":184,"title":{},"body":{"controllers/AuthController.html":{}}}],["60})@patch('verify",{"_index":202,"title":{},"body":{"controllers/AuthController.html":{}}}],["60})@post('signin",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{}}}],["60})@post('signup",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{}}}],["60})@roles(userrolesenums.user",{"_index":168,"title":{},"body":{"controllers/AuthController.html":{}}}],["7",{"_index":783,"title":{},"body":{"guards/JWTAuthGuard.html":{},"index.html":{}}}],["7.0.3",{"_index":1342,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":1345,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":1620,"title":{},"body":{"index.html":{}}}],["8",{"_index":649,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"index.html":{}}}],["8.1.0",{"_index":1333,"title":{},"body":{"dependencies.html":{}}}],["8.16.1",{"_index":1335,"title":{},"body":{"dependencies.html":{}}}],["80:80",{"_index":1740,"title":{},"body":{"index.html":{}}}],["_",{"_index":482,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"classes/RequireTogetherConstraint.html":{}}}],["_.pick",{"_index":495,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["_.pick(queryfiltersandoptions",{"_index":496,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["_checking",{"_index":785,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["_id",{"_index":1136,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["abstract",{"_index":487,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["access",{"_index":1060,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["access/refresh",{"_index":1464,"title":{},"body":{"index.html":{}}}],["access_not_allow_message",{"_index":1263,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["access_token",{"_index":1610,"title":{},"body":{"index.html":{}}}],["accesstoken",{"_index":818,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["account",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["account_inactive",{"_index":1375,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["account_inactive_message",{"_index":1264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["account_suspended_message",{"_index":1265,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["accountfromdb",{"_index":753,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["accountfromdb.email",{"_index":775,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["accountfromdb.password",{"_index":765,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["accountfromdb.role",{"_index":776,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["accountfromdb.userstatus",{"_index":756,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["accountfromdb['__v",{"_index":759,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["action",{"_index":1432,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["activate",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["active",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["add",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["added",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["additional",{"_index":1721,"title":{},"body":{"index.html":{}}}],["admin",{"_index":1422,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["advanced",{"_index":1487,"title":{},"body":{"index.html":{}}}],["again",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["agent",{"_index":907,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["aliases",{"_index":1817,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":626,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["allow_ur",{"_index":1251,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["allow_with_under_review",{"_index":1252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":1688,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["allowpagination",{"_index":952,"title":{},"body":{"classes/PaginationParams.html":{},"miscellaneous/functions.html":{}}}],["alpine",{"_index":1751,"title":{},"body":{"index.html":{}}}],["already",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"classes/UniqueKeysConstraint.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["alt",{"_index":1579,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":1795,"title":{},"body":{"index.html":{}}}],["android",{"_index":796,"title":{},"body":{"guards/JWTAuthGuard.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["android_critical_update",{"_index":1378,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["android_critical_update=1",{"_index":1545,"title":{},"body":{"index.html":{}}}],["android_critical_update_message",{"_index":1266,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["android|ios|web|swagger|elastic",{"_index":1554,"title":{},"body":{"index.html":{}}}],["anther",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any).createdat",{"_index":501,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["any).jwtcsrftoken",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["any).jwtrefreshtoken",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["any).jwttoken",{"_index":397,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":1443,"title":{},"body":{"index.html":{}}}],["apibearerauth",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["apibody",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apifile",{"_index":1255,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiheader",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{}}}],["apihideproperty",{"_index":1073,"title":{},"body":{"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["apihideproperty()@isoptional()@isstring",{"_index":1082,"title":{},"body":{"classes/SystemControlValidationSignInDto.html":{}}}],["apimultifile",{"_index":1256,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiquery",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["apisecurity",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{}}}],["apisecurity('app",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{}}}],["apisecurity('os",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{}}}],["apisecurity('version",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{}}}],["apitags",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{},"controllers/UsersController.html":{}}}],["apitags('auth",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('cache",{"_index":546,"title":{},"body":{"controllers/CacheController.html":{}}}],["apitags('server",{"_index":36,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('users",{"_index":1170,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":1064,"title":{},"body":{"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_docs=\"docs",{"_index":1523,"title":{},"body":{"index.html":{}}}],["app_guard",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["appheaders",{"_index":1348,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["application",{"_index":786,"title":{},"body":{"guards/JWTAuthGuard.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1571,"title":{},"body":{"index.html":{}}}],["application_maintenance",{"_index":1379,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["application_maintenance_message",{"_index":1267,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application_status=2",{"_index":1541,"title":{},"body":{"index.html":{}}}],["application_stopped",{"_index":1380,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["application_stopped_message",{"_index":1268,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":55,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appoptions",{"_index":1302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apps",{"_index":1552,"title":{},"body":{"index.html":{}}}],["appservice",{"_index":21,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["architecture",{"_index":1451,"title":{},"body":{"index.html":{}}}],["args",{"_index":1010,"title":{},"body":{"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{}}}],["args.constraints[0",{"_index":1017,"title":{},"body":{"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{}}}],["args.constraints[0].join",{"_index":1023,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["args.object",{"_index":1015,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["args.object[args.property",{"_index":1107,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["argumentmetadata",{"_index":978,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["arguments",{"_index":594,"title":{},"body":{"injectables/CacheService.html":{}}}],["array",{"_index":1097,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"miscellaneous/variables.html":{}}}],["array.isarray(val",{"_index":996,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["arrayoffilters",{"_index":466,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["assistance",{"_index":1908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"injectables/CacheService.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/MailerService.html":{},"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["attacks",{"_index":569,"title":{},"body":{"modules/CacheModule.html":{},"index.html":{}}}],["auth",{"_index":175,"title":{},"body":{"controllers/AuthController.html":{},"modules/MailerModule.html":{},"injectables/SwaggerAuthMiddleware.html":{},"dependencies.html":{},"index.html":{}}}],["auth.controller",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.e2e",{"_index":1733,"title":{},"body":{"index.html":{}}}],["auth.service",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["auth/decorators/roles.decorator",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/enums/userroles.enums",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["auth/enums/userstatus.enum",{"_index":1150,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{}}}],["authbackend",{"_index":1566,"title":{},"body":{"index.html":{}}}],["authcontroller",{"_index":157,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{},"index.html":{}}}],["authenticate",{"_index":1056,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{},"index.html":{}}}],["authenticated",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["authentication",{"_index":1441,"title":{},"body":{"index.html":{}}}],["authheader",{"_index":865,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["authheader?.length",{"_index":867,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["authheader[0",{"_index":869,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["authheader[1",{"_index":871,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["authmodule",{"_index":66,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1815,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":1065,"title":{},"body":{"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{},"index.html":{}}}],["authproviderx509certurl",{"_index":2007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice",{"_index":212,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["authtemplateenums",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["authtemplateenums.code",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["authuri",{"_index":2003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authuser",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["automatic",{"_index":1708,"title":{},"body":{"index.html":{}}}],["autopopulate",{"_index":683,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["await",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"injectables/CacheService.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/MailerService.html":{},"injectables/UsersService.html":{}}}],["b",{"_index":1790,"title":{},"body":{"index.html":{}}}],["backend",{"_index":1442,"title":{},"body":{"index.html":{}}}],["backenddocker",{"_index":1741,"title":{},"body":{"index.html":{}}}],["backup",{"_index":1764,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{},"guards/HeaderValidationGuard.html":{},"classes/RejectEmptyValuesPipe.html":{},"index.html":{}}}],["badrequestexception(errors",{"_index":1002,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["balancer/reverse",{"_index":1480,"title":{},"body":{"index.html":{}}}],["base",{"_index":1547,"title":{},"body":{"index.html":{}}}],["baseabstractrepository",{"_index":426,"title":{"classes/BaseAbstractRepository.html":{}},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{},"coverage.html":{}}}],["baseabstractrepository:109",{"_index":1190,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:115",{"_index":1189,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:122",{"_index":1196,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:13",{"_index":1198,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:130",{"_index":1197,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:138",{"_index":1195,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:19",{"_index":1187,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:24",{"_index":1188,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:29",{"_index":1191,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:39",{"_index":1193,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:50",{"_index":1192,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["baseabstractrepository:97",{"_index":1194,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["based",{"_index":1445,"title":{},"body":{"index.html":{}}}],["baseresponse",{"_index":30,"title":{"classes/BaseResponse.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/BaseResponse.html":{},"coverage.html":{}}}],["baseresponse.success('garbage",{"_index":49,"title":{},"body":{"controllers/AppController.html":{}}}],["baseresponse.success('user",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["baseresponse.success(await",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["baseresponse.success(this.appservice.serverchecking",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["basic",{"_index":1047,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{},"dependencies.html":{},"index.html":{}}}],["basicauth",{"_index":1046,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["basicauth(req",{"_index":1049,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["bcrypt",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"dependencies.html":{},"index.html":{}}}],["bcrypt.compare",{"_index":763,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["bcrypt.compare(password",{"_index":1615,"title":{},"body":{"index.html":{}}}],["bcrypt.hash",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt_password=your_bcrypt_password",{"_index":1530,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":870,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["being",{"_index":1103,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["binary",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blocked",{"_index":1419,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"classes/BaseResponse.html":{},"injectables/LoggerMiddleware.html":{},"classes/RejectEmptyValuesPipe.html":{}}}],["body.password",{"_index":912,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["body?.password",{"_index":911,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["boolean",{"_index":762,"title":{},"body":{"guards/JWTAuthGuard.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["branch",{"_index":1788,"title":{},"body":{"index.html":{}}}],["browse",{"_index":1811,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1809,"title":{},"body":{"modules.html":{}}}],["build",{"_index":1513,"title":{},"body":{"index.html":{}}}],["built",{"_index":1446,"title":{},"body":{"index.html":{}}}],["cache",{"_index":351,"title":{"classes/Cache.html":{}},"body":{"injectables/AuthService.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"coverage.html":{},"index.html":{}}}],["cache.controller",{"_index":552,"title":{},"body":{"modules/CacheModule.html":{}}}],["cache.dto",{"_index":1131,"title":{},"body":{"classes/UpdateCacheDto.html":{}}}],["cache.dto.ts",{"_index":629,"title":{},"body":{"classes/CreateCacheDto.html":{},"classes/UpdateCacheDto.html":{},"coverage.html":{}}}],["cache.dto.ts:5",{"_index":631,"title":{},"body":{"classes/CreateCacheDto.html":{}}}],["cache.dto.ts:8",{"_index":632,"title":{},"body":{"classes/CreateCacheDto.html":{}}}],["cache.service",{"_index":545,"title":{},"body":{"controllers/CacheController.html":{},"modules/CacheModule.html":{}}}],["cache/cache.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["cache/cache.service",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["cachecontroller",{"_index":542,"title":{"controllers/CacheController.html":{}},"body":{"controllers/CacheController.html":{},"modules/CacheModule.html":{},"coverage.html":{}}}],["cached",{"_index":1596,"title":{},"body":{"index.html":{}}}],["cachedotp",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{}}}],["cachemodule",{"_index":67,"title":{"modules/CacheModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules.html":{},"overview.html":{}}}],["cacheservice",{"_index":287,"title":{"injectables/CacheService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["caching",{"_index":1471,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":717,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["canactivate(context",{"_index":718,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["caselevel",{"_index":520,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["catch",{"_index":839,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"injectables/MailerService.html":{},"guards/RolesGuard.html":{}}}],["cd",{"_index":1503,"title":{},"body":{"index.html":{}}}],["certificates",{"_index":1759,"title":{},"body":{"index.html":{}}}],["changes",{"_index":1793,"title":{},"body":{"index.html":{}}}],["channel",{"_index":1807,"title":{},"body":{"index.html":{}}}],["characters",{"_index":646,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["check",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"classes/UniqueKeysConstraint.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["check_critical_android",{"_index":792,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["check_critical_ios",{"_index":798,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["checkauth",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkauth(@authuser",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{}}}],["checkauth(user",{"_index":165,"title":{},"body":{"controllers/AuthController.html":{}}}],["checked",{"_index":1098,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["checking",{"_index":1715,"title":{},"body":{"index.html":{}}}],["checklist",{"_index":1755,"title":{},"body":{"index.html":{}}}],["checkout",{"_index":1789,"title":{},"body":{"index.html":{}}}],["checks",{"_index":1491,"title":{},"body":{"index.html":{}}}],["checkuserstatus",{"_index":804,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["checkuserstatus(decoded",{"_index":811,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["checkvalues",{"_index":983,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["checkvalues(item",{"_index":1000,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["checkvalues(val",{"_index":995,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["checkvalues(value",{"_index":1001,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["class",{"_index":41,"title":{"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"classes/JwtHeaders.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"classes/SignInDto.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":427,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"classes/JwtHeaders.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"classes/SignInDto.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"overview.html":{}}}],["clear",{"_index":1640,"title":{},"body":{"index.html":{}}}],["cleared",{"_index":1642,"title":{},"body":{"index.html":{}}}],["clickup",{"_index":944,"title":{},"body":{"injectables/MailerService.html":{},"miscellaneous/variables.html":{}}}],["client",{"_index":1477,"title":{},"body":{"index.html":{}}}],["clientc509certurl",{"_index":2009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientemail",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientid",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientsession",{"_index":448,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["clone",{"_index":1500,"title":{},"body":{"index.html":{}}}],["closed",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closed_order",{"_index":1399,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["closed_order_message",{"_index":1269,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["closing",{"_index":712,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["cluster_appmodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_cachemodule",{"_index":548,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_exports",{"_index":550,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_cachemodule_providers",{"_index":549,"title":{},"body":{"modules/CacheModule.html":{},"overview.html":{}}}],["cluster_databasemodule",{"_index":664,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_databasemodule_providers",{"_index":665,"title":{},"body":{"modules/DatabaseModule.html":{},"overview.html":{}}}],["cluster_mailermodule",{"_index":919,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_exports",{"_index":921,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_mailermodule_providers",{"_index":920,"title":{},"body":{"modules/MailerModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1172,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1173,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1174,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["collation",{"_index":517,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["collection",{"_index":1644,"title":{},"body":{"index.html":{}}}],["collector",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["colors",{"_index":1901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["command",{"_index":1752,"title":{},"body":{"index.html":{}}}],["comment",{"_index":514,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["commit",{"_index":1792,"title":{},"body":{"index.html":{}}}],["company",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["company_issue_message",{"_index":1270,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["compare",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{}}}],["completed",{"_index":1582,"title":{},"body":{"index.html":{}}}],["complexity",{"_index":1665,"title":{},"body":{"index.html":{}}}],["compose",{"_index":1742,"title":{},"body":{"index.html":{}}}],["compound",{"_index":1703,"title":{},"body":{"index.html":{}}}],["comprehensive",{"_index":1444,"title":{},"body":{"index.html":{}}}],["config.ts",{"_index":1819,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["configmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{}}}],["configmodule.forroot",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{}}}],["configservice",{"_index":272,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{}}}],["configservice.get('jwt_secret",{"_index":280,"title":{},"body":{"modules/AuthModule.html":{}}}],["configservice.get('mail_host",{"_index":927,"title":{},"body":{"modules/MailerModule.html":{}}}],["configservice.get('mail_pass",{"_index":931,"title":{},"body":{"modules/MailerModule.html":{}}}],["configservice.get('mail_port",{"_index":928,"title":{},"body":{"modules/MailerModule.html":{}}}],["configservice.get('mail_user",{"_index":929,"title":{},"body":{"modules/MailerModule.html":{}}}],["configservice.get('mongodb_uri",{"_index":673,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('redis_host",{"_index":553,"title":{},"body":{"modules/CacheModule.html":{}}}],["configservice.get('redis_password",{"_index":556,"title":{},"body":{"modules/CacheModule.html":{}}}],["configservice.get('redis_port",{"_index":554,"title":{},"body":{"modules/CacheModule.html":{}}}],["configservice.get('redis_username",{"_index":555,"title":{},"body":{"modules/CacheModule.html":{}}}],["configurable",{"_index":1717,"title":{},"body":{"index.html":{}}}],["configuration",{"_index":1507,"title":{},"body":{"index.html":{}}}],["configure",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":1756,"title":{},"body":{"index.html":{}}}],["connect",{"_index":693,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["connection",{"_index":681,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{}}}],["connection.on('disconnected",{"_index":689,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connection.on('error",{"_index":686,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connection.plugin(require('mongoose",{"_index":682,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connectionfactory",{"_index":680,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["connections",{"_index":1757,"title":{},"body":{"index.html":{}}}],["connectsrc",{"_index":1681,"title":{},"body":{"index.html":{}}}],["console.error('csrf",{"_index":840,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["console.error('jwt",{"_index":857,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["console.error('mongodb",{"_index":688,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["console.error('refresh",{"_index":888,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["console.log('closing",{"_index":706,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["console.log('decoded",{"_index":846,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["console.log('roles",{"_index":1033,"title":{},"body":{"guards/RolesGuard.html":{}}}],["console.log(`application",{"_index":709,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["console.warn('mongodb",{"_index":690,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["const",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":1126,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["constructor",{"_index":284,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"injectables/CacheService.html":{},"injectables/DatabaseService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"guards/RolesGuard.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('redis",{"_index":590,"title":{},"body":{"injectables/CacheService.html":{}}}],["constructor(@injectconnection",{"_index":704,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["constructor(connection",{"_index":696,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["constructor(jwtservice",{"_index":807,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["constructor(model",{"_index":444,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["constructor(private",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{},"controllers/MailerController.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["constructor(redisclient",{"_index":575,"title":{},"body":{"injectables/CacheService.html":{}}}],["constructor(reflector",{"_index":1026,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(rejectfalse",{"_index":972,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["constructor(transporter",{"_index":934,"title":{},"body":{"injectables/MailerService.html":{}}}],["constructor(usermodel",{"_index":1183,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["constructor(usersrepository",{"_index":1205,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":285,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{}}}],["consumer",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(corsmiddleware).forroutes",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(loggermiddleware).forroutes",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["contact",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contain",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["container",{"_index":1738,"title":{},"body":{"index.html":{}}}],["content",{"_index":1570,"title":{},"body":{"index.html":{}}}],["contentlength",{"_index":909,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["contents",{"_index":1449,"title":{},"body":{"index.html":{}}}],["context",{"_index":721,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":825,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":728,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest().body",{"_index":752,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["context.switchtohttp().getresponse",{"_index":830,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["contributing",{"_index":1785,"title":{},"body":{"index.html":{}}}],["control",{"_index":625,"title":{},"body":{"injectables/CorsMiddleware.html":{},"index.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{},"controllers/MailerController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{},"controllers/MailerController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('cache",{"_index":547,"title":{},"body":{"controllers/CacheController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["cookie",{"_index":1330,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["cookies",{"_index":1624,"title":{},"body":{"index.html":{}}}],["cookies/headers",{"_index":1628,"title":{},"body":{"index.html":{}}}],["core",{"_index":1483,"title":{},"body":{"index.html":{}}}],["correct",{"_index":1617,"title":{},"body":{"index.html":{}}}],["cors",{"_index":1685,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["corsmiddleware",{"_index":93,"title":{"injectables/CorsMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/CorsMiddleware.html":{},"coverage.html":{}}}],["country",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":1223,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cp",{"_index":1505,"title":{},"body":{"index.html":{}}}],["create",{"_index":433,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["create(createuserdto",{"_index":1207,"title":{},"body":{"injectables/UsersService.html":{}}}],["create(data",{"_index":446,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["create(userdto",{"_index":1589,"title":{},"body":{"index.html":{}}}],["createcachedto",{"_index":627,"title":{"classes/CreateCacheDto.html":{}},"body":{"classes/CreateCacheDto.html":{},"classes/UpdateCacheDto.html":{},"coverage.html":{}}}],["created",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["createdat",{"_index":524,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"index.html":{}}}],["createdoc",{"_index":434,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["createdoc(data",{"_index":451,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["createparamdecorator",{"_index":1904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createuserdto",{"_index":195,"title":{"classes/CreateUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto.email",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto.password",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto.role",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{}}}],["createuserdto['userstatus",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{}}}],["credentials",{"_index":1048,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{},"index.html":{}}}],["credentials.name",{"_index":1051,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["credentials.pass",{"_index":1053,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["critical",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":1654,"title":{},"body":{"index.html":{}}}],["crypto",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{}}}],["csrf",{"_index":170,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["csrf_invalid_token",{"_index":1404,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["csrf_invalid_token_message",{"_index":1271,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["csrf_token_expired",{"_index":1405,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["csrf_token_expired_message",{"_index":1272,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["csrf_token_required",{"_index":1403,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["csrf_token_required_message",{"_index":1273,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["csrfsecret",{"_index":836,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["csrftoken",{"_index":831,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{}}}],["ctx",{"_index":1893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest().headers",{"_index":2013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currently",{"_index":560,"title":{},"body":{"modules/CacheModule.html":{}}}],["data",{"_index":450,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"modules/CacheModule.html":{},"injectables/UsersRepository.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["data.ts",{"_index":1736,"title":{},"body":{"index.html":{}}}],["database",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["database.service",{"_index":670,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["databasemodule",{"_index":68,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["databases/mongodb/database.module",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["databaseservice",{"_index":666,"title":{"injectables/DatabaseService.html":{}},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":1700,"title":{},"body":{"index.html":{}}}],["date(date.now()).todatestring",{"_index":1879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(queryfiltersandoptions.from",{"_index":503,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["date(queryfiltersandoptions.to",{"_index":505,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["day",{"_index":1412,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["days",{"_index":784,"title":{},"body":{"guards/JWTAuthGuard.html":{},"index.html":{}}}],["dd/mm/yyyy",{"_index":1889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":1776,"title":{},"body":{"index.html":{}}}],["debugging",{"_index":1778,"title":{},"body":{"index.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decoded",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["decoded._id",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["decoded.email",{"_index":850,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decoded.role",{"_index":852,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decoded.userstatus",{"_index":889,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decodedcsrf",{"_index":814,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decodedcsrf.email",{"_index":849,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decodedcsrf.role",{"_index":851,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decodedrefresh",{"_index":877,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decodedrefresh.email",{"_index":878,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decodedrefresh.role",{"_index":879,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["decorator",{"_index":1712,"title":{},"body":{"index.html":{}}}],["decorators",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"classes/JwtHeaders.html":{},"classes/PaginationParams.html":{},"classes/SignInDto.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{}}}],["decorators/roles.decorator",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/signup.decorator",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{}}}],["decorators/user.decorator",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{}}}],["default",{"_index":294,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CorsMiddleware.html":{},"interfaces/IRequestWithUser.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["defaultmessage",{"_index":1006,"title":{},"body":{"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{}}}],["defaultmessage(args",{"_index":1007,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["defaultsrc",{"_index":1675,"title":{},"body":{"index.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{}}}],["delete",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"classes/User.html":{},"index.html":{}}}],["delete('logout",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["deletecache",{"_index":571,"title":{},"body":{"injectables/CacheService.html":{}}}],["deletecache(key",{"_index":579,"title":{},"body":{"injectables/CacheService.html":{}}}],["deletecache(refreshtoken",{"_index":1638,"title":{},"body":{"index.html":{}}}],["deleted",{"_index":1417,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["deleted/blocked",{"_index":1613,"title":{},"body":{"index.html":{}}}],["deletemany",{"_index":435,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["deletemany(filterquery",{"_index":454,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["deleteone",{"_index":436,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["deleteone(filterquery",{"_index":458,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["deletion",{"_index":1639,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["depends_on",{"_index":1746,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1459,"title":{},"body":{"index.html":{}}}],["desc",{"_index":1431,"title":{},"body":{"miscellaneous/functions.html":{}}}],["description",{"_index":172,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{},"properties.html":{}}}],["descriptor",{"_index":1871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["desired",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detailed",{"_index":1777,"title":{},"body":{"index.html":{}}}],["details",{"_index":1720,"title":{},"body":{"index.html":{}}}],["development",{"_index":1510,"title":{},"body":{"index.html":{}}}],["development/production",{"_index":1689,"title":{},"body":{"index.html":{}}}],["devices",{"_index":416,"title":{},"body":{"injectables/AuthService.html":{}}}],["diagram",{"_index":1563,"title":{},"body":{"index.html":{}}}],["different",{"_index":1687,"title":{},"body":{"index.html":{}}}],["directives",{"_index":1674,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1516,"title":{},"body":{"index.html":{}}}],["dis",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disable",{"_index":508,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["disconnected",{"_index":691,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["doc",{"_index":1154,"title":{},"body":{"classes/User.html":{}}}],["docker",{"_index":1489,"title":{},"body":{"index.html":{}}}],["docs",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseAbstractRepository.html":{}}}],["document",{"_index":484,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"classes/User.html":{}}}],["documentation",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"index.html":{}}}],["doe",{"_index":1573,"title":{},"body":{"index.html":{}}}],["doesn't",{"_index":1580,"title":{},"body":{"index.html":{}}}],["down",{"_index":711,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["dto",{"_index":1106,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["dto/create",{"_index":1215,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/signin.dto",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{},"guards/JWTAuthGuard.html":{}}}],["dto/system",{"_index":726,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["dto/systemcontrol.dto",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/verify",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{}}}],["duplicate",{"_index":1121,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["duplicated",{"_index":1395,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["duplicated_error_message",{"_index":1274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["duplicatekey",{"_index":1088,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["duplicates",{"_index":1111,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["duration",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["e2e",{"_index":1732,"title":{},"body":{"index.html":{}}}],["each",{"_index":603,"title":{},"body":{"injectables/CacheService.html":{},"classes/UniqueKeysConstraint.html":{}}}],["edit",{"_index":1249,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["elastic",{"_index":1409,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["email",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IDecodedCsrf.html":{},"guards/JWTAuthGuard.html":{},"injectables/MailerService.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"classes/VerifyEmailDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["email.dto",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{}}}],["email.dto.ts",{"_index":1220,"title":{},"body":{"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["email.dto.ts:5",{"_index":1221,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["email.dto.ts:8",{"_index":1222,"title":{},"body":{"classes/VerifyEmailDto.html":{}}}],["email_exist",{"_index":1389,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["email_verification_description",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["email_verification_title",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailverificationtemplate",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["emailverificationtemplate(title",{"_index":1430,"title":{},"body":{"miscellaneous/functions.html":{}}}],["empty",{"_index":994,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["en",{"_index":519,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["enabled",{"_index":1761,"title":{},"body":{"index.html":{}}}],["enableimplicitconversion",{"_index":731,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["encrypted",{"_index":1659,"title":{},"body":{"index.html":{}}}],["end",{"_index":1591,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":1670,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["endpoints",{"_index":1550,"title":{},"body":{"index.html":{}}}],["entities/user.entity",{"_index":1178,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersRepository.html":{}}}],["enum",{"_index":1144,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["enumerations",{"_index":1347,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/systems",{"_index":1080,"title":{},"body":{"classes/SystemControlValidationDto-1.html":{}}}],["enums/userroles.enums",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"classes/SignInDto.html":{}}}],["enums/userstatus.enum",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["enumsresponse",{"_index":154,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/enumerations.html":{}}}],["enumsresponse.server_working",{"_index":156,"title":{},"body":{"injectables/AppService.html":{}}}],["env",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["env.example",{"_index":1506,"title":{},"body":{"index.html":{}}}],["envfilepath",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["environment",{"_index":1454,"title":{},"body":{"index.html":{}}}],["err",{"_index":687,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/MailerService.html":{},"guards/RolesGuard.html":{}}}],["err.message",{"_index":949,"title":{},"body":{"injectables/MailerService.html":{}}}],["err.status",{"_index":1038,"title":{},"body":{"guards/RolesGuard.html":{}}}],["error",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"modules/DatabaseModule.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["error.level",{"_index":1898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.message",{"_index":842,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["error.name",{"_index":874,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["error.timestamp",{"_index":1896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error_code",{"_index":1719,"title":{},"body":{"index.html":{}}}],["error_in_update_message",{"_index":1275,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error_update",{"_index":1396,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorconfig",{"_index":1818,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["errorconfigs",{"_index":1240,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":732,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"classes/RejectEmptyValuesPipe.html":{},"index.html":{}}}],["errors.flatmap((error",{"_index":735,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["errors.length",{"_index":734,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"classes/RejectEmptyValuesPipe.html":{}}}],["errors.push(`field",{"_index":993,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["errortype",{"_index":1436,"title":{},"body":{"miscellaneous/functions.html":{}}}],["errortypes",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["errortypes.access",{"_index":1954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.account_inactive",{"_index":1923,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.android_critical_update",{"_index":1930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.application_maintenance",{"_index":1932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.application_stopped",{"_index":1935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.closed_order",{"_index":1982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.csrf_invalid_token",{"_index":1915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.csrf_token_expired",{"_index":1913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.csrf_token_required",{"_index":1917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.duplicated",{"_index":1973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.email_exist",{"_index":1960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.error_update",{"_index":1975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.invalid_token",{"_index":1921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.invalid_url_params",{"_index":1980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.ios_critical_update",{"_index":1927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.many_attempt",{"_index":1966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.not_allowed",{"_index":1986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.not_completed",{"_index":1971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.not_found",{"_index":1956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.not_found_product",{"_index":1958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.not_found_user",{"_index":1964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.otp_not_exist_or_expired",{"_index":1951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.otp_not_match",{"_index":1949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.password_not_valid",{"_index":1937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.pending_requests",{"_index":1978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.permission",{"_index":1969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.phone_exist",{"_index":1962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.refresh_expired",{"_index":1925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.suspended",{"_index":1946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.token_expired",{"_index":1919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.token_required",{"_index":1984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.user_blocked",{"_index":1940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.user_deleted",{"_index":1943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.user_gov_dis_not_found",{"_index":1988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["errortypes.wrong_csrf_token",{"_index":1910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["escaperegex",{"_index":1245,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":507,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["eslint/ban",{"_index":512,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["established",{"_index":1758,"title":{},"body":{"index.html":{}}}],["ex",{"_index":592,"title":{},"body":{"injectables/CacheService.html":{}}}],["example",{"_index":1476,"title":{},"body":{"index.html":{}}}],["exceptionhandlers",{"_index":1885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exceptions",{"_index":1769,"title":{},"body":{"index.html":{}}}],["execute",{"_index":609,"title":{},"body":{"injectables/CacheService.html":{}}}],["executioncontext",{"_index":719,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":1581,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["exist_email_message",{"_index":1276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exist_phone_message",{"_index":1277,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["exists",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["exp",{"_index":741,"title":{},"body":{"interfaces/IDecodedCsrf.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["expecting",{"_index":1105,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["expiration",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CacheService.html":{}}}],["expired",{"_index":1597,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["expiresin",{"_index":769,"title":{},"body":{"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["export",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["exposure",{"_index":1691,"title":{},"body":{"index.html":{}}}],["express",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CorsMiddleware.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{},"dependencies.html":{}}}],["extends",{"_index":745,"title":{},"body":{"interfaces/IRequestWithUser.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersRepository.html":{}}}],["extract",{"_index":1101,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"index.html":{}}}],["extraction",{"_index":1706,"title":{},"body":{"index.html":{}}}],["extraoptions",{"_index":467,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["factory",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["factory.ts",{"_index":1242,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["failed",{"_index":841,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["false",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"index.html":{}}}],["feature",{"_index":1787,"title":{},"body":{"index.html":{}}}],["feature/amazing",{"_index":1791,"title":{},"body":{"index.html":{}}}],["features",{"_index":1448,"title":{},"body":{"index.html":{}}}],["featuring",{"_index":1463,"title":{},"body":{"index.html":{}}}],["fieldname",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fields",{"_index":1016,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["fields.filter(field",{"_index":1019,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["fields.length",{"_index":1022,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file.decorator.ts",{"_index":1254,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":1868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["files",{"_index":1869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter",{"_index":1211,"title":{},"body":{"injectables/UsersService.html":{}}}],["filterquery",{"_index":455,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["filters",{"_index":494,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["filters.createdat.$gte",{"_index":502,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["filters.createdat.$lt",{"_index":504,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["find",{"_index":437,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["find(filterquery",{"_index":460,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["find(filters",{"_index":525,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["findallwithpaginationoption",{"_index":438,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["findallwithpaginationoption(queryfiltersandoptions",{"_index":465,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["findone",{"_index":439,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["findone(email",{"_index":1577,"title":{},"body":{"index.html":{}}}],["findone(filter",{"_index":1209,"title":{},"body":{"injectables/UsersService.html":{}}}],["findone(filterquery",{"_index":471,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["findoneandupdate",{"_index":440,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["findoneandupdate(filterquery",{"_index":473,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["firebaseconfig",{"_index":1261,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["fixtures",{"_index":1735,"title":{},"body":{"index.html":{}}}],["flag",{"_index":535,"title":{},"body":{"classes/BaseResponse.html":{},"miscellaneous/variables.html":{}}}],["fontsrc",{"_index":1682,"title":{},"body":{"index.html":{}}}],["forbidden",{"_index":1647,"title":{},"body":{"index.html":{}}}],["forgery",{"_index":1656,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1786,"title":{},"body":{"index.html":{}}}],["format",{"_index":1718,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["formatcontext",{"_index":1892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formatcontext(error.context",{"_index":1897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formatcontext(error.message",{"_index":1899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["found",{"_index":1120,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":1462,"title":{},"body":{"index.html":{}}}],["full",{"_index":641,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fullkey",{"_index":986,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["fullkey}[${index",{"_index":999,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["fullname",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"index.html":{}}}],["fullname.touppercase",{"_index":1159,"title":{},"body":{"classes/User.html":{}}}],["fullname.trim",{"_index":1160,"title":{},"body":{"classes/User.html":{}}}],["function",{"_index":1122,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"coverage.html":{}}}],["functions",{"_index":1424,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["garbage",{"_index":1643,"title":{},"body":{"index.html":{}}}],["gc",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["general",{"_index":1775,"title":{},"body":{"index.html":{}}}],["generate",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["generatenewtokenorthrowerror",{"_index":805,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["generatenewtokenorthrowerror(error",{"_index":813,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["generateotp",{"_index":283,"title":{},"body":{"injectables/AuthService.html":{}}}],["generateotp(4",{"_index":1583,"title":{},"body":{"index.html":{}}}],["generateotp(length",{"_index":291,"title":{},"body":{"injectables/AuthService.html":{}}}],["generation",{"_index":1709,"title":{},"body":{"index.html":{}}}],["generator",{"_index":1522,"title":{},"body":{"index.html":{}}}],["get('check",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('gc",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["getcache",{"_index":572,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcache(key",{"_index":582,"title":{},"body":{"injectables/CacheService.html":{}}}],["getcache(otp:email",{"_index":1594,"title":{},"body":{"index.html":{}}}],["getcache(refreshtoken",{"_index":1632,"title":{},"body":{"index.html":{}}}],["getpaginationstages",{"_index":1300,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getpaginationstages(page",{"_index":1434,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getter",{"_index":1698,"title":{},"body":{"index.html":{}}}],["getting",{"_index":1439,"title":{"index.html":{}},"body":{}}],["gettokens",{"_index":806,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["gettokens(request",{"_index":816,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["git",{"_index":1502,"title":{},"body":{"index.html":{}}}],["global",{"_index":1667,"title":{},"body":{"index.html":{}}}],["global.gc",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["global_limit",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["gov",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["green",{"_index":1902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["guard",{"_index":713,"title":{"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["guards",{"_index":714,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"index.html":{},"overview.html":{}}}],["guards/jwt.auth.guard",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/jwt.decoded.auth.guard",{"_index":276,"title":{},"body":{"modules/AuthModule.html":{}}}],["guards/role.guard",{"_index":274,"title":{},"body":{"modules/AuthModule.html":{}}}],["handleexceptions",{"_index":1882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handler",{"_index":824,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["handling",{"_index":1457,"title":{},"body":{"index.html":{}}}],["hash",{"_index":1576,"title":{},"body":{"index.html":{}}}],["hashed",{"_index":1699,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":1616,"title":{},"body":{"index.html":{}}}],["hashing",{"_index":1657,"title":{},"body":{"index.html":{}}}],["header",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["headers",{"_index":181,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["headers.dto",{"_index":727,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["headers.dto.ts",{"_index":893,"title":{},"body":{"classes/JwtHeaders.html":{},"classes/SystemControlValidationDto-1.html":{},"coverage.html":{}}}],["headers.dto.ts:10",{"_index":1078,"title":{},"body":{"classes/SystemControlValidationDto-1.html":{}}}],["headers.dto.ts:13",{"_index":1079,"title":{},"body":{"classes/SystemControlValidationDto-1.html":{}}}],["headers.dto.ts:5",{"_index":895,"title":{},"body":{"classes/JwtHeaders.html":{}}}],["headers.dto.ts:6",{"_index":1076,"title":{},"body":{"classes/SystemControlValidationDto-1.html":{}}}],["headers.enums.ts",{"_index":1350,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["headers[property",{"_index":2014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["headersdto",{"_index":729,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["headervalidationguard",{"_index":98,"title":{"guards/HeaderValidationGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/HeaderValidationGuard.html":{},"coverage.html":{},"index.html":{}}}],["health",{"_index":1490,"title":{},"body":{"index.html":{}}}],["healthlogging",{"_index":1767,"title":{},"body":{"index.html":{}}}],["healthy",{"_index":1557,"title":{},"body":{"index.html":{}}}],["helmet",{"_index":1332,"title":{},"body":{"dependencies.html":{}}}],["helmet.contentsecuritypolicy",{"_index":1673,"title":{},"body":{"index.html":{}}}],["helmet.js",{"_index":1486,"title":{},"body":{"index.html":{}}}],["hh:mm:ss",{"_index":1890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":1495,"title":{},"body":{"index.html":{}}}],["hit/miss",{"_index":1783,"title":{},"body":{"index.html":{}}}],["host",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/MailerModule.html":{}}}],["hour",{"_index":1411,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["html",{"_index":939,"title":{},"body":{"injectables/MailerService.html":{}}}],["http",{"_index":1623,"title":{},"body":{"index.html":{}}}],["http/1.1",{"_index":1569,"title":{},"body":{"index.html":{}}}],["http/1.1response",{"_index":1555,"title":{},"body":{"index.html":{}}}],["http://localhost:80/v1authentication",{"_index":1549,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":1030,"title":{},"body":{"guards/RolesGuard.html":{}}}],["httpexception(err.message",{"_index":1037,"title":{},"body":{"guards/RolesGuard.html":{}}}],["httponly",{"_index":398,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["https",{"_index":1679,"title":{},"body":{"index.html":{}}}],["httpstatus.bad_request",{"_index":1939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.conflict",{"_index":1977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.forbidden",{"_index":1942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.gone",{"_index":1945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.locked",{"_index":1948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.not_acceptable",{"_index":1968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.not_found",{"_index":1953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.service_unavailable",{"_index":1934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus.unauthorized",{"_index":1912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iat",{"_index":742,"title":{},"body":{"interfaces/IDecodedCsrf.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["id",{"_index":1214,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["idecodedcsrf",{"_index":738,"title":{"interfaces/IDecodedCsrf.html":{}},"body":{"interfaces/IDecodedCsrf.html":{},"guards/JWTDecodedAuthGuard.html":{},"coverage.html":{}}}],["identifier",{"_index":1224,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["ignore",{"_index":515,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["image",{"_index":1737,"title":{},"body":{"index.html":{}}}],["imgsrc",{"_index":1680,"title":{},"body":{"index.html":{}}}],["implemented",{"_index":1762,"title":{},"body":{"index.html":{}}}],["implements",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/CorsMiddleware.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/UniqueKeysConstraint.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{}}}],["important",{"_index":564,"title":{},"body":{"modules/CacheModule.html":{}}}],["imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{}}}],["inactive",{"_index":1418,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["includes(headers.os",{"_index":395,"title":{},"body":{"injectables/AuthService.html":{}}}],["incorrect",{"_index":1050,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{},"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexes",{"_index":1702,"title":{},"body":{"index.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["info.messageid",{"_index":947,"title":{},"body":{"injectables/MailerService.html":{}}}],["information",{"_index":1722,"title":{},"body":{"index.html":{}}}],["inherited",{"_index":1186,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["inject",{"_index":281,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{}}}],["inject('mail_transporter",{"_index":942,"title":{},"body":{"injectables/MailerService.html":{}}}],["injectable",{"_index":149,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"injectables/DatabaseService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"injectables/SwaggerAuthMiddleware.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":150,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"injectables/DatabaseService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"injectables/SwaggerAuthMiddleware.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":703,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["injection/escaperegex.ts",{"_index":1244,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["injectmodel",{"_index":1199,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["injectmodel(user.name",{"_index":1201,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["insert",{"_index":1590,"title":{},"body":{"index.html":{}}}],["install",{"_index":1504,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1452,"title":{},"body":{"index.html":{}}}],["installed",{"_index":1760,"title":{},"body":{"index.html":{}}}],["instructions",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["interface",{"_index":737,"title":{"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{}},"body":{"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":739,"title":{},"body":{"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"overview.html":{}}}],["interfaces/csrf.interface",{"_index":823,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["interfaces/requestwithiuser.interface",{"_index":822,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["invalid",{"_index":843,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["invalid_token",{"_index":1374,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["invalid_token_message",{"_index":1278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalid_url_params",{"_index":1398,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["invalid_url_params_message",{"_index":1279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["invalidate",{"_index":1636,"title":{},"body":{"index.html":{}}}],["invoked",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["ioredis",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"dependencies.html":{}}}],["ios",{"_index":800,"title":{},"body":{"guards/JWTAuthGuard.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ios_critical_update",{"_index":1377,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["ios_critical_update=1",{"_index":1546,"title":{},"body":{"index.html":{}}}],["ios_critical_update_message",{"_index":1280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ip",{"_index":902,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"index.html":{}}}],["irequestwithuser",{"_index":743,"title":{"interfaces/IRequestWithUser.html":{}},"body":{"interfaces/IRequestWithUser.html":{},"guards/JWTDecodedAuthGuard.html":{},"coverage.html":{}}}],["irequestwithuser).user",{"_index":854,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["is_public_key",{"_index":819,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isactive",{"_index":778,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["isboolean",{"_index":963,"title":{},"body":{"classes/PaginationParams.html":{}}}],["isemail",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/VerifyEmailDto.html":{}}}],["isenum",{"_index":658,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["isenum(operatingsystem",{"_index":1074,"title":{},"body":{"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["isenum(usersignupenum",{"_index":656,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isexpire",{"_index":855,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["isglobal",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["isjwt",{"_index":894,"title":{},"body":{"classes/JwtHeaders.html":{}}}],["ismatched",{"_index":761,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["isnan(val",{"_index":990,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["isnotempty",{"_index":1072,"title":{},"body":{"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["isnotempty()@isstring",{"_index":1069,"title":{},"body":{"classes/SystemControlValidationDto.html":{}}}],["isnumber",{"_index":959,"title":{},"body":{"classes/PaginationParams.html":{},"classes/VerifyEmailDto.html":{}}}],["isoptional",{"_index":961,"title":{},"body":{"classes/PaginationParams.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["isoptional()@isboolean()@transform",{"_index":953,"title":{},"body":{"classes/PaginationParams.html":{}}}],["ispublic",{"_index":826,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":630,"title":{},"body":{"classes/CreateCacheDto.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["isstring()@isenum(operatingsystem",{"_index":1077,"title":{},"body":{"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["isstrongpassword",{"_index":659,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["isstrongpassword({minlength",{"_index":648,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["issues",{"_index":1774,"title":{},"body":{"index.html":{}}}],["istokenincache",{"_index":880,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["item",{"_index":998,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{},"guards/RolesGuard.html":{},"classes/UniqueKeysConstraint.html":{},"miscellaneous/variables.html":{}}}],["item[uniquekey]?.tolowercase",{"_index":1115,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["items",{"_index":1874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iterate",{"_index":1108,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["john",{"_index":1572,"title":{},"body":{"index.html":{}}}],["john.doe@example.com",{"_index":1574,"title":{},"body":{"index.html":{}}}],["join",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(json.stringify(user",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify",{"_index":914,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["json.stringify(ctx",{"_index":1894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(headers",{"_index":915,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["jsonwebtoken",{"_index":750,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["jwt",{"_index":749,"title":{},"body":{"guards/JWTAuthGuard.html":{},"index.html":{}}}],["jwt.decorator",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["jwt.decorator.ts",{"_index":1259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwt.sign",{"_index":772,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["jwt.sign(accountfromdb",{"_index":767,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["jwt_csrf_secret=your_jwt_csrf_secret",{"_index":1534,"title":{},"body":{"index.html":{}}}],["jwt_expiry=1d",{"_index":1535,"title":{},"body":{"index.html":{}}}],["jwt_refresh_expiry=7d",{"_index":1536,"title":{},"body":{"index.html":{}}}],["jwt_refresh_secret=your_jwt_refresh_secret",{"_index":1533,"title":{},"body":{"index.html":{}}}],["jwt_secret=your_jwt_secret",{"_index":1532,"title":{},"body":{"index.html":{}}}],["jwtauthguard",{"_index":226,"title":{"guards/JWTAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"guards/JWTAuthGuard.html":{},"coverage.html":{},"index.html":{}}}],["jwtcsrftoken",{"_index":774,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["jwtdecodedauthguard",{"_index":275,"title":{"guards/JWTDecodedAuthGuard.html":{}},"body":{"modules/AuthModule.html":{},"guards/JWTDecodedAuthGuard.html":{},"coverage.html":{},"index.html":{}}}],["jwtheaders",{"_index":891,"title":{"classes/JwtHeaders.html":{}},"body":{"classes/JwtHeaders.html":{},"coverage.html":{}}}],["jwtmodule",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":277,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtrefreshtoken",{"_index":771,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["jwtservice",{"_index":289,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["jwttoken",{"_index":766,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["key",{"_index":581,"title":{},"body":{"injectables/CacheService.html":{},"classes/CreateCacheDto.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/UniqueKeysConstraint.html":{}}}],["keyprefix",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["keys",{"_index":1093,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["keyvalue",{"_index":1114,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["later",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lean",{"_index":492,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["legend",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":296,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerMiddleware.html":{}}}],["letters",{"_index":643,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["level",{"_index":1881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["levels",{"_index":1768,"title":{},"body":{"index.html":{}}}],["license",{"_index":1799,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":1801,"title":{},"body":{"index.html":{}}}],["limit",{"_index":498,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"classes/PaginationParams.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["limiter",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{}}}],["limiting",{"_index":1467,"title":{},"body":{"index.html":{}}}],["limits",{"_index":1672,"title":{},"body":{"index.html":{}}}],["line",{"_index":510,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["link",{"_index":1367,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["links",{"_index":1808,"title":{},"body":{"index.html":{}}}],["literal",{"_index":1823,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lived",{"_index":1650,"title":{},"body":{"index.html":{}}}],["load",{"_index":1479,"title":{},"body":{"index.html":{}}}],["locale",{"_index":518,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["lodash",{"_index":483,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["log",{"_index":1880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":897,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"miscellaneous/variables.html":{}}}],["logger('http",{"_index":900,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["logger(mailerservice.name",{"_index":941,"title":{},"body":{"injectables/MailerService.html":{}}}],["loggermiddleware",{"_index":91,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/LoggerMiddleware.html":{},"coverage.html":{},"index.html":{}}}],["logging",{"_index":1475,"title":{},"body":{"index.html":{}}}],["login",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logout",{"_index":161,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["logout(user",{"_index":178,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["logs/combined",{"_index":1878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs/errors",{"_index":1883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logs/exceptions.log",{"_index":1886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["long",{"_index":1651,"title":{},"body":{"index.html":{}}}],["m",{"_index":1794,"title":{},"body":{"index.html":{}}}],["mail_host=smtp.gmail.com",{"_index":1537,"title":{},"body":{"index.html":{}}}],["mail_pass=your_app_password",{"_index":1540,"title":{},"body":{"index.html":{}}}],["mail_port=587",{"_index":1538,"title":{},"body":{"index.html":{}}}],["mail_transporter",{"_index":925,"title":{},"body":{"modules/MailerModule.html":{}}}],["mail_user=your_email@gmail.com",{"_index":1539,"title":{},"body":{"index.html":{}}}],["mailer.controller",{"_index":923,"title":{},"body":{"modules/MailerModule.html":{}}}],["mailer.service",{"_index":918,"title":{},"body":{"controllers/MailerController.html":{},"modules/MailerModule.html":{}}}],["mailer/mailer.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["mailer/mailer.service",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["mailercontroller",{"_index":916,"title":{"controllers/MailerController.html":{}},"body":{"controllers/MailerController.html":{},"modules/MailerModule.html":{},"coverage.html":{}}}],["mailermodule",{"_index":69,"title":{"modules/MailerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MailerModule.html":{},"modules.html":{},"overview.html":{}}}],["mailerservice",{"_index":288,"title":{"injectables/MailerService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["maintenance",{"_index":790,"title":{},"body":{"guards/JWTAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["man",{"_index":567,"title":{},"body":{"modules/CacheModule.html":{}}}],["many_attempt",{"_index":1392,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["many_attempt_message",{"_index":1281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["match",{"_index":1598,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["matches",{"_index":660,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[\\p{l",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maxpoolsize",{"_index":675,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mechanism",{"_index":1465,"title":{},"body":{"index.html":{}}}],["message",{"_index":534,"title":{},"body":{"classes/BaseResponse.html":{},"classes/CreateUserDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["messages",{"_index":1772,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":977,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{},"dependencies.html":{}}}],["metadata.type",{"_index":980,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["method",{"_index":903,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["methoddecorator",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["metrics",{"_index":1779,"title":{},"body":{"index.html":{}}}],["middle",{"_index":568,"title":{},"body":{"modules/CacheModule.html":{}}}],["middleware",{"_index":1456,"title":{},"body":{"index.html":{}}}],["middlewareconsumer",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["min",{"_index":960,"title":{},"body":{"classes/PaginationParams.html":{}}}],["min(1",{"_index":966,"title":{},"body":{"classes/PaginationParams.html":{}}}],["minimum",{"_index":1664,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":661,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["minlength(3",{"_index":663,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlowercase",{"_index":650,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["minnumbers",{"_index":652,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["minpoolsize",{"_index":674,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["minsymbols",{"_index":653,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["minuppercase",{"_index":651,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{}}}],["minute",{"_index":1669,"title":{},"body":{"index.html":{}}}],["minutes",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["miscellaneous",{"_index":1346,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mismatch",{"_index":1641,"title":{},"body":{"index.html":{}}}],["mit",{"_index":1803,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["mode",{"_index":1729,"title":{},"body":{"index.html":{}}}],["model",{"_index":431,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["module",{"_index":54,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo:5.0",{"_index":1747,"title":{},"body":{"index.html":{}}}],["mongo_initdb_root_password",{"_index":1749,"title":{},"body":{"index.html":{}}}],["mongo_initdb_root_username",{"_index":1748,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":707,"title":{},"body":{"injectables/DatabaseService.html":{},"index.html":{}}}],["mongodb_uri=mongodb+srv://username:password@cluster.mongodb.net/database",{"_index":1524,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":485,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/DatabaseService.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":668,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":1180,"title":{},"body":{"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":671,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["monitoring",{"_index":1763,"title":{},"body":{"index.html":{}}}],["month",{"_index":1414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mset",{"_index":595,"title":{},"body":{"injectables/CacheService.html":{}}}],["multi",{"_index":1468,"title":{},"body":{"index.html":{}}}],["multiargs",{"_index":596,"title":{},"body":{"injectables/CacheService.html":{}}}],["multipart/form",{"_index":1873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multiple",{"_index":600,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{}}}],["myapp",{"_index":1606,"title":{},"body":{"index.html":{}}}],["name",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/UniqueKeysConstraint.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["name.enums",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["name.enums.ts",{"_index":1355,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["need",{"_index":1909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":1338,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["nestjs",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":271,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1309,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":669,"title":{},"body":{"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1312,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/CacheController.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":620,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["nestmodule",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["never",{"_index":1437,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"modules/CacheModule.html":{},"guards/HeaderValidationGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"guards/RolesGuard.html":{},"classes/UniqueKeysConstraint.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newaccesstoken",{"_index":884,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["newdocument",{"_index":489,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["newdocument.toobject",{"_index":491,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["next",{"_index":509,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/CorsMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["nextfunction",{"_index":617,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["nginx",{"_index":1478,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":1493,"title":{},"body":{"index.html":{}}}],["node_env=development",{"_index":1518,"title":{},"body":{"index.html":{}}}],["node_env=production",{"_index":1745,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":924,"title":{},"body":{"modules/MailerModule.html":{},"injectables/MailerService.html":{},"dependencies.html":{}}}],["nodemailer.createtransport",{"_index":926,"title":{},"body":{"modules/MailerModule.html":{}}}],["none",{"_index":404,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["not_allowed",{"_index":1401,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["not_allowed_message",{"_index":1282,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["not_completed",{"_index":1394,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["not_found",{"_index":1387,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_found_message",{"_index":1283,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["not_found_product",{"_index":1388,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["not_found_product_message",{"_index":1284,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["not_found_user",{"_index":1391,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["note",{"_index":1618,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1498,"title":{},"body":{"index.html":{}}}],["null",{"_index":536,"title":{},"body":{"classes/BaseResponse.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/UniqueKeysConstraint.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":292,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"interfaces/IDecodedCsrf.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/VerifyEmailDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number(process.env.redis_port",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["numericordering",{"_index":521,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["o.allowpagination",{"_index":965,"title":{},"body":{"classes/PaginationParams.html":{}}}],["o.allowpagination)@type(undefined)@isnumber()@min(1",{"_index":956,"title":{},"body":{"classes/PaginationParams.html":{}}}],["obj",{"_index":967,"title":{},"body":{"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{}}}],["obj[key",{"_index":989,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["object",{"_index":468,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["object.constructor",{"_index":1125,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["object.entries(records).flatmap(([key",{"_index":597,"title":{},"body":{"injectables/CacheService.html":{}}}],["object.keys(obj).foreach(key",{"_index":985,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["object.keys(records).foreach((key",{"_index":607,"title":{},"body":{"injectables/CacheService.html":{}}}],["object.values(error.constraints",{"_index":736,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["object.values(userrolesenums",{"_index":1161,"title":{},"body":{"classes/User.html":{}}}],["object.values(userstatus",{"_index":1162,"title":{},"body":{"classes/User.html":{}}}],["object[field",{"_index":1020,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["objectid",{"_index":1695,"title":{},"body":{"index.html":{}}}],["objectsrc",{"_index":1683,"title":{},"body":{"index.html":{}}}],["observable",{"_index":1029,"title":{},"body":{"guards/RolesGuard.html":{}}}],["ok",{"_index":538,"title":{},"body":{"classes/BaseResponse.html":{},"index.html":{}}}],["onapplicationshutdown",{"_index":694,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["onapplicationshutdown(signal",{"_index":699,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["onmoduledestroy",{"_index":695,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["open",{"_index":1797,"title":{},"body":{"index.html":{}}}],["operatingsystem",{"_index":319,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"miscellaneous/enumerations.html":{}}}],["operatingsystem.android].includes",{"_index":863,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["operatingsystem.android].includes(headers.os",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["operatingsystem.elastic",{"_index":393,"title":{},"body":{"injectables/AuthService.html":{}}}],["operatingsystem.ios",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["operatingsystem.swagger",{"_index":392,"title":{},"body":{"injectables/AuthService.html":{}}}],["operatingsystem.web",{"_index":394,"title":{},"body":{"injectables/AuthService.html":{}}}],["optimization",{"_index":1473,"title":{},"body":{"index.html":{}}}],["optional",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":456,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"miscellaneous/variables.html":{}}}],["options.required",{"_index":1867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["order",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["origin",{"_index":621,"title":{},"body":{"injectables/CorsMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{},"index.html":{}}}],["originalurl",{"_index":904,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["origins",{"_index":1686,"title":{},"body":{"index.html":{}}}],["os",{"_index":1066,"title":{},"body":{"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["os.enums",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["os.enums.ts",{"_index":1357,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["otp",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/VerifyEmailDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["otp.startswith('0",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{}}}],["otp.tostring",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{}}}],["otp:${createuserdto.email",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{}}}],["otp_not_exist_or_expired",{"_index":1386,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["otp_not_exist_or_expired_message",{"_index":1285,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["otp_not_match",{"_index":1385,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["otp_not_match_with_current_otp",{"_index":1286,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["otps",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{}}}],["out",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["over",{"_index":1109,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"index.html":{}}}],["overview",{"_index":1450,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1739,"title":{},"body":{"index.html":{}}}],["package",{"_index":1305,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padstart(length",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{}}}],["page",{"_index":497,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"classes/PaginationParams.html":{},"miscellaneous/functions.html":{}}}],["paginate",{"_index":684,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["paginationparams",{"_index":950,"title":{"classes/PaginationParams.html":{}},"body":{"classes/PaginationParams.html":{},"coverage.html":{}}}],["pairs",{"_index":601,"title":{},"body":{"injectables/CacheService.html":{}}}],["param",{"_index":981,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["parameters",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parentkey",{"_index":984,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["parentkey}.${key",{"_index":987,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["parseint(process.env.android_critical_update",{"_index":793,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["parseint(process.env.application_status",{"_index":788,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["parseint(process.env.ios_critical_update",{"_index":799,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["parseint(process.env.salt_round",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{}}}],["parseint(request.headers.version",{"_index":794,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["parser",{"_index":1320,"title":{},"body":{"dependencies.html":{}}}],["partialtype",{"_index":1130,"title":{},"body":{"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createcachedto",{"_index":1129,"title":{},"body":{"classes/UpdateCacheDto.html":{}}}],["partialtype(createuserdto",{"_index":1134,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["participant",{"_index":1565,"title":{},"body":{"index.html":{}}}],["pass",{"_index":930,"title":{},"body":{"modules/MailerModule.html":{}}}],["password",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["password_not_valid",{"_index":1381,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["password_not_valid_message",{"_index":1287,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["passwordproduction",{"_index":1754,"title":{},"body":{"index.html":{}}}],["passwords",{"_index":1658,"title":{},"body":{"index.html":{}}}],["patch",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["patch('verify",{"_index":240,"title":{},"body":{"controllers/AuthController.html":{}}}],["path",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/UsersController.html":{}}}],["pending",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pending_requests",{"_index":1397,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["per",{"_index":1668,"title":{},"body":{"index.html":{}}}],["performance",{"_index":1472,"title":{},"body":{"index.html":{}}}],["permission",{"_index":1393,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["permission_denied_message",{"_index":1288,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["persistence",{"_index":1474,"title":{},"body":{"index.html":{}}}],["phone",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone_exist",{"_index":1390,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipeline",{"_index":605,"title":{},"body":{"injectables/CacheService.html":{}}}],["pipeline.exec",{"_index":611,"title":{},"body":{"injectables/CacheService.html":{}}}],["pipeline.expire(key",{"_index":608,"title":{},"body":{"injectables/CacheService.html":{}}}],["pipetransform",{"_index":971,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["place",{"_index":1766,"title":{},"body":{"index.html":{}}}],["plaintoinstance",{"_index":723,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["platform",{"_index":1469,"title":{},"body":{"index.html":{}}}],["please",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["points",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{}}}],["policy",{"_index":1663,"title":{},"body":{"index.html":{}}}],["port",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/MailerModule.html":{}}}],["ports",{"_index":1744,"title":{},"body":{"index.html":{}}}],["post",{"_index":208,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["post('signin",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('signup",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{}}}],["potential",{"_index":1773,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":544,"title":{},"body":{"controllers/CacheController.html":{}}}],["prepare",{"_index":593,"title":{},"body":{"injectables/CacheService.html":{}}}],["prerequisites",{"_index":1492,"title":{},"body":{"index.html":{}}}],["prevents",{"_index":1653,"title":{},"body":{"index.html":{}}}],["private",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CacheService.html":{},"injectables/DatabaseService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"injectables/UsersRepository.html":{}}}],["privatekey",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privatekeyid",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_auth_provider_x509_cert",{"_index":2008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_auth_uri",{"_index":2004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_client_email",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_client_id",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_client_x509_cert",{"_index":2010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_private_key",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_private_key_id",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_project_id",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_token_uri",{"_index":2006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.firebase_type",{"_index":1992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_csrf_secret",{"_index":777,"title":{},"body":{"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["process.env.jwt_expiry",{"_index":770,"title":{},"body":{"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["process.env.jwt_refresh_expiry",{"_index":773,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["process.env.jwt_refresh_secret",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["process.env.jwt_secret",{"_index":768,"title":{},"body":{"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["process.env.node_env",{"_index":401,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["process.env.redis_host",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.redis_password",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.redis_username",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.swagger_password",{"_index":1054,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["process.env.swagger_user",{"_index":1052,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["product",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":402,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["profile",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile.decorator.ts",{"_index":1250,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":1800,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projection",{"_index":461,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["promise",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"injectables/CacheService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"injectables/UsersRepository.html":{}}}],["prop",{"_index":1147,"title":{},"body":{"classes/User.html":{}}}],["prop({get",{"_index":1140,"title":{},"body":{"classes/User.html":{}}}],["prop({required",{"_index":1138,"title":{},"body":{"classes/User.html":{}}}],["prop({type",{"_index":1143,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":429,"title":{"properties.html":{}},"body":{"classes/BaseAbstractRepository.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/SignInDto.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"classes/VerifyEmailDto.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":1102,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"miscellaneous/variables.html":{}}}],["propertydescriptor",{"_index":1872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":1870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertyname",{"_index":1123,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["protect",{"_index":565,"title":{},"body":{"modules/CacheModule.html":{},"index.html":{}}}],["protected",{"_index":430,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{},"index.html":{}}}],["protection",{"_index":1485,"title":{},"body":{"index.html":{}}}],["provide",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/MailerModule.html":{}}}],["provided",{"_index":623,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["providedfields",{"_index":1018,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["providedfields.length",{"_index":1021,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["proxy",{"_index":1481,"title":{},"body":{"index.html":{}}}],["public",{"_index":432,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pull",{"_index":1798,"title":{},"body":{"index.html":{}}}],["purpose",{"_index":1704,"title":{},"body":{"index.html":{}}}],["push",{"_index":1796,"title":{},"body":{"index.html":{}}}],["query",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"classes/RejectEmptyValuesPipe.html":{},"index.html":{}}}],["query('refreshtoken",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["queryfiltersandoptions",{"_index":470,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["queryfiltersandoptions.allowpagination",{"_index":506,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["queryfiltersandoptions.from",{"_index":499,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["queryfiltersandoptions.to",{"_index":500,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["queryoptions",{"_index":463,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["random",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomint",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{}}}],["randomint(10",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{}}}],["rate",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"dependencies.html":{},"index.html":{}}}],["ratelimit",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["ratelimit({points",{"_index":167,"title":{},"body":{"controllers/AuthController.html":{}}}],["ratelimiterguard",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["ratelimitermodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["ratelimitermodule.register",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["rates",{"_index":1782,"title":{},"body":{"index.html":{}}}],["ratios",{"_index":1784,"title":{},"body":{"index.html":{}}}],["rbac",{"_index":1466,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CacheController.html":{},"injectables/CacheService.html":{},"injectables/DatabaseService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"guards/RolesGuard.html":{},"controllers/UsersController.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":1460,"title":{},"body":{"index.html":{}}}],["realm=\"swagger",{"_index":1057,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["receive",{"_index":1604,"title":{},"body":{"index.html":{}}}],["record",{"_index":462,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/CacheService.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["records",{"_index":589,"title":{},"body":{"injectables/CacheService.html":{}}}],["recordstoredis",{"_index":760,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["recordstoredis[jwtrefreshtoken",{"_index":779,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["red",{"_index":1903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redis",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"index.html":{},"overview.html":{}}}],["redis.redis",{"_index":576,"title":{},"body":{"injectables/CacheService.html":{}}}],["redis:6.0",{"_index":1750,"title":{},"body":{"index.html":{}}}],["redis_host=your_redis_host",{"_index":1527,"title":{},"body":{"index.html":{}}}],["redis_password=your_redis_password",{"_index":1526,"title":{},"body":{"index.html":{}}}],["redis_port=13492",{"_index":1528,"title":{},"body":{"index.html":{}}}],["redis_username=default",{"_index":1525,"title":{},"body":{"index.html":{}}}],["redisclient",{"_index":578,"title":{},"body":{"injectables/CacheService.html":{}}}],["reflect",{"_index":1343,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":808,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["refresh",{"_index":414,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["refresh_expired",{"_index":1376,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["refresh_expired_message",{"_index":1289,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["refresh_token",{"_index":1612,"title":{},"body":{"index.html":{}}}],["refresherror",{"_index":887,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["refreshsecret",{"_index":876,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["refreshtoken",{"_index":183,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["register",{"_index":1568,"title":{},"body":{"index.html":{}}}],["registerdecorator",{"_index":1095,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["registration",{"_index":1484,"title":{},"body":{"index.html":{}}}],["rejectemptyvaluespipe",{"_index":969,"title":{"classes/RejectEmptyValuesPipe.html":{}},"body":{"classes/RejectEmptyValuesPipe.html":{},"coverage.html":{}}}],["rejectfalse",{"_index":975,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["rejectzero",{"_index":973,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["remove",{"_index":1625,"title":{},"body":{"index.html":{}}}],["renewal",{"_index":1652,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1501,"title":{},"body":{"index.html":{}}}],["req",{"_index":619,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["req.headers.origin",{"_index":622,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["request",{"_index":616,"title":{},"body":{"injectables/CorsMiddleware.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["request.cookies.access_token",{"_index":861,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["request.cookies.refresh_token",{"_index":873,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["request.cookies?.access_token",{"_index":860,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["request.cookies?.refresh_token",{"_index":872,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["request.get('user",{"_index":906,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request.header('authorization",{"_index":862,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["request.header('authorization')?.split",{"_index":866,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["request.header('csrf",{"_index":832,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["request.header('os",{"_index":864,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["request.headers",{"_index":730,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["request.headers.os",{"_index":795,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["request.user",{"_index":802,"title":{},"body":{"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["request/response",{"_index":1713,"title":{},"body":{"index.html":{}}}],["requestbody",{"_index":751,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["requestbody.email",{"_index":754,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["requestbody.password",{"_index":764,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["requestbody.role",{"_index":755,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["requestheaders",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requestheaders(new",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{}}}],["requests",{"_index":1553,"title":{},"body":{"index.html":{}}}],["requestwithuser).user",{"_index":1906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":1551,"title":{},"body":{"index.html":{}}}],["required",{"_index":173,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["requirement",{"_index":1711,"title":{},"body":{"index.html":{}}}],["requirements",{"_index":1666,"title":{},"body":{"index.html":{}}}],["requirepass",{"_index":1753,"title":{},"body":{"index.html":{}}}],["requiretogether",{"_index":1014,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["requiretogetherconstraint",{"_index":1003,"title":{"classes/RequireTogetherConstraint.html":{}},"body":{"classes/RequireTogetherConstraint.html":{},"coverage.html":{}}}],["res",{"_index":179,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/CorsMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["res.clearcookie('access_token",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.clearcookie('refresh_token",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie('access_token",{"_index":396,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.cookie('refresh_token",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.json(baseresponse.success",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.json(baseresponse.success('logout",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["res.setheader('access",{"_index":624,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["res.setheader('csrf",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.setheader('www",{"_index":1055,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["res.status(401).send('unauthorized",{"_index":1059,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["reset",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"classes/UniqueKeysConstraint.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resource",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":180,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseResponse.html":{},"injectables/CorsMiddleware.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{},"index.html":{}}}],["response.cookie('access_token",{"_index":886,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["response.get('content",{"_index":910,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.on('finish",{"_index":908,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["rest",{"_index":883,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["result",{"_index":1578,"title":{},"body":{"index.html":{}}}],["results",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":1155,"title":{},"body":{"classes/User.html":{}}}],["ret.__v",{"_index":1158,"title":{},"body":{"classes/User.html":{}}}],["ret._id",{"_index":1157,"title":{},"body":{"classes/User.html":{}}}],["ret.id",{"_index":1156,"title":{},"body":{"classes/User.html":{}}}],["retrieve",{"_index":1096,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["return",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["roadside",{"_index":1907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IDecodedCsrf.html":{},"guards/JWTAuthGuard.html":{},"classes/SignInDto.html":{},"classes/User.html":{},"index.html":{}}}],["roles",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(userrolesenums.super_admin",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["roles(userrolesenums.super_admin)@get('gc",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["roles(userrolesenums.user",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{}}}],["roles.find((item",{"_index":1035,"title":{},"body":{"guards/RolesGuard.html":{}}}],["roles?.length",{"_index":1034,"title":{},"body":{"guards/RolesGuard.html":{}}}],["rolesguard",{"_index":273,"title":{"guards/RolesGuard.html":{}},"body":{"modules/AuthModule.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"index.html":{}}}],["root",{"_index":1515,"title":{},"body":{"index.html":{}}}],["rootpath",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["rounds",{"_index":1661,"title":{},"body":{"index.html":{}}}],["run",{"_index":1511,"title":{},"body":{"index.html":{}}}],["running",{"_index":1556,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1031,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["safe",{"_index":1692,"title":{},"body":{"index.html":{}}}],["salt",{"_index":1660,"title":{},"body":{"index.html":{}}}],["salt_round=10",{"_index":1531,"title":{},"body":{"index.html":{}}}],["samesite",{"_index":400,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["samesite=strict",{"_index":1611,"title":{},"body":{"index.html":{}}}],["schema",{"_index":1148,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["schemafactory",{"_index":1149,"title":{},"body":{"classes/User.html":{}}}],["schemafactory.createforclass(user",{"_index":1164,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["scriptsrc",{"_index":1677,"title":{},"body":{"index.html":{}}}],["secret",{"_index":279,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{}}}],["secret_key=your_secret_key",{"_index":1529,"title":{},"body":{"index.html":{}}}],["secure",{"_index":399,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"modules/MailerModule.html":{},"index.html":{}}}],["security",{"_index":1447,"title":{},"body":{"index.html":{}}}],["see",{"_index":1804,"title":{},"body":{"index.html":{}}}],["seen",{"_index":1116,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["seenvalues",{"_index":1113,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["seenvalues.add(keyvalue",{"_index":1119,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["seenvalues.has(keyvalue",{"_index":1117,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["select",{"_index":522,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["self",{"_index":1676,"title":{},"body":{"index.html":{}}}],["seller",{"_index":1423,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["send",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MailerService.html":{}}}],["sendmail",{"_index":933,"title":{},"body":{"injectables/MailerService.html":{}}}],["sendmail(email",{"_index":1587,"title":{},"body":{"index.html":{}}}],["sendmail(to",{"_index":937,"title":{},"body":{"injectables/MailerService.html":{}}}],["sent",{"_index":946,"title":{},"body":{"injectables/MailerService.html":{},"classes/RequireTogetherConstraint.html":{},"index.html":{}}}],["sequence",{"_index":1562,"title":{},"body":{"index.html":{}}}],["sequencediagram",{"_index":1564,"title":{},"body":{"index.html":{}}}],["server",{"_index":1370,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["server_port=80",{"_index":1517,"title":{},"body":{"index.html":{}}}],["server_working",{"_index":1369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["serverchecking",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"index.html":{}}}],["serveroot",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["serverselectiontimeoutms",{"_index":677,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["servestaticmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":1482,"title":{},"body":{"index.html":{}}}],["services",{"_index":1509,"title":{},"body":{"index.html":{}}}],["session",{"_index":447,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["set",{"_index":599,"title":{},"body":{"injectables/CacheService.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"index.html":{}}}],["setcache",{"_index":573,"title":{},"body":{"injectables/CacheService.html":{}}}],["setcache(key",{"_index":584,"title":{},"body":{"injectables/CacheService.html":{}}}],["setcache(otp:email",{"_index":1584,"title":{},"body":{"index.html":{}}}],["setmetadata('roles",{"_index":2015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(allow_with_under_review",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(is_public_key",{"_index":2011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmetadata(skip_jwt_token",{"_index":2016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setmultiplecache",{"_index":574,"title":{},"body":{"injectables/CacheService.html":{}}}],["setmultiplecache(records",{"_index":587,"title":{},"body":{"injectables/CacheService.html":{}}}],["setmultiplecache(refreshtoken",{"_index":1621,"title":{},"body":{"index.html":{}}}],["setoptions",{"_index":526,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["setoptions(options",{"_index":493,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["setting",{"_index":610,"title":{},"body":{"injectables/CacheService.html":{}}}],["setup",{"_index":1453,"title":{},"body":{"index.html":{}}}],["sharing",{"_index":1693,"title":{},"body":{"index.html":{}}}],["short",{"_index":1649,"title":{},"body":{"index.html":{}}}],["shutting",{"_index":710,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["sign",{"_index":1602,"title":{},"body":{"index.html":{}}}],["sign(newaccesstoken",{"_index":1634,"title":{},"body":{"index.html":{}}}],["signal",{"_index":701,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["signin",{"_index":162,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signin(headers",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["signin(user",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{}}}],["signindto",{"_index":190,"title":{"classes/SignInDto.html":{}},"body":{"controllers/AuthController.html":{},"guards/JWTAuthGuard.html":{},"classes/SignInDto.html":{},"coverage.html":{}}}],["signup",{"_index":163,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["signup(@body",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{}}}],["signup(createuserdto",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["site",{"_index":1655,"title":{},"body":{"index.html":{}}}],["skip_jwt",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skip_jwt()@get",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["skip_jwt()@ratelimit({points",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["skip_jwt()@useguards(jwtauthguard)@ratelimit({points",{"_index":191,"title":{},"body":{"controllers/AuthController.html":{}}}],["skip_jwt_token",{"_index":821,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["skipjwt",{"_index":828,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["slack",{"_index":1806,"title":{},"body":{"index.html":{}}}],["slice(0",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{}}}],["sniffing",{"_index":566,"title":{},"body":{"modules/CacheModule.html":{}}}],["sockettimeoutms",{"_index":679,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["sort",{"_index":523,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"classes/Cache.html":{},"controllers/CacheController.html":{},"modules/CacheModule.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"controllers/MailerController.html":{},"modules/MailerModule.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/UpdateCacheDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{}}}],["spaces",{"_index":662,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["spaces'})@minlength(3",{"_index":644,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["spec.ts",{"_index":1734,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1671,"title":{},"body":{"index.html":{}}}],["specified",{"_index":1110,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["src/.../allow",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../api",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":1349,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../auth",{"_index":1351,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../base.abstract.repository.ts",{"_index":1820,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../constant.ts",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":1353,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../emailverification.ts",{"_index":1426,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../error",{"_index":1354,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../escaperegex.ts",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../factory.error.ts",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../firebase.config.ts",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1425,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../messages.constant.ts",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../preparepagination.ts",{"_index":1427,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../public.decorator.ts",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../roles.decorator.ts",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../signup.decorator.ts",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../skip",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../systems",{"_index":1356,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../throw",{"_index":1428,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../time",{"_index":1359,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../uniquekeys.decorators.ts",{"_index":1429,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.decorator.ts",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.entity.ts",{"_index":1821,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../userroles.enums.ts",{"_index":1363,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../userstatus.enum.ts",{"_index":1362,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../winston.helper.ts",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:20",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:26",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:61",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":151,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:6",{"_index":152,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:48",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:55",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:65",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:85",{"_index":176,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:97",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":268,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":282,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:124",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:160",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:24",{"_index":290,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:32",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:85",{"_index":293,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:97",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/decorators/roles.decorator.ts",{"_index":1230,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/signup.decorator.ts",{"_index":1233,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/decorators/user.decorator.ts",{"_index":1234,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/dto/jwt",{"_index":892,"title":{},"body":{"classes/JwtHeaders.html":{},"coverage.html":{}}}],["src/auth/dto/signin.dto.ts",{"_index":1039,"title":{},"body":{"classes/SignInDto.html":{},"coverage.html":{}}}],["src/auth/dto/signin.dto.ts:15",{"_index":1041,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:18",{"_index":1042,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/signin.dto.ts:6",{"_index":1040,"title":{},"body":{"classes/SignInDto.html":{}}}],["src/auth/dto/systemcontrol.dto.ts",{"_index":1063,"title":{},"body":{"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{},"coverage.html":{}}}],["src/auth/dto/systemcontrol.dto.ts:10",{"_index":1071,"title":{},"body":{"classes/SystemControlValidationDto.html":{}}}],["src/auth/dto/systemcontrol.dto.ts:14",{"_index":1070,"title":{},"body":{"classes/SystemControlValidationDto.html":{}}}],["src/auth/dto/systemcontrol.dto.ts:17",{"_index":1068,"title":{},"body":{"classes/SystemControlValidationDto.html":{}}}],["src/auth/dto/systemcontrol.dto.ts:22",{"_index":1081,"title":{},"body":{"classes/SystemControlValidationSignInDto.html":{}}}],["src/auth/dto/systemcontrol.dto.ts:25",{"_index":1085,"title":{},"body":{"classes/SystemControlValidationSignInDto.html":{}}}],["src/auth/dto/systemcontrol.dto.ts:29",{"_index":1084,"title":{},"body":{"classes/SystemControlValidationSignInDto.html":{}}}],["src/auth/dto/systemcontrol.dto.ts:34",{"_index":1083,"title":{},"body":{"classes/SystemControlValidationSignInDto.html":{}}}],["src/auth/dto/systemcontrol.dto.ts:7",{"_index":1067,"title":{},"body":{"classes/SystemControlValidationDto.html":{}}}],["src/auth/dto/verify",{"_index":1219,"title":{},"body":{"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["src/auth/enums/userroles.enums.ts",{"_index":1420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/enums/userstatus.enum.ts",{"_index":1416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/auth/guards/jwt.auth.guard.ts",{"_index":746,"title":{},"body":{"guards/JWTAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.auth.guard.ts:13",{"_index":747,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["src/auth/guards/jwt.auth.guard.ts:18",{"_index":748,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["src/auth/guards/jwt.decoded.auth.guard.ts",{"_index":803,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"coverage.html":{}}}],["src/auth/guards/jwt.decoded.auth.guard.ts:124",{"_index":815,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["src/auth/guards/jwt.decoded.auth.guard.ts:17",{"_index":809,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["src/auth/guards/jwt.decoded.auth.guard.ts:172",{"_index":812,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["src/auth/guards/jwt.decoded.auth.guard.ts:23",{"_index":810,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["src/auth/guards/jwt.decoded.auth.guard.ts:99",{"_index":817,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["src/auth/guards/role.guard.ts",{"_index":1025,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/auth/guards/role.guard.ts:13",{"_index":1027,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/guards/role.guard.ts:16",{"_index":1028,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/auth/interfaces/csrf.interface.ts",{"_index":740,"title":{},"body":{"interfaces/IDecodedCsrf.html":{},"coverage.html":{}}}],["src/auth/interfaces/requestwithiuser.interface.ts",{"_index":744,"title":{},"body":{"interfaces/IRequestWithUser.html":{},"coverage.html":{}}}],["src/cache/cache.controller.ts",{"_index":543,"title":{},"body":{"controllers/CacheController.html":{},"coverage.html":{}}}],["src/cache/cache.module.ts",{"_index":551,"title":{},"body":{"modules/CacheModule.html":{}}}],["src/cache/cache.service.ts",{"_index":570,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["src/cache/cache.service.ts:12",{"_index":588,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/cache/cache.service.ts:32",{"_index":583,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/cache/cache.service.ts:36",{"_index":580,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/cache/cache.service.ts:5",{"_index":577,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/cache/cache.service.ts:8",{"_index":586,"title":{},"body":{"injectables/CacheService.html":{}}}],["src/cache/dto/create",{"_index":628,"title":{},"body":{"classes/CreateCacheDto.html":{},"coverage.html":{}}}],["src/cache/dto/update",{"_index":1128,"title":{},"body":{"classes/UpdateCacheDto.html":{},"coverage.html":{}}}],["src/cache/entities/cache.entity.ts",{"_index":541,"title":{},"body":{"classes/Cache.html":{},"coverage.html":{}}}],["src/databases/mongodb/database.module.ts",{"_index":667,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/databases/mongodb/database.service.ts",{"_index":692,"title":{},"body":{"injectables/DatabaseService.html":{},"coverage.html":{}}}],["src/databases/mongodb/database.service.ts:13",{"_index":702,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/databases/mongodb/database.service.ts:18",{"_index":700,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/databases/mongodb/database.service.ts:6",{"_index":697,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/databases/mongodb/database.service.ts:9",{"_index":698,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["src/mailer/mailer.controller.ts",{"_index":917,"title":{},"body":{"controllers/MailerController.html":{},"coverage.html":{}}}],["src/mailer/mailer.module.ts",{"_index":922,"title":{},"body":{"modules/MailerModule.html":{}}}],["src/mailer/mailer.service.ts",{"_index":932,"title":{},"body":{"injectables/MailerService.html":{},"coverage.html":{}}}],["src/mailer/mailer.service.ts:12",{"_index":940,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/mailer/mailer.service.ts:6",{"_index":936,"title":{},"body":{"injectables/MailerService.html":{}}}],["src/main.ts",{"_index":1237,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":634,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1133,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts",{"_index":1135,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/entities/user.entity.ts:21",{"_index":1137,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:33",{"_index":1141,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:41",{"_index":1145,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:48",{"_index":1139,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:54",{"_index":1142,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:61",{"_index":1146,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1168,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.module.ts",{"_index":1176,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.repository.ts",{"_index":1182,"title":{},"body":{"injectables/UsersRepository.html":{},"coverage.html":{}}}],["src/users/users.repository.ts:8",{"_index":1184,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/users/users.service.ts",{"_index":1203,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":1210,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:14",{"_index":1208,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:18",{"_index":1213,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":1206,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/base.abstract.repository",{"_index":1200,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["src/utils/base.abstract.repository.ts",{"_index":428,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/utils/base.abstract.repository.ts:109",{"_index":459,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:115",{"_index":457,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:122",{"_index":479,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:13",{"_index":445,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:130",{"_index":481,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:138",{"_index":477,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:19",{"_index":449,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:24",{"_index":453,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:29",{"_index":464,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:39",{"_index":472,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:50",{"_index":469,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/base.abstract.repository.ts:97",{"_index":475,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["src/utils/baseresponse.ts",{"_index":531,"title":{},"body":{"classes/BaseResponse.html":{},"coverage.html":{}}}],["src/utils/baseresponse.ts:2",{"_index":537,"title":{},"body":{"classes/BaseResponse.html":{}}}],["src/utils/constant/constant.ts",{"_index":1247,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/constants.ts",{"_index":1368,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/decorators/allow",{"_index":1248,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/decorators/api",{"_index":1253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/decorators/public.decorator.ts",{"_index":1257,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/decorators/skip",{"_index":1258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/decorators/uniquekeys.decorators.ts",{"_index":1087,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/decorators/uniquekeys.decorators.ts:11",{"_index":1089,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["src/utils/decorators/uniquekeys.decorators.ts:13",{"_index":1092,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["src/utils/decorators/uniquekeys.decorators.ts:41",{"_index":1090,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["src/utils/dto/system",{"_index":1075,"title":{},"body":{"classes/SystemControlValidationDto-1.html":{},"coverage.html":{}}}],["src/utils/enums/app",{"_index":1365,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/auth",{"_index":1366,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/error",{"_index":1372,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/systems",{"_index":1407,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/enums/time",{"_index":1410,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/utils/errors/factory.error.ts",{"_index":1239,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/errors/throw",{"_index":1241,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/firebase/firebase.config.ts",{"_index":1260,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/guard/header",{"_index":715,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"coverage.html":{}}}],["src/utils/messages/messages.constant.ts",{"_index":1262,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/middlewares/logger.middleware.ts",{"_index":896,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["src/utils/middlewares/logger.middleware.ts:6",{"_index":901,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/utils/middlewares/logger.middleware.ts:8",{"_index":899,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/utils/middlewares/originresponseheaders.middleware.ts",{"_index":614,"title":{},"body":{"injectables/CorsMiddleware.html":{},"coverage.html":{}}}],["src/utils/middlewares/originresponseheaders.middleware.ts:6",{"_index":618,"title":{},"body":{"injectables/CorsMiddleware.html":{}}}],["src/utils/middlewares/swagger.middleware.ts",{"_index":1044,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{},"coverage.html":{}}}],["src/utils/middlewares/swagger.middleware.ts:7",{"_index":1045,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["src/utils/pagination/paginationfilter.dto.ts",{"_index":951,"title":{},"body":{"classes/PaginationParams.html":{},"coverage.html":{}}}],["src/utils/pagination/paginationfilter.dto.ts:15",{"_index":957,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/utils/pagination/paginationfilter.dto.ts:22",{"_index":954,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/utils/pagination/paginationfilter.dto.ts:9",{"_index":958,"title":{},"body":{"classes/PaginationParams.html":{}}}],["src/utils/pagination/preparepagination.ts",{"_index":1299,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/pipes/rejectemptyvalues.pipe.ts",{"_index":970,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{},"coverage.html":{}}}],["src/utils/pipes/rejectemptyvalues.pipe.ts:3",{"_index":974,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["src/utils/pipes/rejectemptyvalues.pipe.ts:9",{"_index":979,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["src/utils/sql",{"_index":1243,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/templates/emailverification.ts",{"_index":1246,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/types/error",{"_index":1822,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/utils/validations/requiredtogetherconstraint.ts",{"_index":1004,"title":{},"body":{"classes/RequireTogetherConstraint.html":{},"coverage.html":{}}}],["src/utils/validations/requiredtogetherconstraint.ts:14",{"_index":1009,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["src/utils/validations/requiredtogetherconstraint.ts:5",{"_index":1012,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["src/utils/winston.helper.ts",{"_index":1301,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ssl",{"_index":558,"title":{},"body":{"modules/CacheModule.html":{},"index.html":{}}}],["start",{"_index":1508,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["start:dev",{"_index":1512,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":1514,"title":{},"body":{"index.html":{}}}],["started",{"_index":1440,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1225,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseResponse.html":{},"dependencies.html":{}}}],["status",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["status=not_completed",{"_index":1599,"title":{},"body":{"index.html":{}}}],["statuscode",{"_index":539,"title":{},"body":{"classes/BaseResponse.html":{},"injectables/LoggerMiddleware.html":{}}}],["stopped",{"_index":787,"title":{},"body":{"guards/JWTAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["storage",{"_index":1716,"title":{},"body":{"index.html":{}}}],["store",{"_index":1586,"title":{},"body":{"index.html":{}}}],["storeclient",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["stored",{"_index":1595,"title":{},"body":{"index.html":{}}}],["str",{"_index":1990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["str.replace(/[.*+?^${}()|[\\]\\\\]/g",{"_index":1991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategy",{"_index":1765,"title":{},"body":{"index.html":{}}}],["strict",{"_index":403,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["string",{"_index":153,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"interfaces/IDecodedCsrf.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"classes/SignInDto.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["string(ctx",{"_index":1895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strong",{"_index":1662,"title":{},"body":{"index.html":{}}}],["strongp@ss123",{"_index":1575,"title":{},"body":{"index.html":{}}}],["structure",{"_index":1731,"title":{},"body":{"index.html":{}}}],["stylesrc",{"_index":1678,"title":{},"body":{"index.html":{}}}],["subject",{"_index":938,"title":{},"body":{"injectables/MailerService.html":{},"index.html":{}}}],["success",{"_index":532,"title":{},"body":{"classes/BaseResponse.html":{},"index.html":{}}}],["success(response",{"_index":533,"title":{},"body":{"classes/BaseResponse.html":{}}}],["success/failure",{"_index":1781,"title":{},"body":{"index.html":{}}}],["successful",{"_index":1608,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"index.html":{}}}],["suite",{"_index":1488,"title":{},"body":{"index.html":{}}}],["super",{"_index":1646,"title":{},"body":{"index.html":{}}}],["super(usermodel",{"_index":1202,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["super_admin",{"_index":1421,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["support",{"_index":1470,"title":{},"body":{"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["support@example.com",{"_index":1805,"title":{},"body":{"index.html":{}}}],["supported",{"_index":559,"title":{},"body":{"modules/CacheModule.html":{}}}],["suspended",{"_index":1384,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":1810,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1061,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["swagger_password=\"easy",{"_index":1521,"title":{},"body":{"index.html":{}}}],["swagger_route=api",{"_index":1519,"title":{},"body":{"index.html":{}}}],["swagger_user=admin",{"_index":1520,"title":{},"body":{"index.html":{}}}],["swaggerauthmiddleware",{"_index":1043,"title":{"injectables/SwaggerAuthMiddleware.html":{}},"body":{"injectables/SwaggerAuthMiddleware.html":{},"coverage.html":{},"index.html":{}}}],["symbol",{"_index":2012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["system",{"_index":1461,"title":{},"body":{"index.html":{}}}],["systemcontrolvalidationdto",{"_index":725,"title":{"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{}},"body":{"guards/HeaderValidationGuard.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"coverage.html":{}}}],["systemcontrolvalidationsignindto",{"_index":182,"title":{"classes/SystemControlValidationSignInDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{},"coverage.html":{}}}],["t",{"_index":452,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{},"index.html":{}}}],["table",{"_index":1304,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1303,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":1124,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"miscellaneous/variables.html":{}}}],["task",{"_index":562,"title":{},"body":{"modules/CacheModule.html":{}}}],["tdocument",{"_index":486,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"miscellaneous/typealiases.html":{}}}],["template",{"_index":1588,"title":{},"body":{"index.html":{}}}],["template.enums",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["template.enums.ts",{"_index":1352,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["test",{"_index":1725,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":1727,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1726,"title":{},"body":{"index.html":{}}}],["test:watchtest",{"_index":1730,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1458,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1723,"title":{},"body":{"index.html":{}}}],["there_is_pending_request",{"_index":1290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["this.authservice.logout(user",{"_index":262,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signin(headers",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.signup(createuserdto",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.verifyemail(email",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.cacheservice.deletecache(refreshtoken",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cacheservice.getcache(`otp:${email",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cacheservice.getcache(refreshtoken",{"_index":881,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.cacheservice.setcache",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cacheservice.setmultiplecache(recordstoredis",{"_index":781,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["this.checkuserstatus(decoded",{"_index":848,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.connection",{"_index":705,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.connection.close",{"_index":708,"title":{},"body":{"injectables/DatabaseService.html":{}}}],["this.duplicatekey",{"_index":1118,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["this.generatenewtokenorthrowerror",{"_index":856,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.generateotp(4",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.gettokens(request",{"_index":834,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.jwtservice.sign(rest",{"_index":885,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.jwtservice.verify",{"_index":847,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.jwtservice.verify(csrftoken",{"_index":838,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.jwtservice.verify(refreshtoken",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["this.logger.error(`failed",{"_index":948,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.logger.log",{"_index":913,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["this.logger.log(`email",{"_index":945,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.mailerservice.sendmail",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.model",{"_index":488,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["this.model(data).save",{"_index":490,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["this.model.deletemany(filterquery",{"_index":528,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["this.model.deleteone(filterquery",{"_index":527,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["this.model.paginate(filters",{"_index":516,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["this.model.updatemany(filterquery",{"_index":530,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["this.model.updateone(filterquery",{"_index":529,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["this.redisclient.del(key",{"_index":613,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.redisclient.get(key",{"_index":612,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.redisclient.mset(...multiargs",{"_index":602,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.redisclient.pipeline",{"_index":606,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.redisclient.set(key",{"_index":591,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.reflector.get('roles",{"_index":1032,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.reflector.get(is_public_key",{"_index":827,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.reflector.get(skip_jwt_token",{"_index":829,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["this.rejectfalse",{"_index":992,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["this.rejectzero",{"_index":991,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["this.transporter.sendmail",{"_index":943,"title":{},"body":{"injectables/MailerService.html":{}}}],["this.usersrepository.create(createuserdto",{"_index":1217,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.findone(filter",{"_index":1216,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersrepository.updateonevoid",{"_index":1218,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{}}}],["this.usersservice.updatestatus(user.id",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{},"guards/HeaderValidationGuard.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"guards/RolesGuard.html":{},"index.html":{}}}],["throwerrorfactory",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwerrorfactory(errortype",{"_index":1435,"title":{},"body":{"miscellaneous/functions.html":{}}}],["throwerrorfactory(errortypes.account_inactive",{"_index":890,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.android_critical_update",{"_index":797,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["throwerrorfactory(errortypes.application_maintenance",{"_index":791,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["throwerrorfactory(errortypes.application_stopped",{"_index":789,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["throwerrorfactory(errortypes.csrf_invalid_token",{"_index":844,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.csrf_token_expired",{"_index":845,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.csrf_token_required",{"_index":833,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.email_exist",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerrorfactory(errortypes.invalid_token",{"_index":858,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.ios_critical_update",{"_index":801,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["throwerrorfactory(errortypes.not_allowed",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{},"guards/RolesGuard.html":{}}}],["throwerrorfactory(errortypes.not_found_user",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{}}}],["throwerrorfactory(errortypes.otp_not_exist_or_expired",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerrorfactory(errortypes.otp_not_match",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerrorfactory(errortypes.password_not_valid",{"_index":780,"title":{},"body":{"guards/JWTAuthGuard.html":{}}}],["throwerrorfactory(errortypes.refresh_expired",{"_index":882,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.suspended",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerrorfactory(errortypes.token_required",{"_index":835,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.user_blocked",{"_index":758,"title":{},"body":{"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.user_deleted",{"_index":757,"title":{},"body":{"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["throwerrorfactory(errortypes.wrong_csrf_token",{"_index":853,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["times",{"_index":1780,"title":{},"body":{"index.html":{}}}],["timestamp",{"_index":1558,"title":{},"body":{"index.html":{}}}],["timestamps",{"_index":1151,"title":{},"body":{"classes/User.html":{}}}],["timeunit",{"_index":1358,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["title",{"_index":1433,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tls",{"_index":557,"title":{},"body":{"modules/CacheModule.html":{}}}],["together",{"_index":1024,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["tojson",{"_index":1152,"title":{},"body":{"classes/User.html":{}}}],["token",{"_index":171,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["token_expired",{"_index":1373,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["token_expired_message",{"_index":1291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token_required",{"_index":1400,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["token_required_message",{"_index":1292,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tokenexpirederror",{"_index":875,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["tokens",{"_index":1605,"title":{},"body":{"index.html":{}}}],["tokenuri",{"_index":2005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tostring",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{}}}],["tracking",{"_index":1714,"title":{},"body":{"index.html":{}}}],["transform",{"_index":964,"title":{},"body":{"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/User.html":{}}}],["transform(value",{"_index":976,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["transformer",{"_index":724,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"classes/PaginationParams.html":{},"dependencies.html":{}}}],["transmission",{"_index":1690,"title":{},"body":{"index.html":{}}}],["transporter",{"_index":935,"title":{},"body":{"injectables/MailerService.html":{}}}],["transports",{"_index":1876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.console",{"_index":1884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.file",{"_index":1877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trigger",{"_index":1645,"title":{},"body":{"index.html":{}}}],["triggered",{"_index":1648,"title":{},"body":{"index.html":{}}}],["trimmed",{"_index":1696,"title":{},"body":{"index.html":{}}}],["true",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"modules/DatabaseModule.html":{},"guards/HeaderValidationGuard.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"modules/MailerModule.html":{},"classes/PaginationParams.html":{},"guards/RolesGuard.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["true'].indexof(obj.allowpagination",{"_index":968,"title":{},"body":{"classes/PaginationParams.html":{}}}],["true})@delete('logout')@apiquery({name",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{}}}],["true})@get('check",{"_index":174,"title":{},"body":{"controllers/AuthController.html":{}}}],["try",{"_index":837,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"injectables/MailerService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":513,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["ttl",{"_index":585,"title":{},"body":{"injectables/CacheService.html":{}}}],["type",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseService.html":{},"guards/HeaderValidationGuard.html":{},"interfaces/IDecodedCsrf.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/JwtHeaders.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/PaginationParams.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"guards/RolesGuard.html":{},"classes/SignInDto.html":{},"injectables/SwaggerAuthMiddleware.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1816,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":982,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":1310,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["types/basic",{"_index":1315,"title":{},"body":{"dependencies.html":{}}}],["types/bcrypt",{"_index":1317,"title":{},"body":{"dependencies.html":{}}}],["types/cookie",{"_index":1319,"title":{},"body":{"dependencies.html":{}}}],["types/ioredis",{"_index":1322,"title":{},"body":{"dependencies.html":{}}}],["types/mongoose",{"_index":1324,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":511,"title":{},"body":{"classes/BaseAbstractRepository.html":{}}}],["u",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ui",{"_index":1058,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{}}}],["unauthorization",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorized_message",{"_index":1293,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["undefined",{"_index":859,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/RequireTogetherConstraint.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1802,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unique",{"_index":1166,"title":{},"body":{"classes/User.html":{},"index.html":{}}}],["uniquekey",{"_index":1112,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["uniquekeys",{"_index":1100,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uniquekeys(uniquekeys",{"_index":1438,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uniquekeysconstraint",{"_index":1086,"title":{"classes/UniqueKeysConstraint.html":{}},"body":{"classes/UniqueKeysConstraint.html":{},"coverage.html":{}}}],["uniqueness",{"_index":1099,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["unit",{"_index":1724,"title":{},"body":{"index.html":{}}}],["unit.enums.ts",{"_index":1360,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["unknown",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"injectables/CacheService.html":{},"injectables/MailerService.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{}}}],["unlicensed",{"_index":1814,"title":{},"body":{"properties.html":{}}}],["update",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["updateallvoid",{"_index":441,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["updateallvoid(filterquery",{"_index":476,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["updatecachedto",{"_index":1127,"title":{"classes/UpdateCacheDto.html":{}},"body":{"classes/UpdateCacheDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":1701,"title":{},"body":{"index.html":{}}}],["updateone",{"_index":442,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["updateone(filterquery",{"_index":478,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["updateonevoid",{"_index":443,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["updateonevoid(filterquery",{"_index":480,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["updatequery",{"_index":474,"title":{},"body":{"classes/BaseAbstractRepository.html":{},"injectables/UsersRepository.html":{}}}],["updatestatus",{"_index":1204,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatestatus(id",{"_index":1212,"title":{},"body":{"injectables/UsersService.html":{}}}],["updatestatus(userid",{"_index":1600,"title":{},"body":{"index.html":{}}}],["updateuserdto",{"_index":1132,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["upgradeinsecurerequests",{"_index":1684,"title":{},"body":{"index.html":{}}}],["uppercase",{"_index":1697,"title":{},"body":{"index.html":{}}}],["uri",{"_index":672,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["url",{"_index":1548,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":598,"title":{},"body":{"injectables/CacheService.html":{},"injectables/CorsMiddleware.html":{},"injectables/LoggerMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["use(req",{"_index":615,"title":{},"body":{"injectables/CorsMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["use(request",{"_index":898,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["useclass",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["used",{"_index":561,"title":{},"body":{"modules/CacheModule.html":{}}}],["usefactory",{"_index":278,"title":{},"body":{"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{}}}],["useguards",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(jwtauthguard",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{}}}],["user",{"_index":177,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTDecodedAuthGuard.html":{},"modules/MailerModule.html":{},"guards/RolesGuard.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user._id",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":635,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:15",{"_index":647,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:18",{"_index":657,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:30",{"_index":654,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":1181,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.role",{"_index":1036,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user?.userstatus",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{}}}],["user_blocked",{"_index":1382,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["user_blocked_message",{"_index":1294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_deleted",{"_index":1383,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["user_deleted/blocked",{"_index":1614,"title":{},"body":{"index.html":{}}}],["user_deleted_message",{"_index":1295,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_gov_dis_not_found",{"_index":1402,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["user_gov_dis_not_found_message",{"_index":1296,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_not_found_message",{"_index":1297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["useragent",{"_index":905,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["userdata",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["userdeletestatus",{"_index":1361,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["usermodel",{"_index":1185,"title":{},"body":{"injectables/UsersRepository.html":{}}}],["username",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{}}}],["userrolesenums",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userrolesenums.seller",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{}}}],["userrolesenums.seller)@apiheader({name",{"_index":169,"title":{},"body":{"controllers/AuthController.html":{}}}],["users",{"_index":1171,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["users.controller",{"_index":1177,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.repository",{"_index":1179,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["users.service",{"_index":1169,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/create",{"_index":216,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["users/entities/user.entity",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/IRequestWithUser.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["users/users.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{}}}],["userschema",{"_index":1163,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.index",{"_index":1165,"title":{},"body":{"classes/User.html":{}}}],["userscontroller",{"_index":1167,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersdocument",{"_index":166,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/User.html":{},"injectables/UsersRepository.html":{},"miscellaneous/typealiases.html":{}}}],["usersignupenum",{"_index":655,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/SignInDto.html":{},"miscellaneous/enumerations.html":{}}}],["usersmodule",{"_index":70,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepository",{"_index":1175,"title":{"injectables/UsersRepository.html":{}},"body":{"modules/UsersModule.html":{},"injectables/UsersRepository.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":286,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["userstatus",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["userstatus.active",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{}}}],["userstatus.blocked",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["userstatus.deleted",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["userstatus.inactive",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["userstatus.not_completed",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{}}}],["userstatusforvendorreview",{"_index":1364,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["using",{"_index":604,"title":{},"body":{"injectables/CacheService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["utils/baseresponse",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["utils/constant/constant",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/constants",{"_index":155,"title":{},"body":{"injectables/AppService.html":{}}}],["utils/decorators/public.decorator",{"_index":820,"title":{},"body":{"guards/JWTDecodedAuthGuard.html":{}}}],["utils/decorators/skip",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"guards/JWTDecodedAuthGuard.html":{}}}],["utils/enums/auth",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["utils/enums/error",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["utils/enums/systems",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationSignInDto.html":{}}}],["utils/errors/throw",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTAuthGuard.html":{},"guards/JWTDecodedAuthGuard.html":{},"guards/RolesGuard.html":{}}}],["utils/guard/header",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/middlewares/logger.middleware",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/middlewares/originresponseheaders.middleware",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["utils/templates/emailverification",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["v1/auth/check",{"_index":1626,"title":{},"body":{"index.html":{}}}],["v1/auth/logout",{"_index":1635,"title":{},"body":{"index.html":{}}}],["v1/auth/signin",{"_index":1603,"title":{},"body":{"index.html":{}}}],["v1/auth/signup",{"_index":1567,"title":{},"body":{"index.html":{}}}],["v1/auth/verify",{"_index":1592,"title":{},"body":{"index.html":{}}}],["v18",{"_index":1494,"title":{},"body":{"index.html":{}}}],["v2",{"_index":685,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["v5.0",{"_index":1496,"title":{},"body":{"index.html":{}}}],["v6.0",{"_index":1497,"title":{},"body":{"index.html":{}}}],["val",{"_index":988,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["val.foreach((item",{"_index":997,"title":{},"body":{"classes/RejectEmptyValuesPipe.html":{}}}],["valid",{"_index":1062,"title":{},"body":{"injectables/SwaggerAuthMiddleware.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":722,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{},"index.html":{}}}],["validate(_",{"_index":1011,"title":{},"body":{"classes/RequireTogetherConstraint.html":{}}}],["validate(headersdto",{"_index":733,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["validate(keys",{"_index":1091,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["validatecustomdecorators",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{}}}],["validated",{"_index":1104,"title":{},"body":{"classes/UniqueKeysConstraint.html":{}}}],["validateif",{"_index":962,"title":{},"body":{"classes/PaginationParams.html":{}}}],["validateif(o",{"_index":955,"title":{},"body":{"classes/PaginationParams.html":{}}}],["validates",{"_index":1705,"title":{},"body":{"index.html":{}}}],["validation",{"_index":1707,"title":{},"body":{"index.html":{}}}],["validation.guard",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["validation.guard.ts",{"_index":716,"title":{},"body":{"guards/HeaderValidationGuard.html":{},"coverage.html":{}}}],["validation.guard.ts:13",{"_index":720,"title":{},"body":{"guards/HeaderValidationGuard.html":{}}}],["validationarguments",{"_index":1008,"title":{},"body":{"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{}}}],["validationoptions",{"_index":1094,"title":{},"body":{"classes/UniqueKeysConstraint.html":{},"miscellaneous/functions.html":{}}}],["validationpipe",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{}}}],["validations",{"_index":1710,"title":{},"body":{"index.html":{}}}],["validator",{"_index":633,"title":{},"body":{"classes/CreateCacheDto.html":{},"classes/CreateUserDto.html":{},"guards/HeaderValidationGuard.html":{},"classes/JwtHeaders.html":{},"classes/PaginationParams.html":{},"classes/RequireTogetherConstraint.html":{},"classes/SignInDto.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"classes/UniqueKeysConstraint.html":{},"classes/VerifyEmailDto.html":{},"dependencies.html":{}}}],["validatorconstraint",{"_index":1013,"title":{},"body":{"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{}}}],["validatorconstraintinterface",{"_index":1005,"title":{},"body":{"classes/RequireTogetherConstraint.html":{},"classes/UniqueKeysConstraint.html":{}}}],["validity",{"_index":1633,"title":{},"body":{"index.html":{}}}],["value",{"_index":295,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"classes/BaseResponse.html":{},"injectables/CacheService.html":{},"classes/CreateCacheDto.html":{},"injectables/LoggerMiddleware.html":{},"injectables/MailerService.html":{},"classes/RejectEmptyValuesPipe.html":{},"classes/UniqueKeysConstraint.html":{},"injectables/UsersRepository.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1231,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1455,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["verification",{"_index":362,"title":{},"body":{"injectables/AuthService.html":{},"guards/JWTDecodedAuthGuard.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verified",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["verify",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["verify(accesstoken",{"_index":1630,"title":{},"body":{"index.html":{}}}],["verify(csrftoken",{"_index":1629,"title":{},"body":{"index.html":{}}}],["verify(refreshtoken",{"_index":1631,"title":{},"body":{"index.html":{}}}],["verifyemail",{"_index":164,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["verifyemail(@body",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemail(body",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{}}}],["verifyemail(email",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["verifyemaildto",{"_index":201,"title":{"classes/VerifyEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/VerifyEmailDto.html":{},"coverage.html":{}}}],["version",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"classes/SystemControlValidationDto.html":{},"classes/SystemControlValidationDto-1.html":{},"classes/SystemControlValidationSignInDto.html":{},"controllers/UsersController.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"properties.html":{}}}],["vertical",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["very",{"_index":563,"title":{},"body":{"modules/CacheModule.html":{}}}],["via",{"_index":1694,"title":{},"body":{"index.html":{}}}],["virtuals",{"_index":1153,"title":{},"body":{"classes/User.html":{}}}],["void",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"injectables/CorsMiddleware.html":{},"guards/JWTDecodedAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"injectables/SwaggerAuthMiddleware.html":{}}}],["warn",{"_index":1770,"title":{},"body":{"index.html":{}}}],["warning",{"_index":1771,"title":{},"body":{"index.html":{}}}],["watch",{"_index":1728,"title":{},"body":{"index.html":{}}}],["web",{"_index":1408,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["web/swagger",{"_index":1622,"title":{},"body":{"index.html":{}}}],["webresponse",{"_index":1627,"title":{},"body":{"index.html":{}}}],["week",{"_index":1413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["winston",{"_index":1339,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["winston.format.colorize",{"_index":1900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":1887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.printf((error",{"_index":1891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":1888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonmodule.createlogger",{"_index":1875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["without",{"_index":1637,"title":{},"body":{"index.html":{}}}],["working",{"_index":1371,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["wrong",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wrong_csrf_token",{"_index":1406,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["wrong_csrf_token_message",{"_index":1298,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":1499,"title":{},"body":{"index.html":{}}}],["year",{"_index":1415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["yes",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/BaseAbstractRepository.html":{},"injectables/DatabaseService.html":{},"injectables/UsersRepository.html":{},"miscellaneous/functions.html":{}}}],["zoom",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/MailerModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                gc\n                            \n                            \n                                    \n                                    \n                                serverChecking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        gc\n                        \n                    \n                \n            \n            \n                \n                        \n                    gc()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Roles(UserRolesEnums.SUPER_ADMIN)@Get('gc')\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        serverChecking\n                        \n                    \n                \n            \n            \n                \n                        \n                    serverChecking()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SKIP_JWT()@Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiBearerAuth, ApiSecurity, ApiTags } from '@nestjs/swagger';\nimport { SKIP_JWT } from './utils/decorators/skip-jwt.decorator';\nimport { BaseResponse } from './utils/baseResponse';\nimport { UserRolesEnums } from './auth/enums/userRoles.enums';\nimport { Roles } from './auth/decorators/roles.decorator';\n\n@ApiBearerAuth()\n@ApiTags('Server')\n@ApiSecurity('app')\n@ApiSecurity('version')\n@ApiSecurity('os')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @SKIP_JWT()\n  @Get()\n  serverChecking() {\n    return BaseResponse.success(this.appService.serverChecking());\n  }\n\n  @Roles(UserRolesEnums.SUPER_ADMIN)\n  @Get('gc')\n  gc() {\n    if (global.gc) global.gc();\n\n    return BaseResponse.success('Garbage collector invoked');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCacheModule\n\nCacheModule\n\nAppModule -->\n\nCacheModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CacheModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.module.ts:61\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                consumer\n                                            \n                                                        MiddlewareConsumer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { MiddlewareConsumer, Module, NestModule } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { ConfigModule } from '@nestjs/config';\nimport { DatabaseModule } from './databases/mongodb/database.module';\nimport { LoggerMiddleware } from './utils/middlewares/logger.middleware';\nimport { CorsMiddleware } from './utils/middlewares/originResponseHeaders.middleware';\nimport { CacheModule } from './cache/cache.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { HeaderValidationGuard } from './utils/guard/header-validation.guard';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { MailerModule } from './mailer/mailer.module';\nimport { RateLimiterGuard, RateLimiterModule } from 'nestjs-rate-limiter';\nimport Redis from 'ioredis';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      envFilePath: ['.env'],\n    }),\n    DatabaseModule,\n    CacheModule,\n    AuthModule,\n    UsersModule,\n    MailerModule,\n    RateLimiterModule.register({\n      type: 'Redis',\n      points: 10,\n      duration: 60,\n      keyPrefix: 'global_limit',\n      storeClient: new Redis({\n        host: process.env.REDIS_HOST,\n        port: Number(process.env.REDIS_PORT),\n        username: process.env.REDIS_USERNAME,\n        password: process.env.REDIS_PASSWORD,\n      }),\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n      serveRoot: '/docs',\n    }),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: APP_GUARD,\n      useClass: HeaderValidationGuard,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: RateLimiterGuard,\n    },\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes('*');\n    consumer.apply(CorsMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                serverChecking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        serverChecking\n                        \n                    \n                \n            \n            \n                \nserverChecking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EnumsResponse } from './utils/constants';\n\n@Injectable()\nexport class AppService {\n  serverChecking(): string {\n    return EnumsResponse.SERVER_WORKING;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                checkAuth\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                logout\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                signIn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                signUp\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        checkAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkAuth(user: UsersDocument)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RateLimit({points: 60, duration: 60})@Roles(UserRolesEnums.USER, UserRolesEnums.SELLER)@ApiHeader({name: 'csrf-token', description: 'CSRF token', required: true})@Get('check-auth')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UsersDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: UsersDocument, res: Response, headers: SystemControlValidationSignInDto, refreshToken?: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RateLimit({points: 60, duration: 60})@ApiHeader({name: 'csrf-token', description: 'CSRF token', required: true})@Delete('logout')@ApiQuery({name: 'refreshToken', required: false})\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UsersDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headers\n                                            \n                                                            SystemControlValidationSignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(user: UsersDocument, SignInDto: SignInDto, res: Response, headers: SystemControlValidationSignInDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SKIP_JWT()@UseGuards(JWTAuthGuard)@RateLimit({points: 60, duration: 60})@Post('signin')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UsersDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                SignInDto\n                                            \n                                                            SignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headers\n                                            \n                                                            SystemControlValidationSignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SKIP_JWT()@RateLimit({points: 60, duration: 60})@Post('signup')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(body: VerifyEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @SKIP_JWT()@RateLimit({points: 60, duration: 60})@Patch('verify-email')\n                \n            \n\n                    \n                        \n                            Defined in src/auth/auth.controller.ts:55\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            VerifyEmailDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  Patch,\n  Post,\n  Query,\n  Res,\n  UseGuards,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport {\n  ApiBearerAuth,\n  ApiHeader,\n  ApiQuery,\n  ApiSecurity,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { SKIP_JWT } from '../utils/decorators/skip-jwt.decorator';\nimport { BaseResponse } from '../utils/baseResponse';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\nimport { RateLimit } from 'nestjs-rate-limiter';\nimport { VerifyEmailDto } from './dto/verify-email.dto';\nimport { AuthUser } from './decorators/user.decorator';\nimport { UsersDocument } from '../users/entities/user.entity';\nimport { SignInDto } from './dto/signin.dto';\nimport { Response } from 'express';\nimport { JWTAuthGuard } from './guards/jwt.auth.guard';\nimport { RequestHeaders } from './decorators/signup.decorator';\nimport { SystemControlValidationSignInDto } from './dto/systemControl.dto';\nimport { Roles } from './decorators/roles.decorator';\nimport { UserRolesEnums } from './enums/userRoles.enums';\n\n@ApiBearerAuth()\n@ApiTags('Auth')\n@ApiSecurity('app')\n@ApiSecurity('version')\n@ApiSecurity('os')\n@Controller({ path: 'auth', version: '1' })\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @SKIP_JWT()\n  @RateLimit({ points: 60, duration: 60 })\n  @Post('signup')\n  async signUp(@Body() createUserDto: CreateUserDto) {\n    return BaseResponse.success(await this.authService.signUp(createUserDto));\n  }\n\n  @SKIP_JWT()\n  @RateLimit({ points: 60, duration: 60 })\n  @Patch('verify-email')\n  async verifyEmail(@Body() body: VerifyEmailDto) {\n    const { email, otp } = body;\n\n    return BaseResponse.success(await this.authService.verifyEmail(email, otp));\n  }\n\n  @SKIP_JWT()\n  @UseGuards(JWTAuthGuard)\n  @RateLimit({ points: 60, duration: 60 })\n  @Post('signin')\n  async signIn(\n    @AuthUser() user: UsersDocument,\n    @Body() SignInDto: SignInDto,\n    @Res() res: Response,\n    @RequestHeaders(new ValidationPipe({ validateCustomDecorators: true }))\n    headers: SystemControlValidationSignInDto,\n  ) {\n    const userData = await this.authService.signIn(headers, user, res);\n    res.json(BaseResponse.success({ user: userData }));\n  }\n\n  // Get profile of the authenticated user\n  @RateLimit({ points: 60, duration: 60 })\n  @Roles(UserRolesEnums.USER, UserRolesEnums.SELLER)\n  @ApiHeader({\n    name: 'csrf-token',\n    description: 'CSRF token',\n    required: true,\n  })\n  @Get('check-auth')\n  checkAuth(@AuthUser() user: UsersDocument) {\n    return BaseResponse.success('User Authenticated');\n  }\n\n  @RateLimit({ points: 60, duration: 60 })\n  @ApiHeader({\n    name: 'csrf-token',\n    description: 'CSRF token',\n    required: true,\n  })\n  @Delete('logout')\n  @ApiQuery({ name: 'refreshToken', required: false })\n  async logout(\n    @AuthUser() user: UsersDocument,\n    @Res() res: Response,\n    @RequestHeaders(new ValidationPipe({ validateCustomDecorators: true }))\n    headers: SystemControlValidationSignInDto,\n    @Query('refreshToken') refreshToken?: string,\n  ) {\n    await this.authService.logout(user, res, headers, refreshToken);\n    res.json(BaseResponse.success('Logout successfully'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nCacheModule->AuthModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAuthModule -->\n\nMailerModule->AuthModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            MailerModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { UsersModule } from '../users/users.module';\nimport { CacheModule } from '../cache/cache.module';\nimport { MailerModule } from '../mailer/mailer.module';\nimport { APP_GUARD } from '@nestjs/core';\nimport { RolesGuard } from './guards/role.guard';\nimport { JWTDecodedAuthGuard } from './guards/jwt.decoded.auth.guard';\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('JWT_SECRET'),\n      }),\n      inject: [ConfigService],\n    }),\n    UsersModule,\n    CacheModule,\n    MailerModule,\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    { provide: APP_GUARD, useClass: JWTDecodedAuthGuard },\n    { provide: APP_GUARD, useClass: RolesGuard },\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateOtp\n                            \n                            \n                                    Async\n                                logout\n                            \n                            \n                                    Async\n                                signIn\n                            \n                            \n                                    Async\n                                signUp\n                            \n                            \n                                    Async\n                                verifyEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, cacheService: CacheService, mailerService: MailerService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                        MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        generateOtp\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateOtp(length: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    6\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout(user: UsersDocument, res: Response, headers: SystemControlValidationSignInDto, refreshToken?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:160\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UsersDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                headers\n                                            \n                                                            SystemControlValidationSignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(headers: SystemControlValidationSignInDto, user: UsersDocument, res: Response)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            SystemControlValidationSignInDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            UsersDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        verifyEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    verifyEmail(email: string, otp: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                otp\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { UserStatus } from './enums/userStatus.enum';\nimport { CreateUserDto } from '../users/dto/create-user.dto';\nimport { UsersService } from '../users/users.service';\nimport { randomInt } from 'crypto';\nimport { CacheService } from '../cache/cache.service';\nimport { MailerService } from '../mailer/mailer.service';\nimport { emailVerificationTemplate } from '../utils/Templates/emailVerification';\nimport { AuthTemplateEnums } from '../utils/enums/auth-template.enums';\nimport { UsersDocument } from '../users/entities/user.entity';\nimport { Response } from 'express';\nimport { SystemControlValidationSignInDto } from './dto/systemControl.dto';\nimport { OperatingSystem } from '../utils/enums/systems-os.enums';\nimport { ErrorTypes } from '../utils/enums/error-code-name.enums';\nimport {\n  EMAIL_VERIFICATION_DESCRIPTION,\n  EMAIL_VERIFICATION_TITLE,\n} from '../utils/constant/constant';\nimport { throwErrorFactory } from '../utils/Errors/throw-error-factory';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly cacheService: CacheService,\n    private readonly mailerService: MailerService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async signUp(createUserDto: CreateUserDto) {\n    createUserDto.password = await bcrypt.hash(\n      createUserDto.password,\n      parseInt(process.env.SALT_ROUND ?? '10'),\n    );\n    createUserDto['userStatus'] = UserStatus.NOT_COMPLETED;\n\n    // Check if the user already exists\n    const user = await this.usersService.findOne({\n      email: createUserDto.email,\n      role: createUserDto.role,\n    });\n\n    if (user?.userStatus === UserStatus.ACTIVE) {\n      throwErrorFactory(ErrorTypes.EMAIL_EXIST);\n    }\n\n    const otp = await this.generateOtp(4);\n\n    // Add OTP to cache Database\n    await this.cacheService.setCache(\n      `otp:${createUserDto.email}`,\n      otp,\n      5 * 60, // 5 minutes expiration\n    );\n\n    // Send Email with OTP\n    await this.mailerService.sendMail(\n      createUserDto.email,\n      EMAIL_VERIFICATION_TITLE,\n      emailVerificationTemplate(\n        EMAIL_VERIFICATION_TITLE,\n        EMAIL_VERIFICATION_DESCRIPTION,\n        otp,\n        AuthTemplateEnums.CODE,\n      ),\n    );\n\n    if (user?.userStatus === UserStatus.NOT_COMPLETED) {\n      return 'User already exists, please check your email for verification instructions.';\n    } else if (\n      user?.userStatus === UserStatus.BLOCKED ||\n      user?.userStatus === UserStatus.INACTIVE ||\n      user?.userStatus === UserStatus.DELETED\n    ) {\n      throwErrorFactory(ErrorTypes.SUSPENDED);\n    } else {\n      await this.usersService.create(createUserDto);\n      return 'User created successfully, please check your email for verification instructions.';\n    }\n  }\n\n  // Generate Random OTP\n  async generateOtp(length: number = 6): Promise {\n    let otp: string;\n    do {\n      otp = randomInt(10 ** length)\n        .toString()\n        .padStart(length, '0')\n        .slice(0, length);\n    } while (otp.startsWith('0'));\n    return otp;\n  }\n\n  // Verify Email with OTP\n  async verifyEmail(email: string, otp: number) {\n    // Check if the OTP exists in cache\n    const cachedOtp = await this.cacheService.getCache(`otp:${email}`);\n\n    if (!cachedOtp) {\n      throwErrorFactory(ErrorTypes.OTP_NOT_EXIST_OR_EXPIRED);\n    }\n\n    // Compare the OTPs\n    if (cachedOtp !== otp.toString()) {\n      throwErrorFactory(ErrorTypes.OTP_NOT_MATCH);\n    }\n\n    // Update user status to ACTIVE\n    const user: UsersDocument = await this.usersService.findOne({\n      email,\n      userStatus: UserStatus.NOT_COMPLETED,\n    });\n\n    if (user) {\n      await this.usersService.updateStatus(user.id, UserStatus.ACTIVE);\n      return 'Email verified successfully';\n    } else {\n      throwErrorFactory(ErrorTypes.NOT_FOUND_USER);\n    }\n  }\n\n  async signIn(\n    headers: SystemControlValidationSignInDto,\n    user: UsersDocument,\n    res: Response,\n  ) {\n    if (\n      [\n        OperatingSystem.SWAGGER,\n        OperatingSystem.ELASTIC,\n        OperatingSystem.WEB,\n      ].includes(headers.os)\n    ) {\n      res.cookie('access_token', (user as any).jwtToken, {\n        httpOnly: true,\n        secure: true,\n        sameSite: process.env.NODE_ENV === 'production' ? 'strict' : 'none',\n      });\n\n      res.cookie('refresh_token', (user as any).jwtRefreshToken, {\n        httpOnly: true,\n        secure: true,\n        sameSite: process.env.NODE_ENV === 'production' ? 'strict' : 'none',\n      });\n\n      // send CSRF token in response header\n      res.setHeader('csrf-token', (user as any).jwtCSRFToken);\n\n      delete (user as any).jwtToken;\n      delete (user as any).jwtRefreshToken;\n      delete (user as any).jwtCSRFToken;\n    }\n\n    const userData = JSON.parse(JSON.stringify(user));\n    return userData;\n  }\n\n  async logout(\n    user: UsersDocument,\n    res: Response,\n    headers: SystemControlValidationSignInDto,\n    refreshToken?: string,\n  ): Promise {\n    if (\n      !refreshToken &&\n      [OperatingSystem.IOS, OperatingSystem.ANDROID].includes(headers.os)\n    ) {\n      throw new BadRequestException(\n        'Refresh token is required for mobile devices',\n      );\n    }\n\n    await this.cacheService.deleteCache(refreshToken as string);\n\n    if (\n      [\n        OperatingSystem.SWAGGER,\n        OperatingSystem.ELASTIC,\n        OperatingSystem.WEB,\n      ].includes(headers.os)\n    ) {\n      res.clearCookie('access_token');\n      res.clearCookie('refresh_token');\n    } else {\n      const decoded = await this.jwtService.verify(refreshToken as string, {\n        secret: process.env.JWT_REFRESH_SECRET,\n      });\n\n      if (decoded._id !== user._id) {\n        throwErrorFactory(ErrorTypes.NOT_ALLOWED);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseAbstractRepository.html":{"url":"classes/BaseAbstractRepository.html","title":"class - BaseAbstractRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseAbstractRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/base.abstract.repository.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                createDoc\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAllWithPaginationOption\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                updateAllVoid\n                            \n                            \n                                    Public\n                                    Async\n                                updateOne\n                            \n                            \n                                    Public\n                                    Async\n                                updateOneVoid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Protected\n                        constructor(model: Model>)\n                    \n                \n                        \n                            \n                                Defined in src/utils/base.abstract.repository.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                  \n                                                        \n                                                                        Model>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model>\n\n                    \n                \n                    \n                        \n                                Defined in src/utils/base.abstract.repository.ts:13\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: any, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDoc(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMany(filterQuery: FilterQuery>, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(filterQuery: FilterQuery>)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filterQuery: FilterQuery>, projection: Record, options: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                projection\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllWithPaginationOption\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPaginationOption(queryFiltersAndOptions: any, arrayOfFilters: string[], extraOptions: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                queryFiltersAndOptions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                arrayOfFilters\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                extraOptions\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filterQuery: FilterQuery>, options: QueryOptions, projection: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                projection\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneAndUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneAndUpdate(filterQuery: FilterQuery>, updateQuery: UpdateQuery>, options: QueryOptions, projection: any, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                updateQuery\n                                            \n                                                            UpdateQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                projection\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateAllVoid\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAllVoid(filterQuery: FilterQuery>, updateQuery: UpdateQuery>, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:138\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateQuery\n                                            \n                                                            UpdateQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(filterQuery: FilterQuery>, updateQuery: UpdateQuery>, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:122\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateQuery\n                                            \n                                                            UpdateQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOneVoid\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneVoid(filterQuery: FilterQuery>, updateQuery: UpdateQuery>, options?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/base.abstract.repository.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateQuery\n                                            \n                                                            UpdateQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as _ from 'lodash';\nimport {\n  ClientSession,\n  Document,\n  FilterQuery,\n  Model,\n  QueryOptions,\n  UpdateQuery,\n} from 'mongoose';\n\nexport type TDocument = T & Document;\nexport abstract class BaseAbstractRepository {\n  protected model: Model>;\n\n  protected constructor(model: Model>) {\n    this.model = model;\n  }\n\n  public async create(data: any, session?: ClientSession) {\n    const newDocument = await new this.model(data).save({ session });\n    return newDocument.toObject();\n  }\n\n  public async createDoc(data: T): Promise> {\n    const newDocument = await new this.model(data).save();\n    return newDocument as unknown as TDocument;\n  }\n\n  async find(\n    filterQuery: FilterQuery>,\n    projection: Record = {},\n    options: QueryOptions = {},\n  ): Promise[]> {\n    return this.model\n      .find(filterQuery, projection, options)\n      .lean() as unknown as TDocument[];\n  }\n\n  public async findOne(\n    filterQuery: FilterQuery>,\n    options: QueryOptions = {},\n    projection: any = {},\n  ): Promise> {\n    return (await this.model\n      .findOne(filterQuery, projection)\n      .setOptions(options)\n      .lean()) as TDocument;\n  }\n\n  public async findAllWithPaginationOption(\n    queryFiltersAndOptions: any,\n    arrayOfFilters: string[],\n    extraOptions = {},\n  ): Promise[]> {\n    const filters: FilterQuery> = _.pick(\n      queryFiltersAndOptions,\n      arrayOfFilters,\n    );\n    const options = _.pick(queryFiltersAndOptions, ['page', 'limit']);\n    let docs;\n\n    if (queryFiltersAndOptions.from || queryFiltersAndOptions.to) {\n      (filters as any).createdAt = {};\n\n      if (queryFiltersAndOptions.from) {\n        filters.createdAt.$gte = new Date(queryFiltersAndOptions.from);\n      }\n\n      if (queryFiltersAndOptions.to) {\n        filters.createdAt.$lt = new Date(queryFiltersAndOptions.to);\n      }\n    }\n\n    if (queryFiltersAndOptions.allowPagination) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      docs = await this.model.paginate(filters, {\n        ...options,\n        ...extraOptions,\n        collation: { locale: 'en', caseLevel: true, numericOrdering: true },\n        lean: true,\n        select: { ...extraOptions },\n        sort: { createdAt: -1 },\n      });\n    } else {\n      docs = await this.model\n        .find(filters, { ...extraOptions })\n        .setOptions({ ...options, ...extraOptions })\n        .sort({ createdAt: -1 })\n        .lean();\n\n      docs = { docs };\n    }\n    return docs;\n  }\n\n  async findOneAndUpdate(\n    filterQuery: FilterQuery>,\n    updateQuery: UpdateQuery>,\n    options: QueryOptions = {},\n    projection: any = {},\n    session?: ClientSession,\n  ): Promise> {\n    return (await this.model\n      .findOneAndUpdate(filterQuery, updateQuery, { new: true, ...options })\n      .lean()) as TDocument;\n  }\n\n  public async deleteOne(\n    filterQuery: FilterQuery>,\n  ): Promise {\n    await this.model.deleteOne(filterQuery);\n  }\n\n  public async deleteMany(\n    filterQuery: FilterQuery>,\n    options?: any,\n  ): Promise {\n    await this.model.deleteMany(filterQuery, options);\n  }\n\n  public async updateOne(\n    filterQuery: FilterQuery>,\n    updateQuery: UpdateQuery>,\n    options?: any,\n  ) {\n    return await this.model.updateOne(filterQuery, updateQuery, { ...options });\n  }\n\n  public async updateOneVoid(\n    filterQuery: FilterQuery>,\n    updateQuery: UpdateQuery>,\n    options?: any,\n  ): Promise {\n    await this.model.updateOne(filterQuery, updateQuery, { ...options });\n  }\n\n  public async updateAllVoid(\n    filterQuery: FilterQuery>,\n    updateQuery: UpdateQuery>,\n    options?: any,\n  ): Promise {\n    await this.model.updateMany(filterQuery, updateQuery, options);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseResponse.html":{"url":"classes/BaseResponse.html","title":"class - BaseResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/baseResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        success\n                        \n                    \n                \n            \n            \n                \n                        \n                    success(response: any, message: string, flag: number | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/baseResponse.ts:2\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'OK'\n                                            \n\n                                        \n                                        \n                                                flag\n                                            \n                                                        number | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { statusCode: number; message: string; flag: number; body: any; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class BaseResponse {\n  static success(\n    response: any = null,\n    message = 'OK',\n    flag: number | null = null,\n  ) {\n    return {\n      statusCode: 201,\n      message,\n      flag: flag,\n      body: response,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Cache.html":{"url":"classes/Cache.html","title":"class - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cache/entities/cache.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Cache {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CacheController.html":{"url":"controllers/CacheController.html","title":"controller - CacheController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CacheController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cache/cache.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cache\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { CacheService } from './cache.service';\nimport { ApiSecurity, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Cache')\n@ApiSecurity('app')\n@ApiSecurity('version')\n@ApiSecurity('os')\n@Controller('cache')\nexport class CacheController {\n  constructor(private readonly cacheService: CacheService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_providers\n\n\n\ncluster_CacheModule_exports\n\n\n\n\nCacheService \n\nCacheService \n\n\n\nREDIS \n\nREDIS \n\n\n\nCacheModule\n\nCacheModule\n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\nREDIS  -->\n\nCacheModule->REDIS \n\n\n\n\n\nCacheService\n\nCacheService\n\nCacheModule -->\n\nCacheService->CacheModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cache/cache.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CacheService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CacheController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CacheService\n                        \n                        \n                            REDIS\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CacheService } from './cache.service';\nimport { CacheController } from './cache.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport Redis from 'ioredis';\n\n@Module({\n  imports: [ConfigModule.forRoot()],\n  controllers: [CacheController],\n  providers: [\n    CacheService,\n    {\n      provide: 'REDIS',\n      useFactory: (configService: ConfigService) => {\n        return new Redis({\n          host: configService.get('REDIS_HOST'),\n          port: configService.get('REDIS_PORT'),\n          username: configService.get('REDIS_USERNAME'),\n          password: configService.get('REDIS_PASSWORD'),\n          // tls: {}, // if ssl supported. currently not used for this task but it very important to protect your data from sniffing or man-in-the-middle attacks\n        });\n      },\n      inject: [ConfigService],\n    },\n  ],\n  exports: ['REDIS', CacheService],\n})\nexport class CacheModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cache/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteCache\n                            \n                            \n                                    Async\n                                getCache\n                            \n                            \n                                    Async\n                                setCache\n                            \n                            \n                                    Async\n                                setMultipleCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(redisClient: Redis.Redis)\n                    \n                \n                        \n                            \n                                Defined in src/cache/cache.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        redisClient\n                                                  \n                                                        \n                                                                    Redis.Redis\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteCache(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cache/cache.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCache(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cache/cache.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    setCache(key: string, value: string, ttl: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cache/cache.service.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setMultipleCache\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMultipleCache(records: Record, ttl: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/cache/cache.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                records\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                ttl\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport * as Redis from 'ioredis';\n\n@Injectable()\nexport class CacheService {\n  constructor(@Inject('REDIS') private readonly redisClient: Redis.Redis) {}\n\n  async setCache(key: string, value: string, ttl: number) {\n    return await this.redisClient.set(key, value, 'EX', ttl);\n  }\n\n  async setMultipleCache(records: Record, ttl: number) {\n    // Prepare arguments for MSET\n    const multiArgs = Object.entries(records).flatMap(([key, value]) => [\n      key,\n      value,\n    ]);\n\n    // Use MSET to set multiple key-value pairs\n    await this.redisClient.mset(...multiArgs);\n\n    // Set expiration for each key using a pipeline\n    const pipeline = this.redisClient.pipeline();\n    Object.keys(records).forEach((key) => {\n      pipeline.expire(key, ttl); // Set expiration for each key\n    });\n\n    // Execute the pipeline for setting expiration\n    await pipeline.exec();\n  }\n\n  async getCache(key: string): Promise {\n    return await this.redisClient.get(key);\n  }\n\n  async deleteCache(key: string) {\n    await this.redisClient.del(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CorsMiddleware.html":{"url":"injectables/CorsMiddleware.html","title":"injectable - CorsMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CorsMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/middlewares/originResponseHeaders.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/middlewares/originResponseHeaders.middleware.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class CorsMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    const origin = req.headers.origin ?? '*'; // Default to '*' if no origin is provided\n\n    res.setHeader('Access-Control-Allow-Origin', origin);\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCacheDto.html":{"url":"classes/CreateCacheDto.html","title":"class - CreateCacheDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCacheDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cache/dto/create-cache.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cache/dto/create-cache.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/cache/dto/create-cache.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\n\nexport class CreateCacheDto {\n  @IsString()\n  key: string;\n\n  @IsString()\n  value: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                fullName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Matches(/^[\\p{L} ]+$/u, {message: 'Full name must contain only letters and spaces'})@MinLength(3, {message: 'Full name must be at least 3 characters'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSignupEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserSignupEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsEmail,\n  IsEnum,\n  IsStrongPassword,\n  Matches,\n  MinLength,\n} from 'class-validator';\nimport { UserSignupEnum } from '../../auth/enums/userRoles.enums';\n\nexport class CreateUserDto {\n  @Matches(/^[\\p{L} ]+$/u, {\n    message: 'Full name must contain only letters and spaces',\n  })\n  @MinLength(3, { message: 'Full name must be at least 3 characters' })\n  fullName: string;\n\n  @IsEnum(UserSignupEnum)\n  role: UserSignupEnum;\n\n  @IsEmail()\n  email: string;\n\n  @IsStrongPassword({\n    minLength: 8,\n    minLowercase: 1,\n    minUppercase: 1,\n    minNumbers: 1,\n    minSymbols: 1,\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\n\nDatabaseService\n\nDatabaseService\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/databases/mongodb/database.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { DatabaseService } from './database.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true }),\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        uri: configService.get('MONGODB_URI'),\n        minPoolSize: 5,\n        maxPoolSize: 200,\n        serverSelectionTimeoutMS: 45000,\n        socketTimeoutMS: 45000,\n        connectionFactory: (connection) => {\n          connection.plugin(require('mongoose-autopopulate'));\n          connection.plugin(require('mongoose-paginate-v2'));\n\n          connection.on('error', (err) => console.error('MongoDB Error:', err));\n          connection.on('disconnected', () =>\n            console.warn('MongoDB Disconnected!'),\n          );\n          return connection;\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  providers: [DatabaseService],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseService.html":{"url":"injectables/DatabaseService.html","title":"injectable - DatabaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/databases/mongodb/database.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                    Async\n                                onApplicationShutdown\n                            \n                            \n                                    Async\n                                onModuleDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/databases/mongodb/database.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/mongodb/database.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Connection\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onApplicationShutdown\n                        \n                    \n                \n            \n            \n                \n                        \n                    onApplicationShutdown(signal?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/mongodb/database.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signal\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onModuleDestroy\n                        \n                    \n                \n            \n            \n                \n                        \n                    onModuleDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/databases/mongodb/database.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnApplicationShutdown, OnModuleDestroy } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/mongoose';\nimport { Connection } from 'mongoose';\n\n@Injectable()\nexport class DatabaseService implements OnModuleDestroy, OnApplicationShutdown {\n  constructor(@InjectConnection() private readonly connection: Connection) {}\n\n  connect(): Connection {\n    return this.connection;\n  }\n\n  async onModuleDestroy() {\n    console.log('Closing MongoDB connection...');\n    await this.connection.close();\n  }\n\n  async onApplicationShutdown(signal?: string) {\n    console.log(`Application shutting down: ${signal}. Closing MongoDB connection...`);\n    await this.connection.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/HeaderValidationGuard.html":{"url":"guards/HeaderValidationGuard.html","title":"guard - HeaderValidationGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    HeaderValidationGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/utils/guard/header-validation.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/guard/header-validation.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Injectable,\n  BadRequestException,\n} from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToInstance } from 'class-transformer';\nimport { SystemControlValidationDto } from '../dto/system-headers.dto';\n\n@Injectable()\nexport class HeaderValidationGuard implements CanActivate {\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n    const headersDto = plainToInstance(\n      SystemControlValidationDto,\n      request.headers,\n      {\n        enableImplicitConversion: true,\n      },\n    );\n\n    const errors = await validate(headersDto);\n    if (errors.length > 0) {\n      throw new BadRequestException(\n        errors.flatMap((error) => Object.values(error.constraints || {})),\n      );\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDecodedCsrf.html":{"url":"interfaces/IDecodedCsrf.html","title":"interface - IDecodedCsrf","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IDecodedCsrf\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/csrf.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exp\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            iat\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        iat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        iat:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IDecodedCsrf {\n  email: string;\n  role: string;\n  iat?: number;\n  exp?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRequestWithUser.html":{"url":"interfaces/IRequestWithUser.html","title":"interface - IRequestWithUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IRequestWithUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/interfaces/requestWithIUser.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { User } from '../../users/entities/user.entity';\n\ninterface IRequestWithUser extends Request {\n  user: User;\n}\n\nexport default IRequestWithUser;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JWTAuthGuard.html":{"url":"guards/JWTAuthGuard.html","title":"guard - JWTAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JWTAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt.auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.auth.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt.auth.guard.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { UserStatus } from '../enums/userStatus.enum';\nimport { CacheService } from '../../cache/cache.service';\nimport { UsersService } from '../../users/users.service';\nimport { SignInDto } from '../dto/signin.dto';\nimport { UsersDocument } from '../../users/entities/user.entity';\nimport * as jwt from 'jsonwebtoken';\nimport { ErrorTypes } from '../../utils/enums/error-code-name.enums';\nimport { throwErrorFactory } from '../../utils/Errors/throw-error-factory';\n\n@Injectable()\nexport class JWTAuthGuard implements CanActivate {\n  constructor(\n    private readonly usersService: UsersService,\n    private readonly cacheService: CacheService,\n  ) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const request = context.switchToHttp().getRequest();\n\n    const requestBody: SignInDto = context.switchToHttp().getRequest().body;\n\n    let accountFromDb: UsersDocument = await this.usersService.findOne({\n      email: requestBody.email,\n      role: requestBody.role,\n    });\n\n    if (accountFromDb === null) {\n      throwErrorFactory(ErrorTypes.NOT_FOUND_USER);\n    } else if (accountFromDb.userStatus === UserStatus.DELETED) {\n      throwErrorFactory(ErrorTypes.USER_DELETED);\n    } else if (accountFromDb.userStatus === UserStatus.BLOCKED) {\n      throwErrorFactory(ErrorTypes.USER_BLOCKED);\n    }\n\n    delete accountFromDb['__v'];\n\n    const recordsToRedis = {};\n    const isMatched: boolean = await bcrypt.compare(\n      requestBody.password,\n      accountFromDb.password,\n    );\n\n    if (isMatched) {\n      const jwtToken = jwt.sign(accountFromDb, process.env.JWT_SECRET, {\n        expiresIn: process.env.JWT_Expiry,\n      });\n      const jwtRefreshToken = jwt.sign(\n        accountFromDb,\n        process.env.JWT_REFRESH_SECRET,\n        {\n          expiresIn: process.env.JWT_Refresh_Expiry,\n        },\n      );\n      const jwtCSRFToken = jwt.sign(\n        { email: accountFromDb.email, role: accountFromDb.role },\n        process.env.JWT_CSRF_SECRET,\n        {\n          expiresIn: process.env.JWT_Refresh_Expiry,\n        },\n      );\n\n      const isActive = accountFromDb.userStatus !== UserStatus.INACTIVE;\n\n      recordsToRedis[jwtRefreshToken] = 'true';\n\n      accountFromDb = {\n        ...accountFromDb,\n        ...(isActive && { jwtToken }),\n        ...(isActive && { jwtRefreshToken }),\n        ...(isActive && { jwtCSRFToken }),\n      } as any;\n    }\n\n    if (!isMatched) {\n      throwErrorFactory(ErrorTypes.PASSWORD_NOT_VALID);\n    }\n\n    await this.cacheService.setMultipleCache(recordsToRedis, 604800); // 7 days\n\n    ////////////////// _checking for application stopped ////////////////\n    if (parseInt(process.env.APPLICATION_STATUS as string) === 0) {\n      throwErrorFactory(ErrorTypes.APPLICATION_STOPPED);\n    }\n    ////////////////// _checking for application maintenance ////////////////\n    if (parseInt(process.env.APPLICATION_STATUS as string) == 1) {\n      throwErrorFactory(ErrorTypes.APPLICATION_MAINTENANCE);\n    }\n    // ///////////////////////////////// check_critical_android //////////////\n    if (\n      parseInt(process.env.ANDROID_CRITICAL_UPDATE as string) >\n        parseInt(request.headers.version as string) &&\n      request.headers.os === 'android'\n    ) {\n      throwErrorFactory(ErrorTypes.ANDROID_CRITICAL_UPDATE);\n    }\n    // ///////////////////////////////// check_critical_Ios //////////////\n    if (\n      parseInt(process.env.IOS_CRITICAL_UPDATE as string) >\n        parseInt(request.headers.version as string) &&\n      request.headers.os === 'ios'\n    ) {\n      throwErrorFactory(ErrorTypes.IOS_CRITICAL_UPDATE);\n    }\n\n    request.user = accountFromDb;\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/JWTDecodedAuthGuard.html":{"url":"guards/JWTDecodedAuthGuard.html","title":"guard - JWTDecodedAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    JWTDecodedAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/jwt.decoded.auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                            \n                                    Private\n                                checkUserStatus\n                            \n                            \n                                    Private\n                                    Async\n                                generateNewTokenOrThrowError\n                            \n                            \n                                    Private\n                                getTokens\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService, reflector: Reflector, cacheService: CacheService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/jwt.decoded.auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheService\n                                                  \n                                                        \n                                                                        CacheService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt.decoded.auth.guard.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkUserStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkUserStatus(decoded: UsersDocument)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt.decoded.auth.guard.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                decoded\n                                            \n                                                            UsersDocument\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        generateNewTokenOrThrowError\n                        \n                    \n                \n            \n            \n                \n                        \n                    generateNewTokenOrThrowError(error, refreshToken, response, request, decodedCsrf: IDecodedCsrf)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt.decoded.auth.guard.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                refreshToken\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                request\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                decodedCsrf\n                                            \n                                                            IDecodedCsrf\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getTokens\n                        \n                    \n                \n            \n            \n                \n                        \n                    getTokens(request: Request)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/jwt.decoded.auth.guard.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { accessToken: string; refreshToken: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { JwtService } from '@nestjs/jwt';\nimport { IS_PUBLIC_KEY } from '../../utils/decorators/public.decorator';\nimport { UserStatus } from '../enums/userStatus.enum';\nimport { SKIP_JWT_TOKEN } from '../../utils/decorators/skip-jwt.decorator';\nimport { CacheService } from '../../cache/cache.service';\nimport { OperatingSystem } from '../../utils/enums/systems-os.enums';\nimport { UsersDocument } from '../../users/entities/user.entity';\nimport { Request, Response } from 'express';\nimport IRequestWithUser from '../interfaces/requestWithIUser.interface';\nimport { throwErrorFactory } from '../../utils/Errors/throw-error-factory';\nimport { ErrorTypes } from '../../utils/enums/error-code-name.enums';\nimport { IDecodedCsrf } from '../interfaces/csrf.interface';\n\n@Injectable()\nexport class JWTDecodedAuthGuard implements CanActivate {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly reflector: Reflector,\n    private readonly cacheService: CacheService,\n  ) {}\n  async canActivate(context: ExecutionContext): Promise {\n    const handler = context.getHandler();\n    const isPublic = this.reflector.get(IS_PUBLIC_KEY, handler);\n    const skipJwt = this.reflector.get(SKIP_JWT_TOKEN, handler);\n    if (skipJwt) return true;\n\n    const request = context.switchToHttp().getRequest();\n    const response = context.switchToHttp().getResponse();\n    const csrfToken = request.header('csrf-token');\n    if (!csrfToken) {\n      throwErrorFactory(ErrorTypes.CSRF_TOKEN_REQUIRED);\n    }\n\n    const { accessToken, refreshToken } = this.getTokens(request);\n\n    if (!accessToken && !isPublic) {\n      throwErrorFactory(ErrorTypes.TOKEN_REQUIRED);\n    }\n\n    if (isPublic === true && !accessToken) return true;\n\n    const secret = process.env.JWT_SECRET;\n    const csrfSecret = process.env.JWT_CSRF_SECRET;\n\n    let decodedCsrf: IDecodedCsrf;\n\n    try {\n      decodedCsrf = await this.jwtService.verify(csrfToken, {\n        secret: csrfSecret,\n      });\n    } catch (error) {\n      console.error('CSRF token verification failed:', error);\n      if (error.message === 'invalid token') {\n        throwErrorFactory(ErrorTypes.CSRF_INVALID_TOKEN);\n      } else {\n        throwErrorFactory(ErrorTypes.CSRF_TOKEN_EXPIRED);\n      }\n    }\n\n    console.log('Decoded CSRF Token:', decodedCsrf);\n\n    try {\n      const decoded: UsersDocument = await this.jwtService.verify(\n        accessToken as string,\n        {\n          secret,\n        },\n      );\n\n      this.checkUserStatus(decoded);\n\n      console.log('Decoded User:', decoded);\n\n      if (\n        decodedCsrf.email !== decoded.email ||\n        decodedCsrf.role !== decoded.role\n      ) {\n        throwErrorFactory(ErrorTypes.WRONG_CSRF_TOKEN);\n      }\n\n      (request as IRequestWithUser).user = decoded;\n      return true;\n    } catch (error) {\n      const isExpire = await this.generateNewTokenOrThrowError(\n        error,\n        refreshToken,\n        response,\n        request,\n        decodedCsrf,\n      );\n      if (isExpire) return true;\n      console.error('JWT verification failed:', error);\n      throwErrorFactory(ErrorTypes.INVALID_TOKEN);\n    }\n  }\n\n  private getTokens(request: Request) {\n    let accessToken: string | undefined;\n    let refreshToken: string | undefined;\n\n    if (request.cookies?.access_token) {\n      accessToken = request.cookies.access_token;\n    } else if (\n      request.header('authorization') &&\n      [OperatingSystem.IOS, OperatingSystem.ANDROID].includes(\n        request.header('os') as OperatingSystem,\n      )\n    ) {\n      const authHeader = request.header('authorization')?.split(' ');\n      if (authHeader?.length === 2 && authHeader[0] === 'Bearer') {\n        accessToken = authHeader[1];\n      }\n    }\n\n    if (request.cookies?.refresh_token) {\n      refreshToken = request.cookies.refresh_token;\n    }\n\n    return { accessToken, refreshToken };\n  }\n\n  private async generateNewTokenOrThrowError(\n    error,\n    refreshToken,\n    response,\n    request,\n    decodedCsrf: IDecodedCsrf,\n  ): Promise {\n    if (error.name === 'TokenExpiredError' && refreshToken) {\n      try {\n        const refreshSecret = process.env.JWT_REFRESH_SECRET;\n        const decodedRefresh = await this.jwtService.verify(refreshToken, {\n          secret: refreshSecret,\n        });\n\n        if (\n          decodedCsrf.email !== decodedRefresh.email ||\n          decodedCsrf.role !== decodedRefresh.role\n        ) {\n          throwErrorFactory(ErrorTypes.WRONG_CSRF_TOKEN);\n        }\n\n        const isTokenInCache = await this.cacheService.getCache(refreshToken);\n        if (isTokenInCache === null) {\n          throwErrorFactory(ErrorTypes.REFRESH_EXPIRED);\n        }\n\n        const { iat, exp, ...rest } = decodedRefresh;\n        const newAccessToken = this.jwtService.sign(rest, {\n          secret: process.env.JWT_SECRET,\n          expiresIn: process.env.JWT_Expiry,\n        });\n\n        response.cookie('access_token', newAccessToken, {\n          httpOnly: true,\n          secure: true,\n          sameSite: process.env.NODE_ENV === 'production' ? 'strict' : 'none',\n        });\n\n        request.user = rest;\n        return true;\n      } catch (refreshError) {\n        console.error('Refresh token verification failed:', refreshError);\n        throwErrorFactory(ErrorTypes.REFRESH_EXPIRED);\n      }\n    }\n    return false;\n  }\n\n  private checkUserStatus(decoded: UsersDocument): void {\n    if (decoded.userStatus === UserStatus.INACTIVE)\n      throwErrorFactory(ErrorTypes.ACCOUNT_INACTIVE);\n\n    if (decoded.userStatus === UserStatus.BLOCKED)\n      throwErrorFactory(ErrorTypes.USER_BLOCKED);\n\n    if (decoded.userStatus === UserStatus.DELETED)\n      throwErrorFactory(ErrorTypes.USER_DELETED);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwtHeaders.html":{"url":"classes/JwtHeaders.html","title":"class - JwtHeaders","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwtHeaders\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/jwt-headers.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                csrfToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        csrfToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsJWT()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/jwt-headers.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsJWT } from 'class-validator';\n\nexport class JwtHeaders {\n  @IsJWT()\n  csrfToken: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/middlewares/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/middlewares/logger.middleware.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                request\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                response\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger('HTTP')\n                    \n                \n                    \n                        \n                                Defined in src/utils/middlewares/logger.middleware.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  private readonly logger = new Logger('HTTP');\n\n  use(request: Request, response: Response, next: NextFunction): void {\n    const { ip, method, originalUrl, body, headers } = request;\n    const userAgent = request.get('user-agent') || '';\n\n    response.on('finish', () => {\n      const { statusCode } = response;\n      const contentLength = response.get('content-length');\n      if (body?.password) {\n        body.password = '########';\n      }\n\n      this.logger.log(\n        `${method} ${originalUrl} ${statusCode} ${contentLength} - ${userAgent} ${ip} -- body -- ${JSON.stringify(\n          body,\n        )},\n        )} -- headers -- ${JSON.stringify(headers)}`,\n      );\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MailerController.html":{"url":"controllers/MailerController.html","title":"controller - MailerController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MailerController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailer/mailer.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { MailerService } from './mailer.service';\n\n@Controller()\nexport class MailerController {\n  constructor(private readonly mailerService: MailerService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MailerModule.html":{"url":"modules/MailerModule.html","title":"module - MailerModule","body":"\n                   \n\n\n\n\n    Modules\n    MailerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_MailerModule_exports\n\n\n\n\nMailerService \n\nMailerService \n\n\n\nMailerModule\n\nMailerModule\n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/mailer/mailer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MailerService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MailerController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MailerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MailerService } from './mailer.service';\nimport { MailerController } from './mailer.controller';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport * as nodemailer from 'nodemailer';\n\n@Module({\n  imports: [ConfigModule],\n  controllers: [MailerController],\n  providers: [\n    {\n      provide: 'MAIL_TRANSPORTER',\n      useFactory: (configService: ConfigService) => {\n        return nodemailer.createTransport({\n          host: configService.get('MAIL_HOST'),\n          port: configService.get('MAIL_PORT'),\n          secure: true,\n          auth: {\n            user: configService.get('MAIL_USER'),\n            pass: configService.get('MAIL_PASS'),\n          },\n        });\n      },\n      inject: [ConfigService],\n    },\n    MailerService,\n  ],\n  exports: [MailerService],\n})\nexport class MailerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MailerService.html":{"url":"injectables/MailerService.html","title":"injectable - MailerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MailerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/mailer/mailer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendMail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transporter: Transporter)\n                    \n                \n                        \n                            \n                                Defined in src/mailer/mailer.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transporter\n                                                  \n                                                        \n                                                                    Transporter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        sendMail\n                        \n                    \n                \n            \n            \n                \n                        \n                    sendMail(to: string, subject: string, html: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/mailer/mailer.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                to\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                subject\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                html\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(MailerService.name)\n                    \n                \n                    \n                        \n                                Defined in src/mailer/mailer.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, Logger } from '@nestjs/common';\nimport { Transporter } from 'nodemailer';\n\n@Injectable()\nexport class MailerService {\n  private readonly logger = new Logger(MailerService.name);\n\n  constructor(\n    @Inject('MAIL_TRANSPORTER')\n    private readonly transporter: Transporter,\n  ) {}\n  async sendMail(to: string, subject: string, html: string) {\n    try {\n      const info = await this.transporter.sendMail({\n        from: `\"ClickUp\" `,\n        to,\n        subject,\n        html,\n      });\n      this.logger.log(`Email sent: ${info.messageId}`);\n      return info;\n    } catch (err) {\n      this.logger.error(`Failed to send email: ${err.message}`);\n      throw err;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationParams.html":{"url":"classes/PaginationParams.html","title":"class - PaginationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pagination/paginationFilter.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                allowPagination\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                limit\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                page\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        allowPagination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@IsBoolean()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/pagination/paginationFilter.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(o => o.allowPagination)@Type(undefined)@IsNumber()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/pagination/paginationFilter.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateIf(o => o.allowPagination)@Type(undefined)@IsNumber()@Min(1)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/pagination/paginationFilter.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumber, Min, IsOptional, ValidateIf, IsBoolean } from 'class-validator';\nimport { Type, Transform } from 'class-transformer';\n\nexport class PaginationParams {\n  @ValidateIf(o => o.allowPagination)\n  @Type(() => Number)\n  @IsNumber()\n  @Min(1)\n  page?: number;\n\n  @ValidateIf(o => o.allowPagination)\n  @Type(() => Number)\n  @IsNumber()\n  @Min(1)\n  limit?: number;\n\n  @IsOptional()\n  @IsBoolean()\n  @Transform(({ obj }) => {\n    return [true, 'true'].indexOf(obj.allowPagination) > -1;\n  })\n  allowPagination?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RejectEmptyValuesPipe.html":{"url":"classes/RejectEmptyValuesPipe.html","title":"class - RejectEmptyValuesPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RejectEmptyValuesPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/pipes/rejectEmptyValues.pipe.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        PipeTransform\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rejectFalse, rejectZero)\n                    \n                \n                        \n                            \n                                Defined in src/utils/pipes/rejectEmptyValues.pipe.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rejectFalse\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rejectZero\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any, metadata: ArgumentMetadata)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/pipes/rejectEmptyValues.pipe.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                        ArgumentMetadata\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentMetadata, BadRequestException, PipeTransform } from '@nestjs/common';\n\nexport class RejectEmptyValuesPipe implements PipeTransform {\n  constructor(\n    private readonly rejectFalse = false,\n    private readonly rejectZero = false,\n  ) {}\n\n  transform(value: any, metadata: ArgumentMetadata) {\n    if (metadata.type !== 'body' && metadata.type !== 'query' && metadata.type !== 'param') {\n      return value;\n    }\n\n    if (typeof value === 'object' && value !== null) {\n      const errors: string[] = [];\n\n      const checkValues = (obj: any, parentKey: string = '') => {\n        Object.keys(obj).forEach(key => {\n          const fullKey = parentKey ? `${parentKey}.${key}` : key;\n          const val = obj[key];\n\n          if (\n            val === '' ||\n            val === null ||\n            val === undefined ||\n            (typeof val === 'number' && (isNaN(val) || (this.rejectZero && val === 0))) ||\n            (typeof val === 'boolean' && this.rejectFalse && val === false)\n          ) {\n            errors.push(`Field ${fullKey} cannot be empty`);\n          } else if (typeof val === 'object' && val !== null) {\n            checkValues(val, fullKey);\n          } else if (Array.isArray(val)) {\n            val.forEach((item, index) => {\n              if (item === '' || item === null || item === undefined) {\n                errors.push(`Field ${fullKey}[${index}] cannot be empty`);\n              } else if (typeof item === 'object' && item !== null) {\n                checkValues(item, `${fullKey}[${index}]`);\n              }\n            });\n          }\n        });\n      };\n\n      checkValues(value);\n\n      if (errors.length > 0) {\n        throw new BadRequestException(errors);\n      }\n    }\n\n    return value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequireTogetherConstraint.html":{"url":"classes/RequireTogetherConstraint.html","title":"class - RequireTogetherConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequireTogetherConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/validations/requiredTogetherConstraint.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage(args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/validations/requiredTogetherConstraint.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(_: any, args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/validations/requiredTogetherConstraint.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                _\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationArguments, ValidatorConstraint, ValidatorConstraintInterface } from 'class-validator';\n\n@ValidatorConstraint({ name: 'RequireTogether', async: false })\nexport class RequireTogetherConstraint implements ValidatorConstraintInterface {\n  validate(_: any, args: ValidationArguments) {\n    const object = args.object as any;\n    const fields = args.constraints[0] as string[];\n\n    const providedFields = fields.filter(field => object[field] !== undefined);\n\n    return providedFields.length === 0 || providedFields.length === fields.length;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return `Fields ${args.constraints[0].join(', ')} must be sent together or not at all.`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/auth/guards/role.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/auth/guards/role.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/guards/role.guard.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  HttpException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable } from 'rxjs';\nimport { throwErrorFactory } from '../../utils/Errors/throw-error-factory';\nimport { ErrorTypes } from '../../utils/enums/error-code-name.enums';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private readonly reflector: Reflector) {}\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    try {\n      const roles = this.reflector.get('roles', context.getHandler());\n      console.log('Roles Guard:', roles);\n      if (!roles?.length) {\n        return true;\n      }\n      const request = context.switchToHttp().getRequest();\n      const user = request.user;\n\n      if (roles.find((item) => item === user.role)) {\n        return true;\n      } else {\n        throwErrorFactory(ErrorTypes.NOT_ALLOWED);\n      }\n    } catch (err) {\n      throw new HttpException(err.message, err.status);\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SignInDto.html":{"url":"classes/SignInDto.html","title":"class - SignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/signin.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsStrongPassword({minLength: 8, minLowercase: 1, minUppercase: 1, minNumbers: 1, minSymbols: 1})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserSignupEnum\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(UserSignupEnum)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/signin.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsEnum, IsStrongPassword } from 'class-validator';\nimport { UserSignupEnum } from '../enums/userRoles.enums';\n\nexport class SignInDto {\n  @IsEmail()\n  email: string;\n\n  @IsStrongPassword({\n    minLength: 8,\n    minLowercase: 1,\n    minUppercase: 1,\n    minNumbers: 1,\n    minSymbols: 1,\n  })\n  password: string;\n\n  @IsEnum(UserSignupEnum)\n  role: UserSignupEnum;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SwaggerAuthMiddleware.html":{"url":"injectables/SwaggerAuthMiddleware.html","title":"injectable - SwaggerAuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SwaggerAuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/middlewares/swagger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/middlewares/swagger.middleware.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        Request\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        NextFunction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport * as basicAuth from 'basic-auth';\n\n@Injectable()\nexport class SwaggerAuthMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    const credentials = basicAuth(req);\n    // If no credentials are provided or they are incorrect\n    if (\n      !credentials ||\n      credentials.name !== process.env.SWAGGER_USER ||\n      credentials.pass !== process.env.SWAGGER_PASSWORD\n    ) {\n      res.setHeader('WWW-Authenticate', 'Basic realm=\"Swagger UI\"');\n      res.status(401).send('Unauthorized access to Swagger UI');\n      return;\n    }\n\n    next(); // Allow access if credentials are valid\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SystemControlValidationDto.html":{"url":"classes/SystemControlValidationDto.html","title":"class - SystemControlValidationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SystemControlValidationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/systemControl.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                app\n                            \n                            \n                                    \n                                authorization\n                            \n                            \n                                    \n                                    \n                                os\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/systemControl.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        authorization\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/systemControl.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/systemControl.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/systemControl.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { OperatingSystem } from '../../utils/enums/systems-os.enums';\nimport { ApiHideProperty } from '@nestjs/swagger';\n\nexport class SystemControlValidationDto {\n  @IsString()\n  app: string;\n\n  @IsString()\n  version: string;\n\n  @IsNotEmpty()\n  @IsString()\n  os: string;\n\n  @IsString()\n  authorization: string;\n}\n\nexport class SystemControlValidationSignInDto {\n  @IsString()\n  app: string;\n\n  @IsString()\n  version: string;\n\n  @IsString()\n  @IsEnum(OperatingSystem)\n  os: OperatingSystem;\n\n  @ApiHideProperty()\n  @IsOptional()\n  @IsString()\n  origin?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SystemControlValidationDto-1.html":{"url":"classes/SystemControlValidationDto-1.html","title":"class - SystemControlValidationDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SystemControlValidationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/dto/system-headers.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                app\n                            \n                            \n                                    \n                                    \n                                os\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/dto/system-headers.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OperatingSystem\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(OperatingSystem)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/dto/system-headers.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/utils/dto/system-headers.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsString } from 'class-validator';\nimport { OperatingSystem } from '../enums/systems-os.enums';\n\nexport class SystemControlValidationDto {\n  @IsString()\n  app: string;\n\n  @IsString()\n  @IsEnum(OperatingSystem)\n  os: OperatingSystem;\n\n  @IsString()\n  version: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SystemControlValidationSignInDto.html":{"url":"classes/SystemControlValidationSignInDto.html","title":"class - SystemControlValidationSignInDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SystemControlValidationSignInDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/systemControl.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                app\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                origin\n                            \n                            \n                                    \n                                    \n                                os\n                            \n                            \n                                    \n                                version\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/systemControl.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        origin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiHideProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/systemControl.dto.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        os\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OperatingSystem\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEnum(OperatingSystem)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/systemControl.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/systemControl.dto.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEnum, IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { OperatingSystem } from '../../utils/enums/systems-os.enums';\nimport { ApiHideProperty } from '@nestjs/swagger';\n\nexport class SystemControlValidationDto {\n  @IsString()\n  app: string;\n\n  @IsString()\n  version: string;\n\n  @IsNotEmpty()\n  @IsString()\n  os: string;\n\n  @IsString()\n  authorization: string;\n}\n\nexport class SystemControlValidationSignInDto {\n  @IsString()\n  app: string;\n\n  @IsString()\n  version: string;\n\n  @IsString()\n  @IsEnum(OperatingSystem)\n  os: OperatingSystem;\n\n  @ApiHideProperty()\n  @IsOptional()\n  @IsString()\n  origin?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UniqueKeysConstraint.html":{"url":"classes/UniqueKeysConstraint.html","title":"class - UniqueKeysConstraint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UniqueKeysConstraint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/decorators/uniqueKeys.decorators.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ValidatorConstraintInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                duplicateKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                defaultMessage\n                            \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        duplicateKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/utils/decorators/uniqueKeys.decorators.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        defaultMessage\n                        \n                    \n                \n            \n            \n                \ndefaultMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/decorators/uniqueKeys.decorators.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                        \n                    validate(keys: any[], args: ValidationArguments)\n                \n            \n\n\n                    \n                        \n                            Defined in src/utils/decorators/uniqueKeys.decorators.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                keys\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                args\n                                            \n                                                        ValidationArguments\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ValidationOptions,\n  registerDecorator,\n  ValidationArguments,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\n\n@ValidatorConstraint({ async: true })\nclass UniqueKeysConstraint implements ValidatorConstraintInterface {\n  duplicateKey: string | null = null;\n\n  async validate(keys: any[], args: ValidationArguments) {\n    // Retrieve the array of keys to be checked for uniqueness\n    const uniqueKeys = args.constraints[0] as string[];\n\n    // Extract the value of the property being validated (expecting an array of any DTO)\n    const value = args.object[args.property] as any[];\n\n    // Iterate over each specified key to check for duplicates\n    for (const uniqueKey of uniqueKeys) {\n      const seenValues = new Set();\n\n      for (const item of value) {\n        const keyValue = item[uniqueKey]?.toLowerCase?.();\n\n        if (keyValue) {\n          // Check if this value has been seen already\n          if (seenValues.has(keyValue)) {\n            this.duplicateKey = uniqueKey;\n            return false;\n          }\n          seenValues.add(keyValue);\n        }\n      }\n    }\n    // Reset duplicateKey if no duplicates were found\n    return true;\n  }\n\n  defaultMessage(): string {\n    return `Duplicate value in \"${this.duplicateKey}\"`;\n  }\n}\n\nexport function UniqueKeys(\n  uniqueKeys: string[],\n  validationOptions?: ValidationOptions,\n) {\n  return function (object: Object, propertyName: string) {\n    registerDecorator({\n      target: object.constructor,\n      propertyName: propertyName,\n      options: validationOptions,\n      constraints: [uniqueKeys],\n      validator: UniqueKeysConstraint,\n    });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCacheDto.html":{"url":"classes/UpdateCacheDto.html","title":"class - UpdateCacheDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCacheDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cache/dto/update-cache.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateCacheDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCacheDto } from './create-cache.dto';\n\nexport class UpdateCacheDto extends PartialType(CreateCacheDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                fullName\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                            \n                                    \n                                userStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: false, index: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        fullName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({get: fullName => , set: fullName => , required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true, type: String})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRolesEnums\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: undefined, index: true, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        userStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({type: String, enum: undefined, required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:61\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose';\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { UserRolesEnums } from '../../auth/enums/userRoles.enums';\nimport { UserStatus } from '../../auth/enums/userStatus.enum';\n\nexport type UsersDocument = User & Document;\n\n@Schema({\n  timestamps: true,\n  toJSON: {\n    virtuals: true,\n    transform: (doc, ret) => {\n      ret.id = ret._id;\n      delete ret._id;\n      delete ret.__v;\n      return ret;\n    },\n  },\n})\nexport class User {\n  _id?: string;\n\n  @Prop({\n    get: (fullName: string) => {\n      return fullName.toUpperCase();\n    },\n    set: (fullName: string) => {\n      return fullName.trim();\n    },\n    required: true,\n    type: String,\n  })\n  fullName: string;\n\n  @Prop({\n    type: String,\n    enum: Object.values(UserRolesEnums),\n    index: true,\n    required: true,\n  })\n  role: UserRolesEnums;\n\n  @Prop({\n    required: false,\n    index: true,\n    type: String,\n  })\n  email: string;\n\n  @Prop({\n    required: true,\n    type: String,\n  })\n  password: string;\n\n  @Prop({\n    type: String,\n    enum: Object.values(UserStatus),\n    required: true,\n  })\n  userStatus: UserStatus;\n}\n\nconst UserSchema = SchemaFactory.createForClass(User);\n\nUserSchema.index({ email: 1, role: 1 }, { unique: true });\n\nexport { UserSchema };\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Users')\n@Controller({ path: 'users', version: '1' })\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersRepository\n\nUsersRepository\n\nUsersModule -->\n\nUsersRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersRepository\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { AuthModule } from '../auth/auth.module';\nimport { User, UserSchema } from './entities/user.entity';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersRepository } from './users.repository';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      {\n        name: User.name,\n        schema: UserSchema,\n      },\n    ]),\n  ],\n  controllers: [UsersController],\n  providers: [UsersService, UsersRepository],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersRepository.html":{"url":"injectables/UsersRepository.html","title":"injectable - UsersRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.repository.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAbstractRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                createDoc\n                            \n                            \n                                    Public\n                                    Async\n                                deleteMany\n                            \n                            \n                                    Public\n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                find\n                            \n                            \n                                    Public\n                                    Async\n                                findAllWithPaginationOption\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                findOneAndUpdate\n                            \n                            \n                                    Public\n                                    Async\n                                updateAllVoid\n                            \n                            \n                                    Public\n                                    Async\n                                updateOne\n                            \n                            \n                                    Public\n                                    Async\n                                updateOneVoid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(data: any, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:19\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        createDoc\n                        \n                    \n                \n            \n            \n                \n                        \n                    createDoc(data: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:24\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteMany\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteMany(filterQuery: FilterQuery>, options?: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:115\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        deleteOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteOne(filterQuery: FilterQuery>)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:109\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        find\n                        \n                    \n                \n            \n            \n                \n                        \n                    find(filterQuery: FilterQuery>, projection: Record, options: QueryOptions)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:29\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                projection\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findAllWithPaginationOption\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllWithPaginationOption(queryFiltersAndOptions: any, arrayOfFilters: string[], extraOptions: object)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:50\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                queryFiltersAndOptions\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                arrayOfFilters\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                extraOptions\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filterQuery: FilterQuery>, options: QueryOptions, projection: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:39\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                projection\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOneAndUpdate\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOneAndUpdate(filterQuery: FilterQuery>, updateQuery: UpdateQuery>, options: QueryOptions, projection: any, session?: ClientSession)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:97\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                updateQuery\n                                            \n                                                            UpdateQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                options\n                                            \n                                                        QueryOptions\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                projection\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                        \n                                                session\n                                            \n                                                        ClientSession\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Promise>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateAllVoid\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateAllVoid(filterQuery: FilterQuery>, updateQuery: UpdateQuery>, options?: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:138\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateQuery\n                                            \n                                                            UpdateQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOne(filterQuery: FilterQuery>, updateQuery: UpdateQuery>, options?: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:122\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateQuery\n                                            \n                                                            UpdateQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        updateOneVoid\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateOneVoid(filterQuery: FilterQuery>, updateQuery: UpdateQuery>, options?: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAbstractRepository\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAbstractRepository:130\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filterQuery\n                                            \n                                                            FilterQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateQuery\n                                            \n                                                            UpdateQuery>\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                options\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model>\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseAbstractRepository\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAbstractRepository:13\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { BaseAbstractRepository } from 'src/utils/base.abstract.repository';\nimport { User, UsersDocument } from './entities/user.entity';\n\n@Injectable()\nexport class UsersRepository extends BaseAbstractRepository {\n  constructor(\n    @InjectModel(User.name)\n    private readonly userModel: Model,\n  ) {\n    super(userModel);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                updateStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepository: UsersRepository)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepository\n                                                  \n                                                        \n                                                                        UsersRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                        \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOne(filter: Record)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                        Record\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateStatus(id: string, status: UserStatus)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                status\n                                            \n                                                            UserStatus\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersRepository } from './users.repository';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UserStatus } from '../auth/enums/userStatus.enum';\n\n@Injectable()\nexport class UsersService {\n  constructor(private readonly usersRepository: UsersRepository) {}\n\n  async findOne(filter: Record) {\n    return await this.usersRepository.findOne(filter);\n  }\n\n  async create(createUserDto: CreateUserDto) {\n    return await this.usersRepository.create(createUserDto);\n  }\n\n  async updateStatus(id: string, status: UserStatus) {\n    return await this.usersRepository.updateOneVoid(\n      { id },\n      {\n        userStatus: status,\n      },\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/VerifyEmailDto.html":{"url":"classes/VerifyEmailDto.html","title":"class - VerifyEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  VerifyEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/verify-email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                otp\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/verify-email.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        otp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/verify-email.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNumber } from 'class-validator';\n\nexport class VerifyEmailDto {\n  @IsEmail()\n  email: string;\n\n  @IsNumber()\n  otp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/auth/decorators/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/signup.decorator.ts\n            \n            variable\n            RequestHeaders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/decorators/user.decorator.ts\n            \n            variable\n            AuthUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/dto/jwt-headers.dto.ts\n            \n            class\n            JwtHeaders\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/dto/signin.dto.ts\n            \n            class\n            SignInDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/dto/systemControl.dto.ts\n            \n            class\n            SystemControlValidationDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/systemControl.dto.ts\n            \n            class\n            SystemControlValidationSignInDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/dto/verify-email.dto.ts\n            \n            class\n            VerifyEmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.auth.guard.ts\n            \n            guard\n            JWTAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/guards/jwt.decoded.auth.guard.ts\n            \n            guard\n            JWTDecodedAuthGuard\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/auth/guards/role.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/interfaces/csrf.interface.ts\n            \n            interface\n            IDecodedCsrf\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/interfaces/requestWithIUser.interface.ts\n            \n            interface\n            IRequestWithUser\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cache/cache.controller.ts\n            \n            controller\n            CacheController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cache/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/cache/dto/create-cache.dto.ts\n            \n            class\n            CreateCacheDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cache/dto/update-cache.dto.ts\n            \n            class\n            UpdateCacheDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cache/entities/cache.entity.ts\n            \n            class\n            Cache\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/databases/mongodb/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/mailer/mailer.controller.ts\n            \n            controller\n            MailerController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mailer/mailer.service.ts\n            \n            injectable\n            MailerService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.repository.ts\n            \n            injectable\n            UsersRepository\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/utils/Errors/factory.error.ts\n            \n            variable\n            errorConfigs\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/Errors/throw-error-factory.ts\n            \n            function\n            throwErrorFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/SQL-Injection/escapeRegex.ts\n            \n            variable\n            escapeRegex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/Templates/emailVerification.ts\n            \n            function\n            emailVerificationTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/base.abstract.repository.ts\n            \n            class\n            BaseAbstractRepository\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/utils/baseResponse.ts\n            \n            class\n            BaseResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/constant/constant.ts\n            \n            variable\n            EMAIL_VERIFICATION_DESCRIPTION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/constant/constant.ts\n            \n            variable\n            EMAIL_VERIFICATION_TITLE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/allow-edit-profile.decorator.ts\n            \n            variable\n            ALLOW_UR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/allow-edit-profile.decorator.ts\n            \n            variable\n            ALLOW_With_UNDER_REVIEW\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/api-file.decorator.ts\n            \n            variable\n            ApiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/api-file.decorator.ts\n            \n            variable\n            ApiMultiFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/public.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/public.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/skip-jwt.decorator.ts\n            \n            variable\n            SKIP_JWT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/skip-jwt.decorator.ts\n            \n            variable\n            SKIP_JWT_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/decorators/uniqueKeys.decorators.ts\n            \n            class\n            UniqueKeysConstraint\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/decorators/uniqueKeys.decorators.ts\n            \n            function\n            UniqueKeys\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/dto/system-headers.dto.ts\n            \n            class\n            SystemControlValidationDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/firebase/firebase.config.ts\n            \n            variable\n            firebaseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/guard/header-validation.guard.ts\n            \n            guard\n            HeaderValidationGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            ACCESS_NOT_ALLOW_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            ACCOUNT_INACTIVE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            ACCOUNT_SUSPENDED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            ANDROID_CRITICAL_UPDATE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            APPLICATION_MAINTENANCE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            APPLICATION_STOPPED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            CLOSED_ORDER_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            COMPANY_ISSUE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            CSRF_INVALID_TOKEN_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            CSRF_TOKEN_EXPIRED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            CSRF_TOKEN_REQUIRED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            DUPLICATED_ERROR_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            ERROR_IN_UPDATE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            EXIST_EMAIL_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            EXIST_PHONE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            INVALID_TOKEN_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            INVALID_URL_PARAMS_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            IOS_CRITICAL_UPDATE_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            MANY_ATTEMPT_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            NOT_ALLOWED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            NOT_FOUND_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            NOT_FOUND_PRODUCT_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            OTP_NOT_EXIST_OR_EXPIRED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            OTP_NOT_MATCH_WITH_CURRENT_OTP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            PASSWORD_NOT_VALID_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            PERMISSION_DENIED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            REFRESH_EXPIRED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            THERE_IS_PENDING_REQUEST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            TOKEN_EXPIRED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            TOKEN_REQUIRED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            UNAUTHORIZED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            USER_BLOCKED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            USER_DELETED_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            USER_GOV_DIS_NOT_FOUND_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            USER_NOT_FOUND_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/messages/messages.constant.ts\n            \n            variable\n            WRONG_CSRF_TOKEN_MESSAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/middlewares/originResponseHeaders.middleware.ts\n            \n            injectable\n            CorsMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/middlewares/swagger.middleware.ts\n            \n            injectable\n            SwaggerAuthMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/pagination/paginationFilter.dto.ts\n            \n            class\n            PaginationParams\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/pagination/preparePagination.ts\n            \n            function\n            getPaginationStages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/pipes/rejectEmptyValues.pipe.ts\n            \n            class\n            RejectEmptyValuesPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/validations/requiredTogetherConstraint.ts\n            \n            class\n            RequireTogetherConstraint\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/winston.helper.ts\n            \n            variable\n            AppOptions\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/config : ^4.0.2\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/jwt : ^11.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^11.0.3\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/serve-static : ^5.0.3\n        \n            @nestjs/swagger : ^11.2.0\n        \n            @types/basic-auth : ^1.1.8\n        \n            @types/bcrypt : ^5.0.2\n        \n            @types/cookie-parser : ^1.4.9\n        \n            @types/ioredis : ^4.28.10\n        \n            @types/mongoose : ^5.11.96\n        \n            basic-auth : ^2.0.1\n        \n            bcrypt : ^6.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.2\n        \n            cookie-parser : ^1.4.7\n        \n            helmet : ^8.1.0\n        \n            ioredis : ^5.6.1\n        \n            mongoose : ^8.16.1\n        \n            mongoose-autopopulate : ^1.1.0\n        \n            mongoose-paginate-v2 : ^1.9.1\n        \n            nest-winston : ^1.10.2\n        \n            nestjs-rate-limiter : ^3.1.0\n        \n            nodemailer : ^7.0.3\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AppHeaders   (src/.../app-headers.enums.ts)\n                        \n                        \n                            AuthTemplateEnums   (src/.../auth-template.enums.ts)\n                        \n                        \n                            EnumsResponse   (src/.../constants.ts)\n                        \n                        \n                            ErrorTypes   (src/.../error-code-name.enums.ts)\n                        \n                        \n                            OperatingSystem   (src/.../systems-os.enums.ts)\n                        \n                        \n                            TimeUnit   (src/.../time-unit.enums.ts)\n                        \n                        \n                            UserDELETEStatus   (src/.../userStatus.enum.ts)\n                        \n                        \n                            UserRolesEnums   (src/.../userRoles.enums.ts)\n                        \n                        \n                            UserSignupEnum   (src/.../userRoles.enums.ts)\n                        \n                        \n                            UserStatus   (src/.../userStatus.enum.ts)\n                        \n                        \n                            UserStatusForVendorReview   (src/.../userStatus.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/enums/app-headers.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AppHeaders\n                    \n                \n                        \n                            \n                                 APP\n                            \n                        \n                        \n                            \n                                Value : app\n                            \n                        \n                        \n                            \n                                 VERSION\n                            \n                        \n                        \n                            \n                                Value : version\n                            \n                        \n                        \n                            \n                                 OS\n                            \n                        \n                        \n                            \n                                Value : os\n                            \n                        \n            \n        \n\n    src/utils/enums/auth-template.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        AuthTemplateEnums\n                    \n                \n                        \n                            \n                                 CODE\n                            \n                        \n                        \n                            \n                                Value : CODE\n                            \n                        \n                        \n                            \n                                 LINK\n                            \n                        \n                        \n                            \n                                Value : LINK\n                            \n                        \n            \n        \n\n    src/utils/constants.ts\n    \n        \n            \n                \n                    \n                        \n                        EnumsResponse\n                    \n                \n                        \n                            \n                                 SERVER_WORKING\n                            \n                        \n                        \n                            \n                                Value : SERVER WORKING\n                            \n                        \n            \n        \n\n    src/utils/enums/error-code-name.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        ErrorTypes\n                    \n                \n                        \n                            \n                                 TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                Value : TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                 INVALID_TOKEN\n                            \n                        \n                        \n                            \n                                Value : INVALID_TOKEN\n                            \n                        \n                        \n                            \n                                 ACCOUNT_INACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACCOUNT_INACTIVE\n                            \n                        \n                        \n                            \n                                 REFRESH_EXPIRED\n                            \n                        \n                        \n                            \n                                Value : REFRESH_EXPIRED\n                            \n                        \n                        \n                            \n                                 IOS_CRITICAL_UPDATE\n                            \n                        \n                        \n                            \n                                Value : IOS_CRITICAL_UPDATE\n                            \n                        \n                        \n                            \n                                 ANDROID_CRITICAL_UPDATE\n                            \n                        \n                        \n                            \n                                Value : ANDROID_CRITICAL_UPDATE\n                            \n                        \n                        \n                            \n                                 APPLICATION_MAINTENANCE\n                            \n                        \n                        \n                            \n                                Value : APPLICATION_MAINTENANCE\n                            \n                        \n                        \n                            \n                                 APPLICATION_STOPPED\n                            \n                        \n                        \n                            \n                                Value : APPLICATION_STOPPED\n                            \n                        \n                        \n                            \n                                 PASSWORD_NOT_VALID\n                            \n                        \n                        \n                            \n                                Value : PASSWORD_NOT_VALID\n                            \n                        \n                        \n                            \n                                 USER_BLOCKED\n                            \n                        \n                        \n                            \n                                Value : USER_BLOCKED\n                            \n                        \n                        \n                            \n                                 USER_DELETED\n                            \n                        \n                        \n                            \n                                Value : USER_DELETED\n                            \n                        \n                        \n                            \n                                 SUSPENDED\n                            \n                        \n                        \n                            \n                                Value : SUSPENDED\n                            \n                        \n                        \n                            \n                                 OTP_NOT_MATCH\n                            \n                        \n                        \n                            \n                                Value : OTP_NOT_MATCH\n                            \n                        \n                        \n                            \n                                 OTP_NOT_EXIST_OR_EXPIRED\n                            \n                        \n                        \n                            \n                                Value : OTP_NOT_EXIST_OR_EXPIRED\n                            \n                        \n                        \n                            \n                                 ACCESS\n                            \n                        \n                        \n                            \n                                Value : ACCESS\n                            \n                        \n                        \n                            \n                                 NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : NOT_FOUND\n                            \n                        \n                        \n                            \n                                 NOT_FOUND_PRODUCT\n                            \n                        \n                        \n                            \n                                Value : NOT_FOUND_PRODUCT\n                            \n                        \n                        \n                            \n                                 EMAIL_EXIST\n                            \n                        \n                        \n                            \n                                Value : EMAIL_EXIST\n                            \n                        \n                        \n                            \n                                 PHONE_EXIST\n                            \n                        \n                        \n                            \n                                Value : PHONE_EXIST\n                            \n                        \n                        \n                            \n                                 NOT_FOUND_USER\n                            \n                        \n                        \n                            \n                                Value : NOT_FOUND_USER\n                            \n                        \n                        \n                            \n                                 MANY_ATTEMPT\n                            \n                        \n                        \n                            \n                                Value : MANY_ATTEMPT\n                            \n                        \n                        \n                            \n                                 PERMISSION\n                            \n                        \n                        \n                            \n                                Value : PERMISSION\n                            \n                        \n                        \n                            \n                                 NOT_COMPLETED\n                            \n                        \n                        \n                            \n                                Value : NOT_COMPLETED\n                            \n                        \n                        \n                            \n                                 DUPLICATED\n                            \n                        \n                        \n                            \n                                Value : DUPLICATED\n                            \n                        \n                        \n                            \n                                 ERROR_UPDATE\n                            \n                        \n                        \n                            \n                                Value : ERROR_UPDATE\n                            \n                        \n                        \n                            \n                                 PENDING_REQUESTS\n                            \n                        \n                        \n                            \n                                Value : PENDING_REQUESTS\n                            \n                        \n                        \n                            \n                                 INVALID_URL_PARAMS\n                            \n                        \n                        \n                            \n                                Value : INVALID_URL_PARAMS\n                            \n                        \n                        \n                            \n                                 CLOSED_ORDER\n                            \n                        \n                        \n                            \n                                Value : CLOSED_ORDER\n                            \n                        \n                        \n                            \n                                 TOKEN_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : TOKEN_REQUIRED\n                            \n                        \n                        \n                            \n                                 NOT_ALLOWED\n                            \n                        \n                        \n                            \n                                Value : NOT_ALLOWED\n                            \n                        \n                        \n                            \n                                 USER_GOV_DIS_NOT_FOUND\n                            \n                        \n                        \n                            \n                                Value : USER_GOV_DIS_NOT_FOUND\n                            \n                        \n                        \n                            \n                                 CSRF_TOKEN_REQUIRED\n                            \n                        \n                        \n                            \n                                Value : CSRF_TOKEN_REQUIRED\n                            \n                        \n                        \n                            \n                                 CSRF_INVALID_TOKEN\n                            \n                        \n                        \n                            \n                                Value : CSRF_INVALID_TOKEN\n                            \n                        \n                        \n                            \n                                 CSRF_TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                Value : CSRF_TOKEN_EXPIRED\n                            \n                        \n                        \n                            \n                                 WRONG_CSRF_TOKEN\n                            \n                        \n                        \n                            \n                                Value : WRONG_CSRF_TOKEN\n                            \n                        \n            \n        \n\n    src/utils/enums/systems-os.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        OperatingSystem\n                    \n                \n                        \n                            \n                                 ANDROID\n                            \n                        \n                        \n                            \n                                Value : Android\n                            \n                        \n                        \n                            \n                                 IOS\n                            \n                        \n                        \n                            \n                                Value : IOS\n                            \n                        \n                        \n                            \n                                 WEB\n                            \n                        \n                        \n                            \n                                Value : Web\n                            \n                        \n                        \n                            \n                                 ELASTIC\n                            \n                        \n                        \n                            \n                                Value : Elastic\n                            \n                        \n                        \n                            \n                                 SWAGGER\n                            \n                        \n                        \n                            \n                                Value : Swagger\n                            \n                        \n            \n        \n\n    src/utils/enums/time-unit.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeUnit\n                    \n                \n                        \n                            \n                                 HOUR\n                            \n                        \n                        \n                            \n                                Value : HOUR\n                            \n                        \n                        \n                            \n                                 DAY\n                            \n                        \n                        \n                            \n                                Value : DAY\n                            \n                        \n                        \n                            \n                                 WEEK\n                            \n                        \n                        \n                            \n                                Value : WEEK\n                            \n                        \n                        \n                            \n                                 MONTH\n                            \n                        \n                        \n                            \n                                Value : MONTH\n                            \n                        \n                        \n                            \n                                 YEAR\n                            \n                        \n                        \n                            \n                                Value : YEAR\n                            \n                        \n            \n        \n\n    src/auth/enums/userStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UserDELETEStatus\n                    \n                \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserStatus\n                    \n                \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n                        \n                            \n                                 INACTIVE\n                            \n                        \n                        \n                            \n                                Value : INACTIVE\n                            \n                        \n                        \n                            \n                                 BLOCKED\n                            \n                        \n                        \n                            \n                                Value : BLOCKED\n                            \n                        \n                        \n                            \n                                 DELETED\n                            \n                        \n                        \n                            \n                                Value : DELETED\n                            \n                        \n                        \n                            \n                                 NOT_COMPLETED\n                            \n                        \n                        \n                            \n                                Value : NOT_COMPLETED\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserStatusForVendorReview\n                    \n                \n                        \n                            \n                                 NOT_COMPLETED\n                            \n                        \n                        \n                            \n                                Value : NOT_COMPLETED\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : ACTIVE\n                            \n                        \n            \n        \n\n    src/auth/enums/userRoles.enums.ts\n    \n        \n            \n                \n                    \n                        \n                        UserRolesEnums\n                    \n                \n                        \n                            \n                                 SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                Value : SUPER_ADMIN\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n                        \n                            \n                                 SELLER\n                            \n                        \n                        \n                            \n                                Value : SELLER\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        UserSignupEnum\n                    \n                \n                        \n                            \n                                 SELLER\n                            \n                        \n                        \n                            \n                                Value : SELLER\n                            \n                        \n                        \n                            \n                                 USER\n                            \n                        \n                        \n                            \n                                Value : USER\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            emailVerificationTemplate   (src/.../emailVerification.ts)\n                        \n                        \n                            getPaginationStages   (src/.../preparePagination.ts)\n                        \n                        \n                            throwErrorFactory   (src/.../throw-error-factory.ts)\n                        \n                        \n                            UniqueKeys   (src/.../uniqueKeys.decorators.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/Templates/emailVerification.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailVerificationTemplate\n                        \n                    \n                \n            \n            \n                \nemailVerificationTemplate(title: string, desc: string, action: any, type: AuthTemplateEnums)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                desc\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                action\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                            AuthTemplateEnums\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/pagination/preparePagination.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getPaginationStages\n                        \n                    \n                \n            \n            \n                \ngetPaginationStages(page: number, limit: number, allowPagination: boolean)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                allowPagination\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/utils/Errors/throw-error-factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwErrorFactory\n                        \n                    \n                \n            \n            \n                \nthrowErrorFactory(errorType: ErrorTypes)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                errorType\n                                            \n                                                            ErrorTypes\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     never\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/utils/decorators/uniqueKeys.decorators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UniqueKeys\n                        \n                    \n                \n            \n            \n                \nUniqueKeys(uniqueKeys, validationOptions?: ValidationOptions)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                uniqueKeys\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                validationOptions\n                                            \n                                                        ValidationOptions\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAuthentication Backend API\nA comprehensive NestJS-based authentication backend API built with MongoDB, Redis, JWT authentication, and comprehensive security features.\n📋 Table of Contents\n\nOverview\nArchitecture\nFeatures\nInstallation & Setup\nEnvironment Variables\nAPI Documentation\nSecurity Features\nDatabase Schema\nMiddleware & Guards\nError Handling\nTesting\nDeployment\n\n🔍 Overview\nThis is a production-ready authentication system built with NestJS framework featuring:\n\nJWT Authentication with access/refresh token mechanism\nEmail Verification with OTP\nRole-based Access Control (RBAC)\nRate Limiting and Security Headers\nMulti-platform Support (Web, Mobile, Swagger)\nRedis Caching for performance optimization\nMongoDB for data persistence\nComprehensive Logging and error handling\n\n🏗️ Architecture\nExample :┌─────────────────┐\n│    Client App   │\n└─────────┬───────┘\n          │\n    ┌─────▼─────┐\n    │  Nginx    │  (Load Balancer/Reverse Proxy)\n    └─────┬─────┘\n          │\n    ┌─────▼─────┐\n    │ NestJS API │  (Authentication Service)\n    └─────┬─────┘\n          │\n    ┌─────▼─────┐    ┌──────────┐\n    │ MongoDB   │    │  Redis   │\n    │(Database) │    │ (Cache)  │\n    └───────────┘    └──────────┘✨ Features\nCore Features\n\n🔐 User Registration with email verification\n🔑 JWT-based Authentication with CSRF protection\n🔄 Token Refresh mechanism\n📧 Email Verification with OTP\n👥 Role-based Authorization (USER, SELLER, ADMIN, SUPER_ADMIN)\n🚫 Rate Limiting protection\n🛡️ Security Headers (Helmet.js)\n📱 Multi-platform Support (Web, iOS, Android, Swagger)\n\nAdvanced Features\n\n⚡ Redis Caching for performance\n📊 Comprehensive Logging\n🔍 API Documentation with Swagger\n🧪 Testing Suite\n🐳 Docker Support\n📈 Health Checks\n\n🚀 Installation & Setup\nPrerequisites\n\nNode.js (v18 or higher)\nMongoDB (v5.0 or higher)\nRedis (v6.0 or higher)\nnpm or yarn\n\nInstallation\n\nClone the repository\n\nExample :git clone \ncd auth-backend\nInstall dependencies\n\nExample :npm install\nSetup environment variables\n\nExample :cp .env.example .env\n# Edit .env with your configuration\nStart the services\n\nExample :# Development\nnpm run start:dev\n\n# Production\nnpm run build\nnpm run start:prod🔧 Environment Variables\nCreate a .env file in the root directory:\nExample :# Server Configuration\nSERVER_PORT=80\nNODE_ENV=development\n\n# Swagger Configuration\nSWAGGER_ROUTE=api\nSWAGGER_USER=admin\nSWAGGER_PASSWORD=\"easy generator\"\n\n# API Documentation\nAPP_DOCS=\"docs\"\n\n# MongoDB Configuration\nMONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/database\n\n# Redis Configuration\nREDIS_USERNAME=default\nREDIS_PASSWORD=your_redis_password\nREDIS_HOST=your_redis_host\nREDIS_PORT=13492\n\n# Authentication Configuration\nSECRET_KEY=your_secret_key\nBCRYPT_PASSWORD=your_bcrypt_password\nSALT_ROUND=10\nJWT_SECRET=your_jwt_secret\nJWT_REFRESH_SECRET=your_jwt_refresh_secret\nJWT_CSRF_SECRET=your_jwt_csrf_secret\nJWT_Expiry=1d\nJWT_Refresh_Expiry=7d\n\n# Email Configuration\nMAIL_HOST=smtp.gmail.com\nMAIL_PORT=587\nMAIL_USER=your_email@gmail.com\nMAIL_PASS=your_app_password\n\n# Application Status\nAPPLICATION_STATUS=2  # 0=stopped, 1=maintenance, 2=active\nANDROID_CRITICAL_UPDATE=1\nIOS_CRITICAL_UPDATE=1📚 API Documentation\nBase URL\nExample :http://localhost:80/v1Authentication Headers\nAll protected endpoints require:\nExample :Authorization: Bearer   # For mobile apps\ncsrf-token:               # Required for all authenticated requests\napp:                        # Application identifier\nversion:                 # Application version\nos:                 # Android|iOS|Web|Swagger|Elastic\n🔗 API Endpoints\n1. Server Health Check\nGET /\nCheck server status and health.\nRequest:\nExample :GET / HTTP/1.1Response:\nExample :{\n  \"success\": true,\n  \"message\": \"Server is running\",\n  \"data\": {\n    \"status\": \"healthy\",\n    \"timestamp\": \"2025-06-30T10:00:00Z\"\n  }\n}Sequence Diagram:\nExample :sequenceDiagram\n    participant Client\n    participant AuthBackend\n    participant AppService\n\n    Client->>AuthBackend: GET /\n    AuthBackend->>AppService: serverChecking()\n    AppService-->>AuthBackend: Server status\n    AuthBackend-->>Client: 200 OK (Server healthy)\n2. User Registration\nPOST /v1/auth/signup\nRegister a new user with email verification.\nRequest:\nExample :POST /v1/auth/signup HTTP/1.1\nContent-Type: application/json\n\n{\n  \"fullName\": \"John Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"StrongP@ss123\",\n  \"role\": \"USER\"\n}Response:\nExample :{\n  \"success\": true,\n  \"message\": \"User created successfully, please check your email for verification instructions.\",\n  \"data\": null\n}Sequence Diagram:\nExample :sequenceDiagram\n    participant Client\n    participant AuthController\n    participant AuthService\n    participant UsersService\n    participant CacheService\n    participant MailerService\n    participant MongoDB\n    participant Redis\n\n    Client->>AuthController: POST /v1/auth/signup\n    AuthController->>AuthService: signUp(createUserDto)\n\n    AuthService->>AuthService: Hash password\n    AuthService->>UsersService: findOne(email, role)\n    UsersService->>MongoDB: Query user\n    MongoDB-->>UsersService: User data (if exists)\n    UsersService-->>AuthService: User result\n\n    alt User already exists and active\n        AuthService-->>AuthController: Throw EMAIL_EXIST error\n    else User doesn't exist or not completed\n        AuthService->>AuthService: generateOtp(4)\n        AuthService->>CacheService: setCache(otp:email, otp, 300s)\n        CacheService->>Redis: Store OTP\n        Redis-->>CacheService: Success\n\n        AuthService->>MailerService: sendMail(email, subject, template)\n        MailerService-->>AuthService: Email sent\n\n        alt New user\n            AuthService->>UsersService: create(userDto)\n            UsersService->>MongoDB: Insert user\n            MongoDB-->>UsersService: User created\n        end\n\n        AuthService-->>AuthController: Success message\n    end\n\n    AuthController-->>Client: 201 Created\n3. Email Verification\nPATCH /v1/auth/verify-email\nVerify user email with OTP.\nRequest:\nExample :PATCH /v1/auth/verify-email HTTP/1.1\nContent-Type: application/json\n\n{\n  \"email\": \"john.doe@example.com\",\n  \"otp\": 1234\n}Response:\nExample :{\n  \"success\": true,\n  \"message\": \"Email verified successfully\",\n  \"data\": null\n}Sequence Diagram:\nExample :sequenceDiagram\n    participant Client\n    participant AuthController\n    participant AuthService\n    participant CacheService\n    participant UsersService\n    participant MongoDB\n    participant Redis\n\n    Client->>AuthController: PATCH /v1/auth/verify-email\n    AuthController->>AuthService: verifyEmail(email, otp)\n\n    AuthService->>CacheService: getCache(otp:email)\n    CacheService->>Redis: Get stored OTP\n    Redis-->>CacheService: OTP value\n    CacheService-->>AuthService: Cached OTP\n\n    alt OTP not found or expired\n        AuthService-->>AuthController: Throw OTP_NOT_EXIST_OR_EXPIRED error\n    else OTP doesn't match\n        AuthService-->>AuthController: Throw OTP_NOT_MATCH error\n    else OTP valid\n        AuthService->>UsersService: findOne(email, status=NOT_COMPLETED)\n        UsersService->>MongoDB: Query user\n        MongoDB-->>UsersService: User data\n\n        AuthService->>UsersService: updateStatus(userId, ACTIVE)\n        UsersService->>MongoDB: Update user status\n        MongoDB-->>UsersService: Update success\n\n        AuthService-->>AuthController: Success message\n    end\n\n    AuthController-->>Client: 200 OK\n4. User Sign In\nPOST /v1/auth/signin\nAuthenticate user and receive tokens.\nRequest:\nExample :POST /v1/auth/signin HTTP/1.1\nContent-Type: application/json\napp: MyApp\nversion: 1.0.0\nos: Web\n\n{\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"StrongP@ss123\",\n  \"role\": \"USER\"\n}Response:\nExample :{\n  \"success\": true,\n  \"message\": \"Sign in successful\",\n  \"data\": {\n    \"user\": {\n      \"id\": \"60d5ecb54b24a5001c8e4f8a\",\n      \"fullName\": \"JOHN DOE\",\n      \"email\": \"john.doe@example.com\",\n      \"role\": \"USER\",\n      \"userStatus\": \"ACTIVE\"\n    }\n  }\n}Response Headers:\nExample :Set-Cookie: access_token=; HttpOnly; Secure; SameSite=Strict\nSet-Cookie: refresh_token=; HttpOnly; Secure; SameSite=Strict\ncsrf-token: Sequence Diagram:\nExample :sequenceDiagram\n    participant Client\n    participant AuthController\n    participant JWTAuthGuard\n    participant AuthService\n    participant UsersService\n    participant CacheService\n    participant MongoDB\n    participant Redis\n\n    Client->>AuthController: POST /v1/auth/signin\n    AuthController->>JWTAuthGuard: canActivate()\n\n    JWTAuthGuard->>UsersService: findOne(email, role)\n    UsersService->>MongoDB: Query user\n    MongoDB-->>UsersService: User data\n\n    alt User not found\n        JWTAuthGuard-->>AuthController: Throw NOT_FOUND_USER error\n    else User deleted/blocked\n        JWTAuthGuard-->>AuthController: Throw USER_DELETED/BLOCKED error\n    else Valid user\n        JWTAuthGuard->>JWTAuthGuard: bcrypt.compare(password, hashedPassword)\n\n        alt Password incorrect\n            JWTAuthGuard-->>AuthController: Throw PASSWORD_NOT_VALID error\n        else Password correct\n            JWTAuthGuard->>JWTAuthGuard: Generate JWT tokens\n            Note over JWTAuthGuard: - Access Token (1d)- Refresh Token (7d)- CSRF Token (7d)\n\n            JWTAuthGuard->>CacheService: setMultipleCache(refreshToken, 7d)\n            CacheService->>Redis: Store refresh token\n\n            JWTAuthGuard->>JWTAuthGuard: Check application status & version\n            JWTAuthGuard-->>AuthController: Set user in request\n        end\n    end\n\n    AuthController->>AuthService: signIn(headers, user, response)\n\n    alt Web/Swagger platform\n        AuthService->>AuthService: Set HTTP-only cookies\n        AuthService->>AuthService: Set CSRF header\n        AuthService->>AuthService: Remove tokens from response\n    end\n\n    AuthService-->>AuthController: User data\n    AuthController-->>Client: 200 OK + Cookies + Headers\n5. Check Authentication\nGET /v1/auth/check-auth\nVerify if user is authenticated.\nRequest:\nExample :GET /v1/auth/check-auth HTTP/1.1\nAuthorization: Bearer \ncsrf-token: \napp: MyApp\nversion: 1.0.0\nos: WebResponse:\nExample :{\n  \"success\": true,\n  \"message\": \"User Authenticated\",\n  \"data\": null\n}Sequence Diagram:\nExample :sequenceDiagram\n    participant Client\n    participant AuthController\n    participant JWTDecodedAuthGuard\n    participant JwtService\n    participant CacheService\n    participant Redis\n\n    Client->>AuthController: GET /v1/auth/check-auth\n    AuthController->>JWTDecodedAuthGuard: canActivate()\n\n    JWTDecodedAuthGuard->>JWTDecodedAuthGuard: Extract tokens from request\n    Note over JWTDecodedAuthGuard: - Access token from cookies/headers- CSRF token from headers- Refresh token from cookies\n\n    JWTDecodedAuthGuard->>JwtService: verify(csrfToken, csrfSecret)\n    JwtService-->>JWTDecodedAuthGuard: Decoded CSRF\n\n    JWTDecodedAuthGuard->>JwtService: verify(accessToken, secret)\n    JwtService-->>JWTDecodedAuthGuard: Decoded user\n\n    alt Token expired and refresh token exists\n        JWTDecodedAuthGuard->>JwtService: verify(refreshToken, refreshSecret)\n        JWTDecodedAuthGuard->>CacheService: getCache(refreshToken)\n        CacheService->>Redis: Check token validity\n        Redis-->>CacheService: Token status\n\n        alt Refresh token valid\n            JWTDecodedAuthGuard->>JwtService: sign(newAccessToken)\n            JWTDecodedAuthGuard->>JWTDecodedAuthGuard: Set new access token cookie\n        else Refresh token invalid\n            JWTDecodedAuthGuard-->>AuthController: Throw REFRESH_EXPIRED error\n        end\n    else Token valid\n        JWTDecodedAuthGuard->>JWTDecodedAuthGuard: Validate CSRF token match\n        JWTDecodedAuthGuard->>JWTDecodedAuthGuard: Check user status\n        JWTDecodedAuthGuard-->>AuthController: Set user in request\n    end\n\n    AuthController-->>Client: 200 OK\n6. User Logout\nDELETE /v1/auth/logout\nSign out user and invalidate tokens.\nRequest:\nExample :DELETE /v1/auth/logout HTTP/1.1\nAuthorization: Bearer \ncsrf-token: \napp: MyApp\nversion: 1.0.0\nos: WebResponse:\nExample :{\n  \"success\": true,\n  \"message\": \"Logout successfully\",\n  \"data\": null\n}Sequence Diagram:\nExample :sequenceDiagram\n    participant Client\n    participant AuthController\n    participant AuthService\n    participant JwtService\n    participant CacheService\n    participant Redis\n\n    Client->>AuthController: DELETE /v1/auth/logout\n    AuthController->>AuthService: logout(user, response, headers, refreshToken)\n\n    alt Mobile platform without refresh token\n        AuthService-->>AuthController: Throw BadRequestException\n    else Valid request\n        AuthService->>CacheService: deleteCache(refreshToken)\n        CacheService->>Redis: Delete refresh token\n        Redis-->>CacheService: Deletion success\n\n        alt Web/Swagger platform\n            AuthService->>AuthService: Clear HTTP-only cookies\n            Note over AuthService: - Clear access_token cookie- Clear refresh_token cookie\n        else Mobile platform\n            AuthService->>JwtService: verify(refreshToken, refreshSecret)\n            JwtService-->>AuthService: Decoded token\n\n            alt Token user mismatch\n                AuthService-->>AuthController: Throw NOT_ALLOWED error\n            end\n        end\n\n        AuthService-->>AuthController: Logout success\n    end\n\n    AuthController-->>Client: 200 OK + Cleared Cookies\n7. Garbage Collection (Admin Only)\nGET /gc\nTrigger garbage collection (Super Admin only).\nRequest:\nExample :GET /gc HTTP/1.1\nAuthorization: Bearer \ncsrf-token: \napp: MyApp\nversion: 1.0.0\nos: WebResponse:\nExample :{\n  \"success\": true,\n  \"message\": \"Garbage collector invoked\",\n  \"data\": null\n}Sequence Diagram:\nExample :sequenceDiagram\n    participant Client\n    participant AppController\n    participant RolesGuard\n    participant AppService\n\n    Client->>AppController: GET /gc\n    AppController->>RolesGuard: Check SUPER_ADMIN role\n\n    alt User not SUPER_ADMIN\n        RolesGuard-->>AppController: Throw FORBIDDEN error\n    else User is SUPER_ADMIN\n        AppController->>AppService: gc()\n        AppService->>AppService: global.gc()\n        AppService-->>AppController: GC triggered\n        AppController-->>Client: 200 OK\n    end\n🛡️ Security Features\n1. JWT Authentication\n\nAccess Token: Short-lived (1 day) for API access\nRefresh Token: Long-lived (7 days) for token renewal\nCSRF Token: Prevents cross-site request forgery attacks\n\n2. Password Security\n\nbcrypt Hashing: Passwords encrypted with salt rounds\nStrong Password Policy: Minimum 8 characters with complexity requirements\n\n3. Rate Limiting\n\nGlobal Rate Limit: 10 requests per minute per IP\nEndpoint-specific Limits: 60 requests per minute for auth endpoints\n\n4. Security Headers\nExample :helmet.contentSecurityPolicy({\n  directives: {\n    defaultSrc: [\"'self'\"],\n    scriptSrc: [\"'self'\"],\n    styleSrc: [\"'self'\", 'https:'],\n    imgSrc: [\"'self'\", 'data:', 'https:'],\n    connectSrc: [\"'self'\"],\n    fontSrc: [\"'self'\", 'https:'],\n    objectSrc: [\"'none'\"],\n    upgradeInsecureRequests: [],\n  },\n});5. CORS Configuration\n\nEnvironment-based Origins: Different allowed origins for development/production\nCredentials Support: Secure cookie transmission\nCSRF Token Exposure: Safe token sharing via headers\n\n\n📊 Database Schema\nUser Schema\nExample :{\n  _id: ObjectId,\n  fullName: String,      // Trimmed and uppercase getter\n  email: String,         // Unique with role\n  password: String,      // bcrypt hashed\n  role: UserRolesEnums,  // USER | SELLER | ADMIN | SUPER_ADMIN\n  userStatus: UserStatus, // ACTIVE | INACTIVE | BLOCKED | DELETED | NOT_COMPLETED\n  createdAt: Date,\n  updatedAt: Date\n}Indexes\nExample :// Compound unique index\n{ email: 1, role: 1 } // unique: true\n\n// Performance indexes\n{ role: 1 }\n{ userStatus: 1 }\n{ email: 1 }\n🔐 Middleware & Guards\n1. Authentication Guards\nJWTDecodedAuthGuard\n\nPurpose: Validates JWT tokens and CSRF protection\nFeatures:\nToken extraction from cookies/headers\nCSRF token validation\nAutomatic token refresh\nUser status validation\n\n\n\nJWTAuthGuard\n\nPurpose: Sign-in authentication and token generation\nFeatures:\nPassword validation\nJWT token generation\nApplication status checks\nPlatform-specific validations\n\n\n\nRolesGuard\n\nPurpose: Role-based access control\nFeatures:\nRole requirement validation\nMultiple role support\nDecorator-based configuration\n\n\n\n2. Middleware\nLoggerMiddleware\n\nPurpose: Request/response logging\nFeatures:\nWinston-based logging\nRequest tracking\nError logging\n\n\n\nSwaggerAuthMiddleware\n\nPurpose: Protect Swagger documentation\nFeatures:\nBasic authentication\nEnvironment-based credentials\n\n\n\nHeaderValidationGuard\n\nPurpose: Validate required headers\nFeatures:\nApp identifier validation\nVersion checking\nOS validation\n\n\n\nRateLimiterGuard\n\nPurpose: Request rate limiting\nFeatures:\nRedis-based storage\nIP-based limiting\nConfigurable limits\n\n\n\n\n⚠️ Error Handling\nError Types\nExample :enum ErrorTypes {\n  // Authentication Errors\n  INVALID_TOKEN = 'INVALID_TOKEN',\n  TOKEN_REQUIRED = 'TOKEN_REQUIRED',\n  REFRESH_EXPIRED = 'REFRESH_EXPIRED',\n\n  // User Errors\n  NOT_FOUND_USER = 'NOT_FOUND_USER',\n  EMAIL_EXIST = 'EMAIL_EXIST',\n  PASSWORD_NOT_VALID = 'PASSWORD_NOT_VALID',\n\n  // OTP Errors\n  OTP_NOT_EXIST_OR_EXPIRED = 'OTP_NOT_EXIST_OR_EXPIRED',\n  OTP_NOT_MATCH = 'OTP_NOT_MATCH',\n\n  // CSRF Errors\n  CSRF_TOKEN_REQUIRED = 'CSRF_TOKEN_REQUIRED',\n  CSRF_INVALID_TOKEN = 'CSRF_INVALID_TOKEN',\n  WRONG_CSRF_TOKEN = 'WRONG_CSRF_TOKEN',\n\n  // Authorization Errors\n  USER_BLOCKED = 'USER_BLOCKED',\n  USER_DELETED = 'USER_DELETED',\n  ACCOUNT_INACTIVE = 'ACCOUNT_INACTIVE',\n  NOT_ALLOWED = 'NOT_ALLOWED',\n\n  // Application Status\n  APPLICATION_STOPPED = 'APPLICATION_STOPPED',\n  APPLICATION_MAINTENANCE = 'APPLICATION_MAINTENANCE',\n  ANDROID_CRITICAL_UPDATE = 'ANDROID_CRITICAL_UPDATE',\n  IOS_CRITICAL_UPDATE = 'IOS_CRITICAL_UPDATE',\n}Error Response Format\nExample :{\n  \"success\": false,\n  \"message\": \"Error description\",\n  \"error\": {\n    \"code\": \"ERROR_CODE\",\n    \"details\": \"Additional error information\"\n  }\n}\n🧪 Testing\nRunning Tests\nExample :# Unit tests\nnpm run test\n\n# End-to-end tests\nnpm run test:e2e\n\n# Test coverage\nnpm run test:cov\n\n# Test in watch mode\nnpm run test:watchTest Structure\nExample :test/\n├── unit/\n│   ├── auth/\n│   ├── users/\n│   └── cache/\n├── e2e/\n│   └── auth.e2e-spec.ts\n└── fixtures/\n    └── test-data.ts\n🚀 Deployment\nDocker Deployment\nExample :# Build image\ndocker build -t auth-backend .\n\n# Run container\ndocker run -p 80:80 --env-file .env auth-backendDocker Compose\nExample :version: '3.8'\nservices:\n  app:\n    build: .\n    ports:\n      - '80:80'\n    environment:\n      - NODE_ENV=production\n    depends_on:\n      - mongodb\n      - redis\n\n  mongodb:\n    image: mongo:5.0\n    environment:\n      MONGO_INITDB_ROOT_USERNAME: admin\n      MONGO_INITDB_ROOT_PASSWORD: password\n\n  redis:\n    image: redis:6.0-alpine\n    command: redis-server --requirepass passwordProduction Checklist\n\n Environment variables configured\n Database connections established\n Redis cache configured\n SSL certificates installed\n CORS origins configured\n Rate limiting enabled\n Logging configured\n Health checks implemented\n Monitoring setup\n Backup strategy in place\n\n\n📈 Monitoring & Logging\nHealth Checks\nExample :GET /healthLogging Levels\n\nError: Application errors and exceptions\nWarn: Warning messages and potential issues\nInfo: General application information\nDebug: Detailed debugging information\n\nMetrics\n\nRequest/response times\nAuthentication success/failure rates\nToken refresh rates\nCache hit/miss ratios\nError rates by endpoint\n\n\n🤝 Contributing\n\nFork the repository\nCreate a feature branch (git checkout -b feature/amazing-feature)\nCommit your changes (git commit -m 'Add some amazing feature')\nPush to the branch (git push origin feature/amazing-feature)\nOpen a Pull Request\n\n\n📄 License\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n📞 Support\nFor support, email support@example.com or join our Slack channel.\n\n🔗 Links\n\nNestJS Documentation\nMongoDB Documentation\nRedis Documentation\nJWT Documentation\n\n\nBuilt with ❤️ using NestJS\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MailerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CacheModule\n\n\n\ncluster_CacheModule_exports\n\n\n\ncluster_CacheModule_providers\n\n\n\ncluster_DatabaseModule\n\n\n\ncluster_DatabaseModule_providers\n\n\n\ncluster_MailerModule\n\n\n\ncluster_MailerModule_exports\n\n\n\ncluster_MailerModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCacheModule\n\nCacheModule\n\nAuthModule -->\n\nCacheModule->AuthModule\n\n\n\nAppModule -->\n\nCacheModule->AppModule\n\n\n\n\n\nCacheService \n\nCacheService \n\nCacheService  -->\n\nCacheModule->CacheService \n\n\n\n\n\nREDIS \n\nREDIS \n\nREDIS  -->\n\nCacheModule->REDIS \n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nMailerModule\n\nMailerModule\n\nAuthModule -->\n\nMailerModule->AuthModule\n\n\n\nAppModule -->\n\nMailerModule->AppModule\n\n\n\n\n\nMailerService \n\nMailerService \n\nMailerService  -->\n\nMailerModule->MailerService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCacheService\n\nCacheService\n\nCacheModule -->\n\nCacheService->CacheModule\n\n\n\n\n\nDatabaseService\n\nDatabaseService\n\nDatabaseModule -->\n\nDatabaseService->DatabaseModule\n\n\n\n\n\nMailerService\n\nMailerService\n\nMailerModule -->\n\nMailerService->MailerModule\n\n\n\n\n\nUsersRepository\n\nUsersRepository\n\nUsersModule -->\n\nUsersRepository->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    18 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ErrorConfig   (src/.../error-config.ts)\n                        \n                        \n                            TDocument   (src/.../base.abstract.repository.ts)\n                        \n                        \n                            UsersDocument   (src/.../user.entity.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/types/error-config.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorConfig\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/utils/base.abstract.repository.ts\n    \n    \n        \n            \n                \n                    \n                    TDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/entities/user.entity.ts\n    \n    \n        \n            \n                \n                    \n                    UsersDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ACCESS_NOT_ALLOW_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            ACCOUNT_INACTIVE_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            ACCOUNT_SUSPENDED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            ALLOW_UR   (src/.../allow-edit-profile.decorator.ts)\n                        \n                        \n                            ALLOW_With_UNDER_REVIEW   (src/.../allow-edit-profile.decorator.ts)\n                        \n                        \n                            ANDROID_CRITICAL_UPDATE_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            ApiFile   (src/.../api-file.decorator.ts)\n                        \n                        \n                            ApiMultiFile   (src/.../api-file.decorator.ts)\n                        \n                        \n                            APPLICATION_MAINTENANCE_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            APPLICATION_STOPPED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            AppOptions   (src/.../winston.helper.ts)\n                        \n                        \n                            AuthUser   (src/.../user.decorator.ts)\n                        \n                        \n                            CLOSED_ORDER_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            COMPANY_ISSUE_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            CSRF_INVALID_TOKEN_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            CSRF_TOKEN_EXPIRED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            CSRF_TOKEN_REQUIRED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            DUPLICATED_ERROR_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            EMAIL_VERIFICATION_DESCRIPTION   (src/.../constant.ts)\n                        \n                        \n                            EMAIL_VERIFICATION_TITLE   (src/.../constant.ts)\n                        \n                        \n                            ERROR_IN_UPDATE_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            errorConfigs   (src/.../factory.error.ts)\n                        \n                        \n                            escapeRegex   (src/.../escapeRegex.ts)\n                        \n                        \n                            EXIST_EMAIL_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            EXIST_PHONE_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            firebaseConfig   (src/.../firebase.config.ts)\n                        \n                        \n                            INVALID_TOKEN_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            INVALID_URL_PARAMS_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            IOS_CRITICAL_UPDATE_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (src/.../public.decorator.ts)\n                        \n                        \n                            MANY_ATTEMPT_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            NOT_ALLOWED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            NOT_FOUND_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            NOT_FOUND_PRODUCT_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            OTP_NOT_EXIST_OR_EXPIRED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            OTP_NOT_MATCH_WITH_CURRENT_OTP   (src/.../messages.constant.ts)\n                        \n                        \n                            PASSWORD_NOT_VALID_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            PERMISSION_DENIED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            Public   (src/.../public.decorator.ts)\n                        \n                        \n                            REFRESH_EXPIRED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            RequestHeaders   (src/.../signup.decorator.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            SKIP_JWT   (src/.../skip-jwt.decorator.ts)\n                        \n                        \n                            SKIP_JWT_TOKEN   (src/.../skip-jwt.decorator.ts)\n                        \n                        \n                            THERE_IS_PENDING_REQUEST   (src/.../messages.constant.ts)\n                        \n                        \n                            TOKEN_EXPIRED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            TOKEN_REQUIRED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            UNAUTHORIZED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            USER_BLOCKED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            USER_DELETED_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            USER_GOV_DIS_NOT_FOUND_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            USER_NOT_FOUND_MESSAGE   (src/.../messages.constant.ts)\n                        \n                        \n                            UserSchema   (src/.../user.entity.ts)\n                        \n                        \n                            WRONG_CSRF_TOKEN_MESSAGE   (src/.../messages.constant.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/utils/messages/messages.constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ACCESS_NOT_ALLOW_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'you can not access this endpoint'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ACCOUNT_INACTIVE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Your account is inactive, please contact support to activate your account.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ACCOUNT_SUSPENDED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Your account is suspended, please contact support.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ANDROID_CRITICAL_UPDATE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Android critical update is required, please update your app.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        APPLICATION_MAINTENANCE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Application is under maintenance, please try again later.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        APPLICATION_STOPPED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Application is stopped, please try again later.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CLOSED_ORDER_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'closed order'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COMPANY_ISSUE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'This company not allowed to added because there no vertical or no country with this data'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CSRF_INVALID_TOKEN_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CSRF token is invalid.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CSRF_TOKEN_EXPIRED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CSRF token has expired.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CSRF_TOKEN_REQUIRED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CSRF token is required.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DUPLICATED_ERROR_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'this item is already exist'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ERROR_IN_UPDATE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR IN update data'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXIST_EMAIL_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'There are user found with this email'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EXIST_PHONE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'There are user found with this phone'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INVALID_TOKEN_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid token, please login again.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INVALID_URL_PARAMS_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Invalid url params! please check the url'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IOS_CRITICAL_UPDATE_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'iOS critical update is required, please update your app.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MANY_ATTEMPT_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'there is anther user with this data'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_ALLOWED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'User does not have permission to access the desired resource.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'this item is not found in this model'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NOT_FOUND_PRODUCT_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'product is not found'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTP_NOT_EXIST_OR_EXPIRED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Otp not exist or expired.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        OTP_NOT_MATCH_WITH_CURRENT_OTP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Otp not match with current otp.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PASSWORD_NOT_VALID_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password is not valid, please try again.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PERMISSION_DENIED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'you can  not do this action'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REFRESH_EXPIRED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Refresh token expired, please login again.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THERE_IS_PENDING_REQUEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'there is pending request'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_EXPIRED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Token expired, please login again.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TOKEN_REQUIRED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'token is required'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UNAUTHORIZED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'UnAuthorization'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_BLOCKED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'User is blocked, please contact support.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_DELETED_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'User is deleted, please contact support.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_GOV_DIS_NOT_FOUND_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'User Gov , Dis Not Found'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_NOT_FOUND_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'user not found'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WRONG_CSRF_TOKEN_MESSAGE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Wrong CSRF token.'\n                    \n                \n\n\n        \n    \n\n    src/utils/decorators/allow-edit-profile.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALLOW_UR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(ALLOW_With_UNDER_REVIEW, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALLOW_With_UNDER_REVIEW\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ALLOW_With_UNDER_REVIEW'\n                    \n                \n\n\n        \n    \n\n    src/utils/decorators/api-file.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  fieldName: string = 'file',\n  options: { required?: boolean } = { required: true },\n): MethodDecorator => {\n  return ApiBody({\n    schema: {\n      type: 'object',\n      properties: {\n        [fieldName]: {\n          type: 'string',\n          format: 'binary',\n        },\n      },\n      required: options.required ? [fieldName] : [],\n    },\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ApiMultiFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fileName: string = 'files'): MethodDecorator =>\n  (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    ApiBody({\n      type: 'multipart/form-data',\n      required: true,\n      schema: {\n        type: 'object',\n        properties: {\n          [fileName]: {\n            type: 'array',\n            items: {\n              type: 'string',\n              format: 'binary',\n            },\n          },\n        },\n      },\n    })(target, propertyKey, descriptor);\n  }\n                    \n                \n\n\n        \n    \n\n    src/utils/winston.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AppOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  cors: true,\n  logger: WinstonModule.createLogger({\n    transports: [\n      new transports.File({\n        filename:\n          'logs/Combined-' + new Date(Date.now()).toDateString() + '.log',\n        level: 'info',\n        handleExceptions: true,\n      }),\n      new transports.File({\n        filename: 'logs/Errors-' + new Date(Date.now()).toDateString() + '.log',\n        level: 'error',\n      }),\n      new transports.Console(),\n    ],\n    exceptionHandlers: [\n      new transports.File({ filename: 'logs/exceptions.log' }),\n    ],\n\n    format: winston.format.combine(\n      winston.format.timestamp({\n        format: 'DD/MM/YYYY, HH:mm:ss',\n      }),\n      winston.format.printf((error) => {\n        const formatContext = (ctx: any) => {\n          if (ctx === null) return 'null';\n          if (ctx === undefined) return 'undefined';\n          if (typeof ctx === 'object') return JSON.stringify(ctx);\n          return String(ctx);\n        };\n        return `[NEST] --> ${[error.timestamp]}  [${formatContext(error.context)}] :  ${error.level}: ${formatContext(error.message)}`;\n      }),\n      winston.format.colorize({\n        all: true,\n        colors: { info: 'green', error: 'red' },\n      }),\n    ),\n  }),\n}\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = (request as RequestWithUser).user;\n    return user;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/utils/constant/constant.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EMAIL_VERIFICATION_DESCRIPTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'In order to start using ClickUp and activate your roadside assistance, you need to verify your email.'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EMAIL_VERIFICATION_TITLE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email Verification'\n                    \n                \n\n\n        \n    \n\n    src/utils/Errors/factory.error.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorConfigs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  [ErrorTypes.WRONG_CSRF_TOKEN]: {\n    message: WRONG_CSRF_TOKEN_MESSAGE,\n    flag: 134,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.CSRF_TOKEN_EXPIRED]: {\n    message: CSRF_TOKEN_EXPIRED_MESSAGE,\n    flag: 133,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.CSRF_INVALID_TOKEN]: {\n    message: CSRF_INVALID_TOKEN_MESSAGE,\n    flag: 132,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.CSRF_TOKEN_REQUIRED]: {\n    message: CSRF_TOKEN_REQUIRED_MESSAGE,\n    flag: 131,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.TOKEN_EXPIRED]: {\n    message: TOKEN_EXPIRED_MESSAGE,\n    flag: 130,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.INVALID_TOKEN]: {\n    message: INVALID_TOKEN_MESSAGE,\n    flag: 129,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.ACCOUNT_INACTIVE]: {\n    message: ACCOUNT_INACTIVE_MESSAGE,\n    flag: 101,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.REFRESH_EXPIRED]: {\n    message: REFRESH_EXPIRED_MESSAGE,\n    flag: 100,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.IOS_CRITICAL_UPDATE]: {\n    message: IOS_CRITICAL_UPDATE_MESSAGE,\n    flag: 102,\n    status: 426,\n  },\n  [ErrorTypes.ANDROID_CRITICAL_UPDATE]: {\n    message: ANDROID_CRITICAL_UPDATE_MESSAGE,\n    flag: 103,\n    status: 426,\n  },\n  [ErrorTypes.APPLICATION_MAINTENANCE]: {\n    message: APPLICATION_MAINTENANCE_MESSAGE,\n    flag: 104,\n    status: HttpStatus.SERVICE_UNAVAILABLE,\n  },\n  [ErrorTypes.APPLICATION_STOPPED]: {\n    message: APPLICATION_STOPPED_MESSAGE,\n    flag: 105,\n    status: HttpStatus.SERVICE_UNAVAILABLE,\n  },\n  [ErrorTypes.PASSWORD_NOT_VALID]: {\n    message: PASSWORD_NOT_VALID_MESSAGE,\n    flag: 106,\n    status: HttpStatus.BAD_REQUEST,\n  },\n  [ErrorTypes.USER_BLOCKED]: {\n    message: USER_BLOCKED_MESSAGE,\n    flag: 107,\n    status: HttpStatus.FORBIDDEN,\n  },\n  [ErrorTypes.USER_DELETED]: {\n    message: USER_DELETED_MESSAGE,\n    flag: 108,\n    status: HttpStatus.GONE,\n  },\n  [ErrorTypes.SUSPENDED]: {\n    message: ACCOUNT_SUSPENDED_MESSAGE,\n    flag: 109,\n    status: HttpStatus.LOCKED,\n  },\n  [ErrorTypes.OTP_NOT_MATCH]: {\n    message: OTP_NOT_MATCH_WITH_CURRENT_OTP,\n    flag: 110,\n    status: HttpStatus.BAD_REQUEST,\n  },\n  [ErrorTypes.OTP_NOT_EXIST_OR_EXPIRED]: {\n    message: OTP_NOT_EXIST_OR_EXPIRED_MESSAGE,\n    flag: 111,\n    status: HttpStatus.NOT_FOUND,\n  },\n  [ErrorTypes.ACCESS]: {\n    message: ACCESS_NOT_ALLOW_MESSAGE,\n    flag: 112,\n    status: HttpStatus.FORBIDDEN,\n  },\n  [ErrorTypes.NOT_FOUND]: {\n    message: NOT_FOUND_MESSAGE,\n    flag: 113,\n    status: HttpStatus.NOT_FOUND,\n  },\n  [ErrorTypes.NOT_FOUND_PRODUCT]: {\n    message: NOT_FOUND_PRODUCT_MESSAGE,\n    flag: 114,\n    status: HttpStatus.NOT_FOUND,\n  },\n  [ErrorTypes.EMAIL_EXIST]: {\n    message: EXIST_EMAIL_MESSAGE,\n    flag: 115,\n    status: HttpStatus.BAD_REQUEST,\n  },\n  [ErrorTypes.PHONE_EXIST]: {\n    message: EXIST_PHONE_MESSAGE,\n    flag: 116,\n    status: HttpStatus.BAD_REQUEST,\n  },\n  [ErrorTypes.NOT_FOUND_USER]: {\n    message: USER_NOT_FOUND_MESSAGE,\n    flag: 117,\n    status: HttpStatus.NOT_FOUND,\n  },\n  [ErrorTypes.MANY_ATTEMPT]: {\n    message: MANY_ATTEMPT_MESSAGE,\n    flag: 118,\n    status: HttpStatus.NOT_ACCEPTABLE,\n  },\n  [ErrorTypes.PERMISSION]: {\n    message: PERMISSION_DENIED_MESSAGE,\n    flag: 119,\n    status: HttpStatus.FORBIDDEN,\n  },\n  [ErrorTypes.NOT_COMPLETED]: {\n    message: COMPANY_ISSUE_MESSAGE,\n    flag: 120,\n    status: HttpStatus.BAD_REQUEST,\n  },\n  [ErrorTypes.DUPLICATED]: {\n    message: DUPLICATED_ERROR_MESSAGE,\n    flag: 121,\n    status: HttpStatus.BAD_REQUEST,\n  },\n  [ErrorTypes.ERROR_UPDATE]: {\n    message: ERROR_IN_UPDATE_MESSAGE,\n    flag: 122,\n    status: HttpStatus.CONFLICT,\n  },\n  [ErrorTypes.PENDING_REQUESTS]: {\n    message: THERE_IS_PENDING_REQUEST,\n    flag: 123,\n    status: HttpStatus.NOT_ACCEPTABLE,\n  },\n  [ErrorTypes.INVALID_URL_PARAMS]: {\n    message: INVALID_URL_PARAMS_MESSAGE,\n    flag: 124,\n    status: HttpStatus.BAD_REQUEST,\n  },\n  [ErrorTypes.CLOSED_ORDER]: {\n    message: CLOSED_ORDER_MESSAGE,\n    flag: 125,\n    status: HttpStatus.CONFLICT,\n  },\n  [ErrorTypes.TOKEN_REQUIRED]: {\n    message: TOKEN_REQUIRED_MESSAGE,\n    flag: 126,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.NOT_ALLOWED]: {\n    message: NOT_ALLOWED_MESSAGE,\n    flag: 127,\n    status: HttpStatus.UNAUTHORIZED,\n  },\n  [ErrorTypes.USER_GOV_DIS_NOT_FOUND]: {\n    message: USER_GOV_DIS_NOT_FOUND_MESSAGE,\n    flag: 128,\n    status: HttpStatus.BAD_REQUEST,\n  },\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/SQL-Injection/escapeRegex.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        escapeRegex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n                    \n                \n\n\n        \n    \n\n    src/utils/firebase/firebase.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        firebaseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: process.env.FIREBASE_TYPE,\n  projectId: process.env.FIREBASE_PROJECT_ID,\n  privateKeyId: process.env.FIREBASE_PRIVATE_KEY_ID,\n  privateKey: process.env.FIREBASE_PRIVATE_KEY,\n  clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\n  clientId: process.env.FIREBASE_CLIENT_ID,\n  authUri: process.env.FIREBASE_AUTH_URI,\n  tokenUri: process.env.FIREBASE_TOKEN_URI,\n  authProviderX509CertUrl: process.env.FIREBASE_AUTH_PROVIDER_X509_CERT,\n  clientC509CertUrl: process.env.FIREBASE_CLIENT_X509_CERT,\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/decorators/public.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/signup.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequestHeaders\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  async (property: string | number | symbol, ctx: ExecutionContext) => {\n    const headers = ctx.switchToHttp().getRequest().headers;\n\n    if (\n      typeof property === 'string' ||\n      typeof property === 'number' ||\n      typeof property === 'symbol'\n    ) {\n      return headers[property];\n    }\n    return headers;\n  },\n)\n                    \n                \n\n\n        \n    \n\n    src/auth/decorators/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: UserRolesEnums[]) =>\n  SetMetadata('roles', roles)\n                    \n                \n\n\n        \n    \n\n    src/utils/decorators/skip-jwt.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SKIP_JWT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(SKIP_JWT_TOKEN, true)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SKIP_JWT_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SKIP_JWT_TOKEN'\n                    \n                \n\n\n        \n    \n\n    src/users/entities/user.entity.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(User)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
